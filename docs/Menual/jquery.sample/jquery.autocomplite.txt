
Jquery UI 라이브러리를 사용한 autocomplite 구현 셈플

    참조 소스
        zes.openworks.intra.mgr 패키지
        zes.openworks.intra.mgr.MgrController.ajaxMgrSearchList(MgrVO, ModelMap)
        /WEB-INF/pages/component/domain/BD_DomainList.jsp
        /WEB-INF/pages/component/domain/INC_InsertDomainForm.jsp

1. Controller/Service/DAO
    특별한 변경점은 responseJson() 메소드를 통해서 json 타입으로 변환 응답 형태로 변경

        /**
         * 담당자 정보 검색 목록 조회(자동완성)
         */
        @RequestMapping(value = "ND_mgrSearchList.do", method = RequestMethod.POST)
        public String ajaxMgrSearchList(MgrVO vo, ModelMap model) {
    
            return responseJson(model, service.mgrSearchList(vo));
        }

2. IBatis SqlMapper 쿼리 셈플

    - 기존쿼리를 이용
      기존쿼리를 이용하기 위해서는 아래와 같은 변경이 필요하다.
          VO 클레스에 아래 두개의 멤버 추가와 setter/setter를 설정
            /** Jquery Autocomplite 표시문자 설정 */
            private String label;
            /** Jquery Autocomplite 항목 선택시 설정값 */
            private String value;
            
          Query에도 두개의 결과를 추가
            (DEPT_NM || '/' ||MGR_NM) AS label, // 화면표시용
            A.MGR_NM AS value                   // 항목 선택시 설정 값

    - resultMap을 이용
        <!-- 담당자 검색 목록 조회 (ajax autocomplite) -->
        <resultMap class="java.util.HashMap" id="ajaxMgrSearchMap">
            <result property="label"        column="label" />
            <result property="value"        column="value" />
            <result property="mgrId"        column="mgrId" />
            <result property="mgrNm"        column="mgrNm" />
            <result property="deptCd"       column="deptCd" />
            <result property="deptNm"       column="deptNm" />
            <result property="useYn"        column="useYn" />
        </resultMap>
        <select id="ajaxMgrSearchList" resultMap="ajaxMgrSearchMap" parameterClass="mgrVO">
            SELECT
                (B.DEPT_NM || '/' || A.MGR_NM) AS label,
                A.MGR_NM AS value,
                A.DEPT_CD AS deptCd,
                B.DEPT_NM AS deptNm,
                A.MGR_ID AS mgrId,
                A.MGR_NM AS mgrNm,
                A.USE_YN AS useYn
            FROM
                OP_MGR A, OP_DEPT B
            WHERE
                A.DEPT_CD = B.DEPT_CD
                <isNotEmpty property="useYn" prepend="AND">
                    A.USE_YN = #useYn#
                </isNotEmpty>
                <isNotEmpty property="deptCd" prepend="AND">
                    A.DEPT_CD = #deptCd#
                </isNotEmpty>
                <isNotEmpty property="mgrId" prepend="AND">
                    A.MGR_ID = #mgrId#
                </isNotEmpty>
                <isNotEmpty property="mgrNm" prepend="AND">
                    A.MGR_NM LIKE '%' || #mgrNm# || '%'
                </isNotEmpty >
                <isNotEmpty property="email" prepend="AND">
                    A.EMAIL   = #email#
                </isNotEmpty>
        </select>

3. UI 단 설정

    - jquery UI 라이브러리 로딩
        <op:jsTag type="spi" items="ui" />

    - $().ready(function() { } 함수 내에 아래 셈플을 수정하여 적용

        /** 대상 input tag에 autocomplete 설정*/
        $("#selector").autocomplete({

            /* 최소입력 글자수(아래 경우 두자 이상이 되어야만 서버로 요청을 전송)
            minLength: ($.browser.mozilla ? 1: 2),
            
            /* 요청대기 시간. 파이어폭스의 한글 처리에 따른 차별적 선언 */
            delay: ($.browser.mozilla ? 800: 10),

            /* ajax를 통한 데이터 콜
            source: function(request, response) {

                /*
                 * 반드시 $ajax() 메소드가 아니어도 상관없으며, 중요한 것은 데이터 유형으로 
                 * java로 비교한다면 List<Map<String, String>> 형태의 json으로 변형함
                 * 예 : [{label:표시문자 1, value:선택시표시값 1, key1:val1, ...},{label:표시문자 2, value:선택시표시값 2, key2:val2,  ...}]
                 */
                $.ajax({

                    /* 대상 URI */
                    url: "<c:url value="/intra/mgr/ND_mgrSearchList.do" />",

                    /* 
                     * Controller에 명시된 method = RequestMethod.POST/GET 방식과 동일 하게 설정
                     * 기본 값은 post 이므로 RequestMethod.GET 인경우 표기는 필요하지 않음
                     */
                    type: "post",

                    /* 
                     * 결과 유형 text, json 등을 지정할 수 있으며 이 지정은 Controller 단에
                     * responseJson(), responseText() 에따라서 변경 단! responseText의 경우는
                     * success 메소드 내에 데이터 형태를 List<Map<String, String>> 형태의 json 코드로
                     * 변환해 주어야 한다 
                     * 예 : [{label:표시문자 1, value:선택시표시값 1, key1:val1, ...},{label:표시문자 2, value:선택시표시값 2, key2:val2,  ...}]
                     */
                    dataType: "json",
                    
                    /* 
                     * 파라미터를 정의 한다. 아래 셈플의 경우 DB query(IBatis)에 매핑될 #q_rowPerPage# 이런 변수
                     * q_rowPerPage : 불러온 데이터 갯수(페이징 동일), usrYn : 사용여부, mgrNm : 관리자명
                     * 본 셈플에서 최종 결과로 요청되는 URL 은 다음과 같다.
                     * /intra/mgr/ND_mgrSearchList.do?q_rowPerPage=20&useYn=Y&mgrNm=request.term(입력값/검색조)
                     * 물론 본 셈플은 post 이기 때문에 위와 같은 get 방식은 아니지만 get 방식일 경우의 셈플로 생각하기 바란다.
                     */
                    data: {
                        q_rowPerPage: 20,
                        useYn: "Y",
                        mgrNm: request.term
                    },
                    /*
                     * 응답 결과를 처리
                     * responseText() 를 사용하여 응답 하는 경우에는 split 등으로 배열 형태로 데이터를
                     * 가공해 주어야 하며, 위의 데이터 예와 같이 만들어 주어야 함
                     * 따라서 쿼리에서 맞춰서 값을 넘겨 주는 것이 편리함
                     */
                    success: function( data ) {
                        response(data);
                    }
                });
            },
            /* 자동완성 항목을 클릭한 경우 엑션 항상 ui.item 이후 결과 키값을 지정 */
            select: function( event, ui ) {
                /* 담당자 부서명을 설정 */
                $("#chargeDeptNm").val(ui.item.deptNm);

                /* 담당자명을 설정 */
                $("#chargerNm").val(ui.item.mgrNm);

                /* 담당자아이디을 설정 */
                $("#chargerId").val(ui.item.mgrId);

                /* 담당자 부서코드를 설정 */
                $("#chargeDeptCode").val(ui.item.deptCd);
            },
            /* 선택완료 상태에서 최종 취해야 할 엑션 정의. 예: 입력폼 초기화*/
            close: function(event, ui) {
                $("#chargerNm").val("");
            }
        });