<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="_explorer">
	<sql id="searchWhere">
	    <if test="q_goodsTyCd != null and q_goodsTyCd == '1002'"><!-- SaaS -->
        	AND GOODS_CODE IN (SELECT A.GOODS_CODE
                  			     FROM TST_GOOD_CATE_I A, TST_CATE_MGMT_M B
                    			WHERE A.CTGRY_CODE = B.CTGRY_CODE
                      			  AND B.CTGRY_CL_CD IN (1002)
                 				GROUP BY A.GOODS_CODE
                 			  )
   		</if>
  		<if test="q_goodsTyCd != null and q_goodsTyCd =='1003'"><!-- IaaS -->
  		  	AND GOODS_CODE IN (SELECT A.GOODS_CODE
                   			     FROM TST_GOOD_CATE_I A, TST_CATE_MGMT_M B
                  			    WHERE A.CTGRY_CODE = B.CTGRY_CODE
                    		      AND B.CTGRY_CL_CD IN (1003)
               				    GROUP BY A.GOODS_CODE
               				  ) 	
  		</if>
  		<if test="q_goodsTyCd != null and q_goodsTyCd == '1001'"><!-- PaaS -->
  		/* _check.point*/
        	AND GOODS_CODE IN (SELECT A.GOODS_CODE
                  			     FROM TST_GOOD_CATE_I A, TST_CATE_MGMT_M B
                    			WHERE A.CTGRY_CODE = B.CTGRY_CODE
                      			  AND B.CTGRY_CL_CD IN (1001)
                 				GROUP BY A.GOODS_CODE
                 			  )
   		</if>
  		<if test="q_goodsTyCd != null and q_goodsTyCd == '1004'"><!-- PaaS -->
  		/* _check.point*/
        	AND GOODS_CODE IN (SELECT A.GOODS_CODE
                  			     FROM TST_GOOD_CATE_I A, TST_CATE_MGMT_M B
                    			WHERE A.CTGRY_CODE = B.CTGRY_CODE
                      			  AND B.CTGRY_CL_CD IN (1004)
                 				GROUP BY A.GOODS_CODE
                 			  )
   		</if>
	    <choose>
	        <when test="q_goodsRegistSttus != null and q_goodsRegistSttus != ''">	<!-- 승인대기 -->
	        /* _check.pointCs*/
	            AND GOODS_REGIST_STTUS = #{q_goodsRegistSttus}
	        </when>
	        <when test="q_registSttus != null and q_registSttus != ''">				<!-- 검토대기 -->
	        /* _check.pointEs*/
	            AND GOODS_REGIST_STTUS IN (${q_registSttus})
	        </when>
	        <otherwise>																<!-- 신규승인 -->
	            AND GOODS_REGIST_STTUS &gt;= 1006
	            AND CONFM_DT IS NOT NULL
	        </otherwise>
	    </choose>
    </sql>

	<!-- 사용자유형 갯수 -->
	<select id="typeOfUserCount" parameterType="ExplorerVO" resultType="int">
		/* explorer.typeOfUserCount */
		SELECT COUNT(INDVDLZ_CD)
          FROM OP_CODE_INDVDLZ
         WHERE USE_YN = 'Y'
           AND LANG_CODE = '00'
           AND GROUP_CD = 5
	</select>
	<!-- 유형별 회원 현황 -->
    <select id="typeOfUserList" parameterType="ExplorerVO" resultType="ExplorerVO">
        /* explorer.typeOfUserList */
        SELECT B.nationTy AS nationTy, B.userTyNm AS userTyNm, B.userCnt AS userCnt
     		 , CASE WHEN nationTy = '국내' 
				    THEN (SELECT COUNT(USER_ID) 
				            FROM OP_USER 
						   WHERE USER_STTUS_CD = 1001
				             AND NATION_CODE = '410')
				    ELSE (SELECT COUNT(USER_ID) 
				            FROM OP_USER 
						   WHERE USER_STTUS_CD = 1001
				             AND NATION_CODE != '410')
				END 									AS totUserCnt
  		  FROM
       (SELECT 
		       '국내' AS nationTy
			   , A.INDVDLZ_CD_NM		AS userTyNm
		       , COUNT(A.USER_ID) 		AS userCnt
		  FROM (
		        SELECT OU.NATION_CODE
			         , OCI.INDVDLZ_CD_NM
			         , OU.USER_ID
			      FROM (SELECT INDVDLZ_CD, INDVDLZ_CD_NM 
						  FROM OP_CODE_INDVDLZ
						 WHERE GROUP_CD = 5
						   AND USE_YN = 'Y'
						   AND LANG_CODE = '00'
					   ) OCI
				  LEFT OUTER JOIN 
				       OP_USER OU
				    ON OCI.INDVDLZ_CD = OU.USER_TY_CD
				   AND OU.USER_STTUS_CD = 1001
				   AND OU.NATION_CODE = '410'
			   ) A
		 GROUP BY A.INDVDLZ_CD_NM
		 UNION ALL
		SELECT 
		       '해외' AS nationTy
			   , A.INDVDLZ_CD_NM 		AS userTyNm
		       , COUNT(A.USER_ID)		AS userCnt
		  FROM (
		        SELECT OU.NATION_CODE
			         , OCI.INDVDLZ_CD_NM
			         , OU.USER_ID
			      FROM (SELECT INDVDLZ_CD, INDVDLZ_CD_NM 
						  FROM OP_CODE_INDVDLZ
						 WHERE GROUP_CD = 5
						   AND USE_YN = 'Y'
						   AND LANG_CODE = '00'
					   ) OCI
				  LEFT OUTER JOIN 
				       OP_USER OU
				    ON OCI.INDVDLZ_CD = OU.USER_TY_CD
				   AND OU.USER_STTUS_CD = 1001
				   AND OU.NATION_CODE != '410'
			   ) A
		 GROUP BY A.INDVDLZ_CD_NM
		 ) B
    </select>
    <!-- 서비스 언어 갯수 -->
    <select id="svcLangCount" parameterType="ExplorerVO" resultType="int">
		/* explorer.svcLangCount */
		SELECT COUNT(LANG_CODE)
          FROM TCO_SVC_LANG_C
         WHERE DOMAIN_CD IS NOT NULL
	</select>
    <!-- 유형별 서비스 현황 -->
    <select id="typeOfGoodsList" parameterType="ExplorerVO" resultType="ExplorerVO">
    	/* _explorer.typeOfGoodsList */
    	<!-- SELECT IV.ctgryCd AS ctgryCd
    	     , DECODE(IV.ctgryCd,1003,'IT전문가 서비스','솔루션/서비스') AS ctgryNm
     		 , IV.LANG_NM AS langNm, IV.goodsCnt AS goodsCnt
     		 , CASE WHEN IV.ctgryCd = 1003 
                    THEN (SELECT COUNT(GOODS_CODE)
		          			FROM TST_GOOD_INFO_I 
				 		   WHERE GOODS_REGIST_STTUS != 1001
			       			 AND CONFM_DT IS NOT NULL
			       			 AND MNGR_DELETE_AT = 'N' 
							 AND GOODS_ACTVTY_AT = 'Y' 
				   			 AND GOODS_CODE IN (SELECT A.GOODS_CODE
		                  	                      FROM TST_GOOD_CATE_I A
		                  		               		 , TST_CATE_MGMT_M B
		                                   		 WHERE A.CTGRY_CODE = B.CTGRY_CODE
		                   					 	   AND B.CTGRY_CL_CD = 1003
		                                   		 GROUP BY A.GOODS_CODE
				                         	   )
				  		 )
	                ELSE (SELECT COUNT(GOODS_CODE)
		                    FROM TST_GOOD_INFO_I 
				           WHERE GOODS_REGIST_STTUS != 1001
			                 AND CONFM_DT IS NOT NULL
			                 AND MNGR_DELETE_AT = 'N' 
							 AND GOODS_ACTVTY_AT = 'Y' 
				             AND GOODS_CODE IN (SELECT A.GOODS_CODE
		                  	                      FROM TST_GOOD_CATE_I A
		                  		                     , TST_CATE_MGMT_M B
		                                         WHERE A.CTGRY_CODE = B.CTGRY_CODE
		                   					       AND B.CTGRY_CL_CD = 1002
		                                         GROUP BY A.GOODS_CODE
				                               )
				         )
                END										AS totGoodsCnt
          FROM (SELECT SLC.LANG_CODE
                     , SLC.LANG_NM
                     , 1002 AS ctgryCd
		             , COUNT(GII.GOODS_CODE) AS goodsCnt
		          FROM (SELECT LANG_CODE, LANG_NM 
				          FROM TCO_SVC_LANG_C
				         WHERE DOMAIN_CD IS NOT NULL
				       ) SLC
		          LEFT OUTER JOIN
		               (SELECT GOODS_CODE
		                     , LANG_CODE
		                  FROM TST_GOOD_INFO_I 
				         WHERE GOODS_REGIST_STTUS != 1001
			               AND CONFM_DT IS NOT NULL
			               AND MNGR_DELETE_AT = 'N' 
						   AND GOODS_ACTVTY_AT = 'Y' 
				           AND GOODS_CODE IN (SELECT A.GOODS_CODE
		                  	                    FROM TST_GOOD_CATE_I A
		                  		                   , TST_CATE_MGMT_M B
		                                       WHERE A.CTGRY_CODE = B.CTGRY_CODE
		                   				         AND B.CTGRY_CL_CD = 1002
		                                       GROUP BY A.GOODS_CODE
				                             ) 
				       ) GII
		            ON SLC.LANG_CODE = GII.LANG_CODE
		         GROUP BY SLC.LANG_CODE
         		 UNION ALL
	         	SELECT SLC.LANG_CODE
	              	 , SLC.LANG_NM 
	              	 , 1003 AS ctgryCd
		          	 , COUNT(GII.GOODS_CODE) AS goodsCnt
			   	  FROM (SELECT LANG_CODE, LANG_NM 
				       	  FROM TCO_SVC_LANG_C
				 	  	 WHERE DOMAIN_CD IS NOT NULL
					   ) SLC
			      LEFT OUTER JOIN
			           (SELECT GOODS_CODE
			                 , LANG_CODE
			              FROM TST_GOOD_INFO_I 
					     WHERE GOODS_REGIST_STTUS != 1001
				           AND CONFM_DT IS NOT NULL
					       AND MNGR_DELETE_AT = 'N' 
						   AND GOODS_ACTVTY_AT = 'Y' 
					       AND GOODS_CODE IN (SELECT A.GOODS_CODE
			              	                    FROM TST_GOOD_CATE_I A
			                  		               , TST_CATE_MGMT_M B
			                                   WHERE A.CTGRY_CODE = B.CTGRY_CODE
			                   				     AND B.CTGRY_CL_CD = 1003
			                                   GROUP BY A.GOODS_CODE
					                         ) 
					   ) GII
			        ON SLC.LANG_CODE = GII.LANG_CODE
			     GROUP BY SLC.LANG_CODE
		       ) IV -->
		    <!-- 2016.05.18 BH.YANG 관리자 사이트 대쉬보드 서비스구분에 맞게 수정 -->
			SELECT  DECODE(ctgryNm,1002,'1',1001,'2',1003,'3',9009,'4') AS seq
			      , DECODE(ctgryNm,1002,'SaaS',1001,'PaaS',1003,'IaaS',9009,'합계') AS ctgryNm
			      , ctgryNm AS ctgryCd
			      , QQ.dspyCnt
			      , QQ.nondspyCnt
			      , QQ.csCnt
			      , QQ.esCnt 
			      , QQ.goodsCnt
			  FROM  (SELECT  AA.CTGRY_CL_CD AS ctgryNm
						   , SUM(CASE WHEN GOODS_REGIST_STTUS = 1006 THEN 1 ELSE 0 END) AS  dspyCnt
						   , SUM(CASE WHEN GOODS_REGIST_STTUS in ('1007','1008','1009','1010') THEN 1 ELSE 0 END) AS nondspyCnt
						   , SUM(CASE WHEN GOODS_REGIST_STTUS = 1004 THEN 1 ELSE 0 END) AS csCnt
						   , SUM(CASE WHEN GOODS_REGIST_STTUS IN (1002,1005) THEN 1 ELSE 0 END) AS esCnt
						   , SUM(CASE WHEN GOODS_REGIST_STTUS IN (1002,1004,1005,1006,1007) THEN 1 ELSE 0 END) AS goodsCnt
					   FROM  (SELECT  A.GOODS_CODE
					                , B.CTGRY_CL_CD 
					            FROM  TST_GOOD_CATE_I A
					                , TST_CATE_MGMT_M B
						       WHERE  A.CTGRY_CODE = B.CTGRY_CODE
						       GROUP  BY A.GOODS_CODE,B.CTGRY_CL_CD) AA 
						        LEFT  JOIN TST_GOOD_INFO_I C ON AA.GOODS_CODE = C.GOODS_CODE
					  WHERE  MNGR_DELETE_AT = 'N'
					    AND  GOODS_ACTVTY_AT = 'Y'
					    AND  LANG_CODE ='00'
					  GROUP  BY AA.CTGRY_CL_CD                               
			          UNION  ALL
			         SELECT  9009 AS ctgryNm
						   , SUM(CASE WHEN GOODS_REGIST_STTUS = 1006 THEN 1 ELSE 0 END) AS  dspyCnt
						   , SUM(CASE WHEN GOODS_REGIST_STTUS in ('1007','1008','1009','1010') THEN 1 ELSE 0 END) AS nondspyCnt
						   , SUM(CASE WHEN GOODS_REGIST_STTUS = 1004 THEN 1 ELSE 0 END) AS csCnt
					    ,SUM(CASE WHEN GOODS_REGIST_STTUS IN (1002,1005) THEN 1 ELSE 0 END) AS esCnt
					    ,SUM(CASE WHEN GOODS_REGIST_STTUS IN (1002,1004,1005,1006,1007) THEN 1 ELSE 0 END) AS goodsCnt
						FROM (SELECT A.GOODS_CODE,B.CTGRY_CL_CD
						                  	              FROM TST_GOOD_CATE_I A, TST_CATE_MGMT_M B
						                                  WHERE A.CTGRY_CODE = B.CTGRY_CODE
						                             GROUP BY A.GOODS_CODE) AA LEFT JOIN TST_GOOD_INFO_I C ON AA.GOODS_CODE = C.GOODS_CODE
						WHERE MNGR_DELETE_AT = 'N' 
						   AND GOODS_ACTVTY_AT = 'Y'
						   AND LANG_CODE ='00'
			) QQ
			ORDER BY seq                         
		       <!-- }} -->
	</select>

    <!-- 서비스목록 -->
    <resultMap id="goodsResult" type="goodsVO">        
        <result property="goodsCode" column="GOODS_CODE"/>
        <result property="langCode" column="LANG_CODE"/>
        <!-- <collection property="goodsType" column="{goodsCode = GOODS_CODE, langCode = LANG_CODE}" ofType="map" select="goodsTyList"/> -->
        <collection property="goodsMarkList" column="{goodsCode = GOODS_CODE, langCode = LANG_CODE}" ofType="map" select="goodsMarkImageList"/>
    </resultMap>
    <select id="goodsList" parameterType="map" resultMap="goodsResult">        
		/* _explorer.goodsList */
        SELECT  ROWNUM NUM
              , X.*
              , TO_CHAR(exmntConfmDate,'YYYY.MM.DD HH24:mi') 				AS exmntConfmDt
              , TO_CHAR(ADDDATE(exmntConfmDate, 7),'YYYY.MM.DD HH24:mi') 	AS exmntLimitDt
              , DATEDIFF(SYSDATETIME, ADDDATE(exmntConfmDate, 7)) 			AS exmntDay 
              , TO_CHAR(ADDDATE(exmntConfmDate, 3),'YYYY.MM.DD HH24:mi') 	AS confmLimitDt
              , DATEDIFF(SYSDATETIME, ADDDATE(exmntConfmDate, 3)) 			AS confmDay 
          FROM  (SELECT  A.GOODS_CODE									AS GOODS_CODE
                       , A.LANG_CODE									AS LANG_CODE
	                   , GOODS_NM 									AS goodsNm
	                   , GOODS_PC 									AS goodsPc
	                   , (SELECT LANG_NM 
	                        FROM TCO_SVC_LANG_C 
	                       WHERE LANG_CODE = A.LANG_CODE) 			AS langNm
	                   , A.GOODS_REGIST_STTUS 						AS goodsRegistSttus
	                   , (SELECT INDVDLZ_CD_NM 
	                        FROM OP_CODE_INDVDLZ 
	                       WHERE LANG_CODE = '00' 
	                         AND GROUP_CD = 1008 
	                         AND INDVDLZ_CD = A.GOODS_REGIST_STTUS) 	AS goodsRegistSttusNm 
	                   , USER_ID 										AS userId
	                   , TO_CHAR(REGIST_DT,'YYYY.MM.DD HH24:mi') 		AS registDt
	                   , (SELECT EXMNT_CONFM_DT 
	                        FROM TST_EXMN_CNFM_H
	                       WHERE GOODS_CODE = A.GOODS_CODE 
	                         AND EXMNT_CONFM_CD = A.GOODS_REGIST_STTUS
	                       ORDER BY EXMNT_CONFM_DT DESC LIMIT 1) 		AS exmntConfmDate
	                   , (SELECT LANG_STORE_NM 
	                        FROM TUM_SVC_STOR_I 
	                       WHERE USER_ID = A.USER_ID 
	                         AND LANG_CODE = A.LANG_CODE) 			AS langStoreNm
                   FROM  TST_GOOD_INFO_I A
                  WHERE  MNGR_DELETE_AT = 'N' 
                    AND  GOODS_ACTVTY_AT = 'Y'
			<include refid="searchWhere"/>
   			<choose>
      			<when test="q_goodsRegistSttus != null and q_goodsRegistSttus != ''">	<!-- 승인대기 -->
          			ORDER BY exmntConfmDate NULLS LAST, REGIST_DT DESC
      			</when>
      			<when test="q_registSttus != null and q_registSttus != ''">				<!-- 검토대기 -->
          			ORDER BY exmntConfmDate NULLS LAST, REGIST_DT DESC
      			</when>
      			<otherwise>																<!-- 신규승인 -->
          			ORDER BY CONFM_DT DESC NULLS LAST
      			</otherwise>
  			</choose>
   			
    	 WHERE ROWNUM &lt;= 5
    </select>
	<!-- 서비스 마크이미지 목록 -->
    <select id="goodsMarkImageList" resultType="map">
		/* explorer.goodsMarkImageList */
		SELECT B.MARK_IMAGE_FILE_SEQ AS MARKIMAGEFILESEQ
          FROM TST_GOOD_MARK_I A, TST_GOOD_MARK_M B 
         WHERE A.MARK_CD = B.MARK_CD
           AND A.GOODS_CODE = #{goodsCode}
         ORDER BY A.MARK_CD
    </select>
	<!-- 조건별 서비스 총건수 -->
	<select id="goodsTotCnt" parameterType="map" resultType="int">
	/*explorer.goodsTotCnt*/
    	SELECT COUNT(A.GOODS_CODE)
    	  FROM TST_GOOD_INFO_I A
         WHERE MNGR_DELETE_AT = 'N' 
           AND GOODS_ACTVTY_AT = 'Y'
		<include refid="searchWhere"/>
    </select>
	<!-- 서비스 검토 및 승인 지연 건수 -->
    <select id="goodsDelayCnt" parameterType="map" resultType="int">
    /*explorer.goodsDelayCnt*/
    	SELECT COUNT(B.GOODS_CODE)
    	  FROM (SELECT  A.GOODS_CODE
		   	          , (SELECT EXMNT_CONFM_DT 
		                   FROM TST_EXMN_CNFM_H
		                  WHERE GOODS_CODE = A.GOODS_CODE 
		                    AND EXMNT_CONFM_CD = A.GOODS_REGIST_STTUS
		                  ORDER BY EXMNT_CONFM_DT DESC LIMIT 1) 			AS exmntConfmDate
		    	  FROM  TST_GOOD_INFO_I A
		         WHERE  MNGR_DELETE_AT = 'N' 
		           AND  GOODS_ACTVTY_AT = 'Y'
		<include refid="searchWhere"/>
			   ) B
		 WHERE 1 = 1
		<choose>
	        <when test="q_goodsRegistSttus != null and q_goodsRegistSttus != ''">	<!-- 승인대기 -->
	            AND DATEDIFF(SYSDATETIME, ADDDATE(B.exmntConfmDate, 3)) &gt;= 1
	        </when>
	        <when test="q_registSttus != null and q_registSttus != ''">				<!-- 검토대기 -->
	            AND DATEDIFF(SYSDATETIME, ADDDATE(B.exmntConfmDate, 7)) &gt;= 1
	        </when>
	        <otherwise></otherwise>
	    </choose>
    </select>
    
    <!-- 개설신청 목록  -->
	<select id="openCmManageList" parameterType="map" resultType="ExplorerVO">
		/* explorer."openCmManageList" */
		SELECT * 
		  FROM (SELECT	 	
					   A.userId					AS textValue1
					 , A.langCode				AS textValue2
					 , A.langNm					AS textValue3
					 , A.cmmntyId				AS textValue4
					 , A.cmmntyNm				AS textValue5
					 , A.cmmntyCtgryCd			AS textValue6
					 , A.cmmntyCtgryNm			AS textValue7
					 , A.estblReqstDt			AS textValue8
					 , A.estblReqstId			AS textValue9
					 , A.estblReqstNm			AS textValue10
					 , A.cmmntySttusCd			AS textValue11
					 , A.cmmntySttusNm			AS textValue12
					 , A.nationCode				AS textValue13                            								
					 , A.userNm					AS textValue14
					 , ROWNUM RNUM
				  FROM (SELECT b.USER_ID												AS userId                    
							 , b.LANG_CODE												AS langCode         
							 , (SELECT tsvc.LANG_NM 
							      FROM TCO_SVC_LANG_C tsvc
							     WHERE tsvc.LANG_CODE =  b.LANG_CODE ) 					AS langNm
							 , b.CMMNTY_ID												AS cmmntyId
							 , b.CMMNTY_NM												AS cmmntyNm
							 , b.CMMNTY_CTGRY_CD										AS cmmntyCtgryCd    
							 , (SELECT opcode.INDVDLZ_CD_NM 
							 	  FROM OP_CODE_INDVDLZ opcode
							 	 WHERE opcode.LANG_CODE = b.LANG_CODE
							 	   AND opcode.GROUP_CD = 2011
							 	   AND opcode.INDVDLZ_CD = b.CMMNTY_CTGRY_CD) 			AS cmmntyCtgryNm
							 , TO_CHAR(b.ESTBL_REQST_DT, 'YYYY-MM-DD HH24:MI')  		AS estblReqstDt        
							 , b.ESTBL_REQST_ID											AS estblReqstId           
							 ,(SELECT opu.USER_NM 
							     FROM OP_USER opu 
							    WHERE opu.USER_ID = b.ESTBL_REQST_ID) 					AS estblReqstNm
							 , b.CMMNTY_STTUS_CD										AS cmmntySttusCd      
							 , (SELECT opcode.INDVDLZ_CD_NM 
							 	  FROM OP_CODE_INDVDLZ opcode
							 	 WHERE opcode.LANG_CODE = b.LANG_CODE 
							 	   AND opcode.GROUP_CD = 2008
							 	   AND opcode.INDVDLZ_CD = b.CMMNTY_STTUS_CD) 			AS cmmntySttusNm   	
							 , c.NATION_CODE											AS nationCode
							 , c.USER_NM												AS userNm 
					      FROM TCM_CMNT_INFO_I b
					         , OP_USER c
						 WHERE c.USER_ID = b.USER_ID
						   AND b.CMMNTY_STTUS_CD = #{cmmntySttusCd}
						 ORDER BY b.ESTBL_REQST_DT DESC
					   ) A
			   )
		 WHERE RNUM &lt;= 5
	</select>
	
	<!-- 개설신청커뮤니티 총건수 -->
    <select id="cmmntyEsthCnt" parameterType="map" resultType="int">
    /* explorer.cmmntyEsthCnt */
    	SELECT COUNT(b.CMMNTY_ID)
    	  FROM TCM_CMNT_INFO_I b
	         , OP_USER c
		 WHERE c.USER_ID = b.USER_ID
		   AND b.CMMNTY_STTUS_CD = #{cmmntySttusCd}
    </select>
    
    <!-- 비즈매칭 요청건수 -->
    <select id="boardBizMatch" parameterType="ExplorerVO" resultType="int">
        /* explorer.boardBizMatch */
	    SELECT COUNT(A.BBSCTT_SEQ)
	      FROM OP_BOARD A
	     WHERE A.MNGR_DELETE_AT = 'N'
	       AND A.BBS_CD = 1010
	       AND A.ESTN_COLUMN5 = 'N'	<!-- 선정되지 않은 건 -->
	     ORDER BY A.REGIST_DT DESC
    </select>
    
    <!-- 묻고답하기 게시판 최근 목록 -->
    <select id="boardRecentList" parameterType="map" resultType="ExplorerVO">
        /* explorer.boardRecentList */
        SELECT 
               * 
          FROM (SELECT A.DOMAIN_CD             			AS textValue1
	                 , A.BBS_CD                			AS textValue2
	                 , A.BBSCTT_SEQ            			AS textValue3
	                 , (SELECT CTG_NM 
					      FROM OP_BOARD_CTG 
					     WHERE A.DOMAIN_CD = DOMAIN_CD 
					       AND A.BBS_CD = BBS_CD
					       AND A.CTG_CD = CTG_CD) 		AS textValue4
	                 , A.BBSCTT_SJ						AS textValue5
	                 , TO_CHAR(REGIST_DT,'YYYY-MM-DD') 	AS textValue6
	              FROM OP_BOARD A
	             WHERE A.MNGR_DELETE_AT = 'N'
	               AND A.BBS_CD = 1003
	               AND ESTN_COLUMN3 = 'N' <!-- 미답변상태 -->
	             ORDER BY A.REGIST_DT DESC
        	   )
         WHERE ROWNUM &lt;= 5
    </select>
    <!-- 묻고답하기 게시판 총건수 -->
    <select id="recentQnACnt" parameterType="map" resultType="int">
    	SELECT COUNT(A.BBSCTT_SEQ)
    	  FROM OP_BOARD A
         WHERE A.MNGR_DELETE_AT = 'N'
           AND A.BBS_CD = 1003
           AND ESTN_COLUMN3 = 'N' <!-- 미답변상태 -->
    </select>
    <!-- 공급 신청 현황 -->
    <select id="currentStateTotal" parameterType="ExplorerVO" resultType="int">
		/* explorer.svcLangCount */
		SELECT COUNT(*)
          FROM TCM_BASS_AGREM_MANAGE_I
         WHERE DELETE_AT ='N'
		   AND AGREM_STAT ='1001' OR AGREM_STAT ='1007'
	</select>


	<!--
     * SQL 명      : _explorer.todayWorkList
     * 기능(설명)  : 오늘의 할 일[2017.01.18 추가]
     * 작   성   자  : (주)엔키소프트
     * 작   성   일  : 2017-01-18
    -->
	<select id="todayWorkList" parameterType="map" resultType="ExplorerVO">
	    /* _explorer.todayWorkList */
	    SELECT TMP1.CNCLS_WAIT_CNT AS cnclsWaitCnt
	         , TMP2.CONFM_WAIT_CNT AS confmWaitCnt
	         , TMP3.REPLY_WAIT_CNT AS replyWaitCnt
	      FROM (SELECT COUNT(1) AS CNCLS_WAIT_CNT
                  FROM TCM_BASS_AGREM_MANAGE_I
                 WHERE NVL(DELETE_AT, 'N') = 'N'
                   AND AGREM_STAT IN ('1001','1002','1007')
               )TMP1,
	           (SELECT COUNT(1) AS CONFM_WAIT_CNT
                  FROM TST_GOOD_INFO_I
                 WHERE MNGR_DELETE_AT = 'N'
                   AND GOODS_REGIST_STTUS = '1002'
               )TMP2,
	           (SELECT COUNT(1) AS REPLY_WAIT_CNT
                  FROM OP_BOARD
                 WHERE MNGR_DELETE_AT = 'N'
                   AND DOMAIN_CD      = '2'
                   AND BBS_CD         = '1003'
                   AND ESTN_COLUMN3   = 'N'
               )TMP3
	</select>

	<!--
     * SQL 명      : _explorer.serviceProvsChangeList
     * 기능(설명)  : 오늘의 서비스변동(전일대비) [2017.01.20 추가]
     * 작   성   자  : (주)엔키소프트
     * 작   성   일  : 2017-01-20
    -->
	<select id="serviceProvsChangeList" parameterType="map" resultType="ExplorerVO">
	    /* _explorer.serviceProvsChangeList */
        SELECT TMP1.DISP_PAAS_CNT - TMP2.DISP_PAAS_CNT         AS dispPaasCnt
             , TMP1.NON_DISP_PAAS_CNT - TMP2.NON_DISP_PAAS_CNT AS nonDispPaasCnt
             , TMP1.DISP_SAAS_CNT - TMP2.DISP_SAAS_CNT         AS dispSaasCnt
             , TMP1.NON_DISP_SAAS_CNT - TMP2.NON_DISP_SAAS_CNT AS nonDispSaasCnt
             , TMP1.DISP_IAAS_CNT - TMP2.DISP_IAAS_CNT         AS dispIaasCnt
             , TMP1.NON_DISP_IAAS_CNT - TMP2.NON_DISP_IAAS_CNT AS nonDispIaasCnt
          FROM (/*전일자 현황*/
                SELECT TMP.GROUP_KEY
                     , SUM(TMP.DISP_PAAS_CNT)     AS DISP_PAAS_CNT
                     , SUM(TMP.NON_DISP_PAAS_CNT) AS NON_DISP_PAAS_CNT
                     , SUM(TMP.DISP_SAAS_CNT)     AS DISP_SAAS_CNT
                     , SUM(TMP.NON_DISP_SAAS_CNT) AS NON_DISP_SAAS_CNT
                     , SUM(TMP.DISP_IAAS_CNT)     AS DISP_IAAS_CNT
                     , SUM(TMP.NON_DISP_IAAS_CNT) AS NON_DISP_IAAS_CNT
                  FROM (SELECT 'P' AS GROUP_KEY
                             , CASE WHEN GOODS_REGIST_STTUS = '1006' AND GOODS_KND_CD = '1001' THEN 1
                                                                                               ELSE 0
                                                                                                END DISP_PAAS_CNT
                             , CASE WHEN GOODS_REGIST_STTUS IN ('1007','1008','1009','1010') AND GOODS_KND_CD = '1001' THEN 1
                                                                                                                       ELSE 0
                                                                                                                        END NON_DISP_PAAS_CNT
                             , CASE WHEN GOODS_REGIST_STTUS = '1006' AND GOODS_KND_CD = '1002' THEN 1
                                                                                               ELSE 0
                                                                                                END DISP_SAAS_CNT
                             , CASE WHEN GOODS_REGIST_STTUS IN ('1007','1008','1009','1010') AND GOODS_KND_CD = '1002' THEN 1
                                                                                                                       ELSE 0
                                                                                                                        END NON_DISP_SAAS_CNT
                             , CASE WHEN GOODS_REGIST_STTUS = '1006' AND GOODS_KND_CD = '1003' THEN 1
                                                                                               ELSE 0
                                                                                                END DISP_IAAS_CNT
                             , CASE WHEN GOODS_REGIST_STTUS IN ('1007','1008','1009','1010') AND GOODS_KND_CD = '1003' THEN 1
                                                                                                                       ELSE 0
                                                                                                                        END NON_DISP_IAAS_CNT
                          FROM TST_GOOD_CHNG_L
                         WHERE LOG_YM = TO_CHAR(ADD_MONTHS(SYSDATE,-1), 'YYYYMM')
                         /*추후 TST_GOOD_CHNG_L 테이블 수정시 아래 주석으로 대체*/
                         /*WHERE LOG_YM = TO_CHAR(ADDDATE(SYSDATE,-1), 'YYYYMMDD')*/
                           AND GOODS_ACTVTY_AT = 'Y'
                           AND MNGR_DELETE_AT  = 'N'
                           AND LANG_CODE       = '00'
                       )TMP
                 GROUP BY TMP.GROUP_KEY
               ) TMP1,
               (/*금일자 현황*/
                SELECT TMP.GROUP_KEY
                     , SUM(TMP.DISP_PAAS_CNT)     AS DISP_PAAS_CNT
                     , SUM(TMP.NON_DISP_PAAS_CNT) AS NON_DISP_PAAS_CNT
                     , SUM(TMP.DISP_SAAS_CNT)     AS DISP_SAAS_CNT
                     , SUM(TMP.NON_DISP_SAAS_CNT) AS NON_DISP_SAAS_CNT
                     , SUM(TMP.DISP_IAAS_CNT)     AS DISP_IAAS_CNT
                     , SUM(TMP.NON_DISP_IAAS_CNT) AS NON_DISP_IAAS_CNT
                  FROM (SELECT 'P' AS GROUP_KEY
                             , CASE WHEN GOODS_REGIST_STTUS = '1006' AND GOODS_KND_CD = '1001' THEN 1
                                                                                               ELSE 0
                                                                                                END DISP_PAAS_CNT
                             , CASE WHEN GOODS_REGIST_STTUS IN ('1007','1008','1009','1010') AND GOODS_KND_CD = '1001' THEN 1
                                                                                                                       ELSE 0
                                                                                                                        END NON_DISP_PAAS_CNT
                             , CASE WHEN GOODS_REGIST_STTUS = '1006' AND GOODS_KND_CD = '1002' THEN 1
                                                                                               ELSE 0
                                                                                                END DISP_SAAS_CNT
                             , CASE WHEN GOODS_REGIST_STTUS IN ('1007','1008','1009','1010') AND GOODS_KND_CD = '1002' THEN 1
                                                                                                                       ELSE 0
                                                                                                                        END NON_DISP_SAAS_CNT
                             , CASE WHEN GOODS_REGIST_STTUS = '1006' AND GOODS_KND_CD = '1003' THEN 1
                                                                                               ELSE 0
                                                                                                END DISP_IAAS_CNT
                             , CASE WHEN GOODS_REGIST_STTUS IN ('1007','1008','1009','1010') AND GOODS_KND_CD = '1003' THEN 1
                                                                                                                       ELSE 0
                                                                                                                        END NON_DISP_IAAS_CNT
                          FROM TST_GOOD_CHNG_L
                         WHERE LOG_YM = TO_CHAR(SYSDATE, 'YYYYMM')
                         /*추후 TST_GOOD_CHNG_L 테이블 수정시 아래 주석으로 대체*/
                         /*WHERE LOG_YM = TO_CHAR(SYSDATE, 'YYYYMMDD')*/
                           AND GOODS_ACTVTY_AT = 'Y'
                           AND MNGR_DELETE_AT = 'N'
                           AND LANG_CODE       = '00'
                       )TMP
                 GROUP BY TMP.GROUP_KEY
               ) TMP2
	</select>

	<!--
     * SQL 명      : _explorer.userSttusByDayList
     * 기능(설명)  : 회원현황[2017.01.18 추가]
     * 작   성   자  : (주)엔키소프트
     * 작   성   일  : 2017-01-18
    -->
	<select id="userSttusByDayList" parameterType="map" resultType="ExplorerVO">
	    /* _explorer.userSttusByDayList */
        SELECT TMP1.TODAY_GNRL_MMB_CNT     AS todayGnrlMmbCnt
             , TMP1.TOT_GNRL_MMB_CNT       AS totGnrlMmbCnt
             , TMP2.TODAY_PB_MMB_CNT       AS todayPbMmbCnt
             , TMP2.TOT_PB_MMB_CNT         AS totPbMmbCnt
             , TMP3.TODAY_SUPLER_MMB_CNT   AS todaySuplerMmbCnt
             , TMP3.TOT_SUPLER_MMB_CNT     AS totSuplerMmbCnt
          FROM (/*일반 회원 현황*/
                SELECT COUNT(1)                AS TOT_GNRL_MMB_CNT
                     , SUM(TODAY_GNRL_MMB_CNT) AS TODAY_GNRL_MMB_CNT
                  FROM (SELECT 'PS'    AS GROUP_KEY
                             , USER_ID AS USER_ID
                             , CASE WHEN TO_CHAR(REGIST_DT,'YYYYMMDD') = TO_CHAR(SYSDATE,'YYYYMMDD') THEN 1
                                                                                                     ELSE 0
                                                                                                      END TODAY_GNRL_MMB_CNT
                          FROM OP_USER
                         WHERE USER_STTUS_CD = 1001
                           AND USER_TY_CD IN ('1001','2001')
                       ) TMP
                 GROUP BY TMP.GROUP_KEY
               ) TMP1,
               (/*공공 회원 현황*/
                SELECT COUNT(1)              AS TOT_PB_MMB_CNT
                     , SUM(TODAY_PB_MMB_CNT) AS TODAY_PB_MMB_CNT
                  FROM (SELECT 'PB'    AS GROUP_KEY
                             , USER_ID AS USER_ID
                             , CASE WHEN TO_CHAR(REGIST_DT,'YYYYMMDD') = TO_CHAR(SYSDATE,'YYYYMMDD') THEN 1
                                                                                                     ELSE 0
                                                                                                      END TODAY_PB_MMB_CNT
                          FROM OP_USER
                         WHERE USER_STTUS_CD = 1001
                           AND USER_TY_CD IN ('3001')
                       ) TMP
                 GROUP BY TMP.GROUP_KEY
               )TMP2,
               (/*공급자 회원 현황*/
                SELECT COUNT(1)                  AS TOT_SUPLER_MMB_CNT
                     , SUM(TODAY_SUPLER_MMB_CNT) AS TODAY_SUPLER_MMB_CNT
                  FROM (SELECT 'PB'    AS GROUP_KEY
                             , USER_ID AS USER_ID
                             , CASE WHEN TO_CHAR(AGREM_APPR_DT,'YYYYMMDD') = TO_CHAR(SYSDATE,'YYYYMMDD') THEN 1
                                                                                                         ELSE 0
                                                                                                          END TODAY_SUPLER_MMB_CNT
                          FROM OP_USER
                         WHERE USER_STTUS_CD = 1001
                           AND USER_TY_CD IN ('2002')
                       ) TMP
                 GROUP BY TMP.GROUP_KEY
               )TMP3
	</select>

	<!--
     * SQL 명      : _explorer.cntrAmountList
     * 기능(설명)  : 계약 일 동향[2017.01.18 추가]
     * 작   성   자  : (주)엔키소프트
     * 작   성   일  : 2017-01-18
    -->
	<select id="cntrAmountList" parameterType="map" resultType="ExplorerVO">
		/* _explorer.cntrAmountList */
        SELECT TO_CHAR(TMP.DT,'MM.DD')     AS cntrDt
             , TMP.SW                      AS cntrSw
             , NVL(TMP3.CNTR_CNT, 0)       AS cntrCnt
             , NVL(TMP3.CNTRCTAMOUNT,0)    AS cntrAmount
             , CASE WHEN TO_CHAR(TMP.DT,'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD') THEN 'Y'
                                                                                      ELSE 'N'
                                                                                       END todayYn
          FROM (SELECT ADDDATE(A.ST_DAY, LEVEL )                         AS DT
                     , TO_CHAR(ADDDATE(A.ST_DAY, LEVEL ), 'DY', 'ko_KR') AS SW
                  FROM (SELECT SYSDATE-7 AS ST_DAY
                             , SYSDATE   AS ED_DAY
                       ) A
               CONNECT BY LEVEL &lt;= DATEDIFF(ED_DAY, ST_DAY)
               ) TMP
                 LEFT JOIN (SELECT TMP2.CNTR_DT           AS CNTR_DT
                                 , COUNT(TMP2.CNTRCT_SN)  AS CNTR_CNT
                                 , SUM(TMP2.CNTRCTAMOUNT) AS CNTRCTAMOUNT
                              FROM (SELECT CNTRCT_SN                     AS CNTRCT_SN
                                         , TO_CHAR(CNTR_DT,'YYYY-MM-DD') AS CNTR_DT
                                         , CNTRCTAMOUNT                  AS CNTRCTAMOUNT
                                      FROM TCM_CNTRCT_MANAGE_I
                                     WHERE NVL(DELETE_AT, 'N') = 'N'
                                       AND ASIS = 'N'
                                       AND CNTR_DT BETWEEN SYSDATE-7 AND SYSDATE
                                   ) TMP2
                             GROUP BY TMP2.CNTR_DT) TMP3
                        ON TMP.DT = TMP3.CNTR_DT
        ORDER BY TMP.DT
	</select>

	<!--
     * SQL 명      : _explorer.cntrTotAmountList
     * 기능(설명)  : 계약 일 동향 총 합계[2017.01.18 추가]
     * 작   성   자  : (주)엔키소프트
     * 작   성   일  : 2017-01-18
    -->
	<select id="cntrTotAmountList" parameterType="map" resultType="ExplorerVO">
	    /* _explorer.cntrTotAmountList */
        <!-- SELECT COUNT(TMP.CNTRCT_SN)  AS cntrTotCnt
             , SUM(TMP.CNTRCTAMOUNT) AS cntrTotAmount
          FROM (SELECT 'G'                           AS GROUP_KEY
                     , CNTRCT_SN                     AS CNTRCT_SN
                     , TO_CHAR(CNTR_DT,'YYYY-MM-DD') AS CNTR_DT
                     , CNTRCTAMOUNT                  AS CNTRCTAMOUNT
                  FROM TCM_CNTRCT_MANAGE_I
                 WHERE NVL(DELETE_AT, 'N') = 'N'
                   AND CNTR_DT BETWEEN SYSDATE-7 AND SYSDATE
               ) TMP
         GROUP BY TMP.GROUP_KEY -->
         SELECT   SUM(NVL(TMP3.CNTR_CNT, 0))       AS cntrTotCnt
             , SUM(NVL(TMP3.CNTRCTAMOUNT,0))    AS cntrTotAmount
          FROM (SELECT ADDDATE(A.ST_DAY, LEVEL )                         AS DT
                     , TO_CHAR(ADDDATE(A.ST_DAY, LEVEL ), 'DY', 'ko_KR') AS SW
                  FROM (SELECT SYSDATE-7 AS ST_DAY
                             , SYSDATE   AS ED_DAY
                       ) A
               CONNECT BY LEVEL &lt;= DATEDIFF(ED_DAY, ST_DAY)
               ) TMP
                 LEFT JOIN (SELECT TMP2.CNTR_DT           AS CNTR_DT
                                 , COUNT(TMP2.CNTRCT_SN)  AS CNTR_CNT
                                 , SUM(TMP2.CNTRCTAMOUNT) AS CNTRCTAMOUNT
                              FROM (SELECT CNTRCT_SN                     AS CNTRCT_SN
                                         , TO_CHAR(CNTR_DT,'YYYY-MM-DD') AS CNTR_DT
                                         , CNTRCTAMOUNT                  AS CNTRCTAMOUNT
                                      FROM TCM_CNTRCT_MANAGE_I
                                     WHERE NVL(DELETE_AT, 'N') = 'N'
                                       AND ASIS = 'N'
                                       AND CNTR_DT BETWEEN SYSDATE-7 AND SYSDATE
                                   ) TMP2
                             GROUP BY TMP2.CNTR_DT) TMP3
                        ON TMP.DT = TMP3.CNTR_DT
        ORDER BY TMP.DT
	</select>

	<!--
     * SQL 명      : _explorer.serviceDispTrendList
     * 기능(설명)  : 서비스전시 총동향[2017.01.20 추가]
     * 작   성   자  : (주)엔키소프트
     * 작   성   일  : 2017-01-20
    -->
	<select id="serviceDispTrendList" parameterType="map" resultType="ExplorerVO">
	    /*_explorer.serviceDispTrendList*/
        SELECT  TO_CHAR(TMP.DT,'MM.DD')     AS cntrDt
              , TMP.SW                      AS cntrSw
              , TMP3.PAAS_CNT               AS paasCnt
              , TMP3.SAAS_CNT               AS saasCnt
              , TMP3.IAAS_CNT               AS iaasCnt
              , TMP3.SCS_CNT                AS scsCnt
              , TMP3.TOT_CNT                AS totCnt
	          , CASE WHEN TMP3.TOT_CNT = 0 THEN 1
	                 WHEN TMP3.PAAS_CNT = 0 THEN 1
	            ELSE ROUND(( ((TMP3.PAAS_CNT*0.1)*10) / TMP3.TOT_CNT )  * 150)
	             END paasRate
	          , CASE WHEN TMP3.TOT_CNT = 0 THEN 1
	                 WHEN TMP3.SAAS_CNT = 0 THEN 1
	            ELSE ROUND(( ((TMP3.SAAS_CNT*0.1)*10) / TMP3.TOT_CNT )  * 150)
	             END saasRate
	          , CASE WHEN TMP3.TOT_CNT = 0 THEN 1
	                 WHEN TMP3.IAAS_CNT = 0 THEN 1
	            ELSE ROUND(( ((TMP3.IAAS_CNT*0.1)*10) / TMP3.TOT_CNT )  * 150)
	             END iaasRate
	          , CASE WHEN TMP3.TOT_CNT = 0 THEN 1
	                 WHEN TMP3.SCS_CNT = 0 THEN 1
	            ELSE ROUND(( ((TMP3.SCS_CNT*0.1)*10) / TMP3.TOT_CNT )  * 150)
	             END scsRate
              , CASE WHEN TO_CHAR(TMP.DT,'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD') THEN 'Y'
                ELSE 'N'
                 END todayYn
          FROM  (SELECT  ADDDATE(A.ST_DAY, LEVEL )                         AS DT
                       , TO_CHAR(ADDDATE(A.ST_DAY, LEVEL ), 'DY', 'ko_KR') AS SW
                   FROM  (SELECT  SYSDATE-7 AS ST_DAY
                                , SYSDATE   AS ED_DAY) A
                 CONNECT BY LEVEL &lt;= DATEDIFF(ED_DAY, ST_DAY)
                ) TMP
          LEFT JOIN (SELECT  ADDDATE(SYSDATE, ROW_NUMBER() OVER(ORDER BY TMP.LOG_YM DESC) * -1) AS LOG_YM
                             /*추후 TST_GOOD_CHNG_L 테이블 수정시 아래 주석으로 대체*/
                             /*LOG_YM*/
                           , SUM(TMP.PAAS_CNT) AS PAAS_CNT
                           , SUM(TMP.SAAS_CNT) AS SAAS_CNT
                           , SUM(TMP.IAAS_CNT) AS IAAS_CNT
                           , SUM(TMP.SCS_CNT)  AS SCS_CNT
                           , (SUM(TMP.PAAS_CNT) + SUM(TMP.SAAS_CNT) + SUM(TMP.IAAS_CNT) + SUM(TMP.SCS_CNT)) AS TOT_CNT
                       FROM  (SELECT  LOG_YM
                                    , CASE WHEN GOODS_KND_CD = '1001' THEN 1
                                      ELSE 0
                                       END PAAS_CNT
                                    , CASE WHEN GOODS_KND_CD = '1002' THEN 1
                                      ELSE 0
                                       END SAAS_CNT
                                    , CASE WHEN GOODS_KND_CD = '1003' THEN 1
                                      ELSE 0
                                       END IAAS_CNT
                                    , CASE WHEN GOODS_KND_CD = '1004' THEN 1
                                      ELSE 0
                                       END SCS_CNT
                                FROM  TST_GOOD_CHNG_L
                               WHERE  LOG_YM BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE, -6), 'YYYYMM') AND TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYYMM')
                                     /*추후 TST_GOOD_CHNG_L 테이블 수정시 아래 주석으로 대체*/
                                     /*WHERE LOG_YM BETWEEN TO_CHAR(ADDDATE(SYSDATE, -6), 'YYYYMMDD') AND TO_CHAR(ADDDATE(SYSDATE, -1),'YYYYMMDD')*/
                                 AND  GOODS_ACTVTY_AT    = 'Y'
                                 AND  MNGR_DELETE_AT     = 'N'
                                 AND  LANG_CODE          = '00'
                                 AND GOODS_REGIST_STTUS = '1006' 
                             ) TMP
                        GROUP  BY TMP.LOG_YM
                        /*금일 현황은 서비스테이블을 조회*/
                        UNION ALL
                        SELECT  TMP.LOG_YM
                              , SUM(TMP.PAAS_CNT) AS PAAS_CNT
                              , SUM(TMP.SAAS_CNT) AS SAAS_CNT
                              , SUM(TMP.IAAS_CNT) AS IAAS_CNT
                              , SUM(TMP.SCS_CNT)  AS SCS_CNT
                              , (SUM(TMP.PAAS_CNT) + SUM(TMP.SAAS_CNT) + SUM(TMP.IAAS_CNT) + SUM(TMP.SCS_CNT)) AS TOT_CNT
                          FROM  (SELECT  SYSDATE AS LOG_YM
                                       , CASE WHEN GOODS_KND_CD = '1001' THEN 1
                                         ELSE 0
                                          END PAAS_CNT
                                       , CASE WHEN GOODS_KND_CD = '1002' THEN 1
                                         ELSE 0
                                          END SAAS_CNT
                                       , CASE WHEN GOODS_KND_CD = '1003' THEN 1
                                         ELSE 0
                                          END IAAS_CNT
                                       , CASE WHEN GOODS_KND_CD = '1004' THEN 1
                                         ELSE 0
                                          END SCS_CNT
                                   FROM  TST_GOOD_INFO_I
					              WHERE  MNGR_DELETE_AT = 'N' 
					                AND GOODS_ACTVTY_AT = 'Y'
					                AND LANG_CODE ='00'
					                AND GOODS_REGIST_STTUS = '1006'
                                ) TMP
                         GROUP  BY TMP.LOG_YM
                       ) TMP3
                     ON TMP.DT = TMP3.LOG_YM
         ORDER BY TMP.DT
	</select>

	<!--
     * SQL 명      : _explorer.buyActTrendByDayList
     * 기능(설명)  : 구매활동 일동향[2017.01.18 추가]
     * 작   성   자  : (주)엔키소프트
     * 작   성   일  : 2017-01-18
    -->
	<select id="buyActTrendByDayList" parameterType="map" resultType="ExplorerVO">
	    /* _explorer.buyActTrendByDayList*/
	    SELECT TO_CHAR(TO_DATE(TMP8.DT),'MM.DD') AS cntrDt
	         , TMP8.SW                           AS cntrSw
	         , TMP8.BUY_REQ_CNT                  AS buyTrendBuyReqCnt
	         , TMP8.BID_CNT                      AS buyTrendBidCnt
	         , TMP8.CNTR_CNT                     AS buyTrendCntrCnt
	         , TMP8.ISSUE_CNT                    AS buyTrendIssueCnt
	         , TMP8.TOT_CNT                      AS buyTrendTotCnt
	         , CASE WHEN TMP8.TOT_CNT = 0     THEN 1
	                WHEN TMP8.BUY_REQ_CNT = 0 THEN 1
	                                      ELSE ROUND(( ((TMP8.BUY_REQ_CNT*0.1)*10) / TMP8.TOT_CNT )  * 50)
	                                       END buyTrendBuyReqRate
	         , CASE WHEN TMP8.TOT_CNT = 0 THEN 1
	                WHEN TMP8.BID_CNT = 0 THEN 1
	                                      ELSE ROUND(( ((TMP8.BID_CNT*0.1)*10) / TMP8.TOT_CNT )  * 50)
	                                       END buyTrendBidRate
	         , CASE WHEN TMP8.TOT_CNT = 0  THEN 1
	                WHEN TMP8.CNTR_CNT = 0 THEN 1
	                                      ELSE ROUND(( ((TMP8.CNTR_CNT*0.1)*10) / TMP8.TOT_CNT )  * 50)
	                                       END buyTrendCntrRate
	         , CASE WHEN TMP8.TOT_CNT = 0   THEN 1
	                WHEN TMP8.ISSUE_CNT = 0 THEN 1
	                                      ELSE ROUND(( ((TMP8.ISSUE_CNT*0.1)*10) / TMP8.TOT_CNT )  * 50)
	                                       END buyTrendIssueRate
             , CASE WHEN TO_CHAR(TMP8.DT,'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD') THEN 'Y'
                                                                                       ELSE 'N'
                                                                                        END todayYn
          FROM (SELECT TMP.DT
		             , TMP.SW
		             , NVL(TMP3.BUY_REQ_CNT, 0) AS BUY_REQ_CNT
		             , NVL(TMP3.BID_CNT, 0)     AS BID_CNT
		             , NVL(TMP5.CNTR_CNT, 0)    AS CNTR_CNT
		             , NVL(TMP7.ISSUE_CNT, 0)   AS ISSUE_CNT
		             , NVL(TMP3.BUY_REQ_CNT, 0) + NVL(TMP3.BID_CNT, 0) + NVL(TMP5.CNTR_CNT, 0) + NVL(TMP7.ISSUE_CNT, 0) AS TOT_CNT
		          FROM (SELECT TO_CHAR(ADDDATE(A.ST_DAY, LEVEL ),'YYYY-MM-DD')   AS DT
		                     , TO_CHAR(ADDDATE(A.ST_DAY, LEVEL ), 'DY', 'ko_KR') AS SW
		                  FROM (SELECT SYSDATE-7 AS ST_DAY
		                             , SYSDATE   AS ED_DAY
		                       ) A
		               CONNECT BY LEVEL &lt;= DATEDIFF(ED_DAY, ST_DAY)
		               ) TMP
		                 LEFT JOIN (SELECT TMP2.ENTR_DT
		                                 , SUM(TMP2.BUY_REQ_CNT) AS BUY_REQ_CNT
		                                 , SUM(TMP2.BID_CNT)     AS BID_CNT
		                              FROM (SELECT BID_GBN_CD
		                                         , TO_CHAR(ENTR_DT,'YYYY-MM-DD') AS ENTR_DT
		                                         , CASE WHEN BID_GBN_CD = '1001' THEN 1
		                                                                         ELSE 0
		                                                                          END BUY_REQ_CNT
		                                         , CASE WHEN BID_GBN_CD = '1002' THEN 1
		                                                                         ELSE 0
		                                                                          END BID_CNT
		                                      FROM TCN_BID_NOTIFY_I
		                                     WHERE ENTR_DT BETWEEN SYSDATE -6 AND SYSDATE
		                                       AND BID_GBN_CD IN ('1001','1002')
		                                   ) TMP2
		                             GROUP BY TMP2.ENTR_DT
		                           )TMP3
		                        ON TMP.DT = TMP3.ENTR_DT
		                 LEFT JOIN (SELECT TMP4.CNTR_DT
		                                 , COUNT(1) AS CNTR_CNT
		                              FROM (SELECT TO_CHAR(CNTR_DT, 'YYYY-MM-DD') AS CNTR_DT
		                                      FROM TCM_CNTRCT_MANAGE_I
		                                     WHERE NVL(DELETE_AT, 'N') = 'N'
		                                       AND ASIS = 'N'
		                                       AND CNTR_DT BETWEEN SYSDATE -6 AND SYSDATE
		                                   ) TMP4
		                             GROUP BY TMP4.CNTR_DT
		                           ) TMP5
		                        ON TMP.DT = TMP5.CNTR_DT
		                 LEFT JOIN (SELECT TMP6.ISSUE_DATE AS ISSUE_DATE
		                                 , COUNT(1)        AS ISSUE_CNT
		                              FROM (SELECT TO_CHAR(A.ISSUE_DATE, 'YYYY-MM-DD') AS ISSUE_DATE
		                                      FROM TCN_DVYFG_INFO_L A 
		                                           INNER JOIN TCN_PPS_GOOD_INFO_L B 
		                                                   ON A.DELIVERY_NUM||A.DELIVERY_ORDER||A.ITEM_NUM = B.CNTR_NUM||LINE_NUM
		                                           INNER JOIN TST_GOOD_INFO_I C
		                                                   ON B.GOODS_CODE = C.GOODS_CODE
		                                     WHERE A.ISSUE_DATE BETWEEN SYSDATE -6 AND SYSDATE
		                                   ) TMP6
		                             GROUP BY TMP6.ISSUE_DATE
		                           )TMP7
		                        ON TMP.DT = TMP7.ISSUE_DATE
               ) TMP8
          ORDER BY TMP8.DT
	</select>
	
	<!-- 씨앗현황 -->
	<select id="ceartPresentCondition" parameterType="ExplorerVO" resultType="ExplorerVO">
		/* _explorer.ceartPresentCondition*/
		SELECT  goods_stats
		      , MAX(aGoods_regist_sttus)	AS aGoods_regist_sttus
		      , NVL(SUM(aSaasCnt), 0)   	AS aSaasCnt
		      , NVL(SUM(aDifSaasCnt), 0)   	AS aDifSaasCnt
		      , NVL(SUM(aPaasCnt), 0)  		AS aPaasCnt
		      , NVL(SUM(aDifPaasCnt), 0)   	AS aDifPaasCnt
		      , NVL(SUM(aIaasCnt), 0)  		AS aIaasCnt
		      , NVL(SUM(aDifIaasCnt), 0)   	AS aDifIaasCnt
		      , NVL(SUM(aScsCnt), 0)  		AS aScsCnt
		      , NVL(SUM(aDifScsCnt), 0)   	AS aDifScsCnt
		      , NVL(SUM(aGoodsCnt), 0) 		AS aGoodsCnt
		      , NVL(SUM(aDifGoodsCnt), 0)   AS aDifGoodsCnt
		      , MAX(bGoods_regist_sttus)	AS bGoods_regist_sttus
		      , NVL(SUM(bSaasCnt), 0)  		AS bSaasCnt
		      , NVL(SUM(bDifSaasCnt), 0)   	AS bDifSaasCnt
		      , NVL(SUM(bPaasCnt), 0)  		AS bPaasCnt
		      , NVL(SUM(bDifPaasCnt), 0)   	AS bDifPaasCnt
		      , NVL(SUM(bIaasCnt), 0)  		AS bIaasCnt
		      , NVL(SUM(bDifIaasCnt), 0)   	AS bDifIaasCnt
		      , NVL(SUM(bScsCnt), 0)  		AS bScsCnt
		      , NVL(SUM(bDifScsCnt), 0)   	AS bDifScsCnt
		      , NVL(SUM(bGoodsCnt), 0) 		AS bGoodsCnt
		      , NVL(SUM(bDifGoodsCnt), 0)   AS bDifGoodsCnt
		      , MAX(mGoods_regist_sttus) 	AS mGoods_regist_sttus
		      , NVL(SUM(mSaasCnt), 0)  		AS mSaasCnt
		      , NVL(SUM(mDifSaasCnt), 0)   	AS mDifSaasCnt
		      , NVL(SUM(mPaasCnt), 0)  		AS mPaasCnt
		      , NVL(SUM(mDifPaasCnt), 0)   	AS mDifPaasCnt
		      , NVL(SUM(mIaasCnt), 0)  		AS mIaasCnt
		      , NVL(SUM(mDifIaasCnt), 0)   	AS mDifIaasCnt
		      , NVL(SUM(mScsCnt), 0)  		AS mScsCnt
		      , NVL(SUM(mDifScsCnt), 0)   	AS mDifScsCnt
		      , NVL(SUM(mGoodsCnt), 0) 		AS mGoodsCnt
		      , NVL(SUM(mDifGoodsCnt), 0)   AS mDifGoodsCnt
		      , MAX(bsGoods_regist_sttus) 	AS bsGoods_regist_sttus
		      , NVL(SUM(bsSaasCnt), 0)  	AS bsSaasCnt
		      , NVL(SUM(bsDifSaasCnt), 0)   AS bsDifSaasCnt
		      , NVL(SUM(bsPaasCnt), 0)  	AS bsPaasCnt
		      , NVL(SUM(bsDifPaasCnt), 0)   AS bsDifPaasCnt
		      , NVL(SUM(bsIaasCnt), 0)  	AS bsIaasCnt
		      , NVL(SUM(bsDifIaasCnt), 0)   AS bsDifIaasCnt
		      , NVL(SUM(bsScsCnt), 0)  	    AS bsScsCnt
		      , NVL(SUM(bsDifScsCnt), 0)    AS bsDifScsCnt
		      , NVL(SUM(bsGoodsCnt), 0) 	AS bsGoodsCnt
		      , NVL(SUM(bsDifGoodsCnt), 0)  AS bsDifGoodsCnt
		      , #{issueDate}   				AS goodsDate
		      , #{basicDate}  				AS basicDate
		  FROM  (SELECT  goods_stats
		               , DECODE(goods_regist_sttus, 1006, '전시'       , 1007, '0') 	                        AS aGoods_regist_sttus
		               , DECODE(goods_regist_sttus, 1006, SaasCnt    , 1007,  0 ) 	                        AS aSaasCnt
		               , DECODE(goods_regist_sttus, 1006, difSaasCnt , 1007,  0 ) 	                        AS aDifSaasCnt
		               , DECODE(goods_regist_sttus, 1006, PaasCnt    , 1007,  0 ) 	                        AS aPaasCnt
		               , DECODE(goods_regist_sttus, 1006, difPaasCnt , 1007,  0 ) 	                        AS aDifPaasCnt
			           , DECODE(goods_regist_sttus, 1006, IaasCnt    , 1007,  0 ) 	                        AS aIaasCnt
			  		   , DECODE(goods_regist_sttus, 1006, difIaasCnt , 1007,  0 ) 	                        AS aDifIaasCnt
			           , DECODE(goods_regist_sttus, 1006, ScsCnt     , 1007,  0 ) 	                        AS aScsCnt
			  		   , DECODE(goods_regist_sttus, 1006, difScsCnt  , 1007,  0 ) 	                        AS aDifScsCnt
			           , DECODE(goods_regist_sttus, 1006, goodsCnt   , 1007,  0 ) 	                        AS aGoodsCnt
			  		   , DECODE(goods_regist_sttus, 1006, difGoodsCnt, 1007,  0 ) 	                        AS aDifGoodsCnt
			           , DECODE(goods_regist_sttus, 1007, '비전시'      , 1006, '0') 	                        AS bGoods_regist_sttus
			           , DECODE(goods_regist_sttus, 1007, SaasCnt    , 1006,  0 ) 	                        AS bSaasCnt
			  		   , DECODE(goods_regist_sttus, 1007, difSaasCnt , 1006,  0 ) 	                        AS bDifSaasCnt
			           , DECODE(goods_regist_sttus, 1007, PaasCnt    , 1006,  0 ) 	                        AS bPaasCnt
			  		   , DECODE(goods_regist_sttus, 1007, difPaasCnt , 1006,  0 ) 	                        AS bDifPaasCnt
			           , DECODE(goods_regist_sttus, 1007, IaasCnt    , 1006,  0 ) 	                        AS bIaasCnt
			  		   , DECODE(goods_regist_sttus, 1007, difIaasCnt , 1006,  0 ) 	                        AS bDifIaasCnt
			  		   , DECODE(goods_regist_sttus, 1007, ScsCnt    , 1006,  0 ) 	                        AS bScsCnt
			  		   , DECODE(goods_regist_sttus, 1007, difScsCnt , 1006,  0 ) 	                        AS bDifScsCnt
			           , DECODE(goods_regist_sttus, 1007, goodsCnt   , 1006,  0 ) 	                        AS bGoodsCnt
			  		   , DECODE(goods_regist_sttus, 1007, difGoodsCnt, 1006,  0 ) 	                        AS bDifGoodsCnt
			           , DECODE(goods_regist_sttus, 1000, '회원'       , 1006, '0', 1007, '0') 				AS mGoods_regist_sttus
			  		   , DECODE(goods_regist_sttus, 1000, SaasCnt    , 1006,  0 , 1007,  0 ) 				AS mSaasCnt
			  		   , DECODE(goods_regist_sttus, 1000, difSaasCnt , 1006,  0 , 1007,  0 ) 				AS mDifSaasCnt
			           , DECODE(goods_regist_sttus, 1000, PaasCnt    , 1006,  0 , 1007,  0 ) 				AS mPaasCnt
			  		   , DECODE(goods_regist_sttus, 1000, difPaasCnt , 1006,  0 , 1007,  0 ) 				AS mDifPaasCnt
			           , DECODE(goods_regist_sttus, 1000, IaasCnt    , 1006,  0 , 1007,  0 ) 				AS mIaasCnt
			  		   , DECODE(goods_regist_sttus, 1000, difIaasCnt , 1006,  0 , 1007,  0 ) 				AS mDifIaasCnt
			  		   , DECODE(goods_regist_sttus, 1000, ScsCnt     , 1006,  0 , 1007,  0 ) 				AS mScsCnt
			  		   , DECODE(goods_regist_sttus, 1000, difScsCnt  , 1006,  0 , 1007,  0 ) 				AS mDifScsCnt
			           , DECODE(goods_regist_sttus, 1000, goodsCnt   , 1006,  0 , 1007,  0 )				AS mGoodsCnt
			  		   , DECODE(goods_regist_sttus, 1000, difGoodsCnt, 1006,  0 , 1007,  0 )				AS mDifgoodsCnt
			           , DECODE(goods_regist_sttus, 2000, '협약'       , 1000, '회원', 1006, '0', 1007, '0')	AS bsGoods_regist_sttus
			           , DECODE(goods_regist_sttus, 2000, SaasCnt    , 1000, 0, 1006,  0,  1007,  0 )		AS bsSaasCnt
			           , DECODE(goods_regist_sttus, 2000, difSaasCnt , 1000, 0, 1006,  0,  1007,  0 )		AS bsDifSaasCnt
			           , DECODE(goods_regist_sttus, 2000, PaasCnt    , 1000, 0, 1006,  0,  1007,  0 )		AS bsPaasCnt
			           , DECODE(goods_regist_sttus, 2000, difPaasCnt , 1000, 0, 1006,  0,  1007,  0 )		AS bsDifPaasCnt
			           , DECODE(goods_regist_sttus, 2000, IaasCnt    , 1000, 0, 1006,  0,  1007,  0 )		AS bsIaasCnt
			           , DECODE(goods_regist_sttus, 2000, difIaasCnt , 1000, 0, 1006,  0,  1007,  0 )		AS bsDifIaasCnt
			           , DECODE(goods_regist_sttus, 2000, ScsCnt     , 1000, 0, 1006,  0,  1007,  0 )		AS bsScsCnt
			           , DECODE(goods_regist_sttus, 2000, difScsCnt  , 1000, 0, 1006,  0,  1007,  0 )		AS bsDifScsCnt
			           , DECODE(goods_regist_sttus, 2000, goodsCnt   , 1000, 0, 1006,  0,  1007,  0 )		AS bsGoodsCnt
			           , DECODE(goods_regist_sttus, 2000, difGoodsCnt, 1000, 0, 1006,  0,  1007,  0 )		AS bsDifGoodsCnt
			       FROM  (
			              /*전시*/
			              SELECT  goods_stats 										AS goods_stats
			                    , goods_regist_sttus 								AS goods_regist_sttus
			                    , NVL(SUM(SaasCnt1), 0) 							AS SaasCnt
			                    , (NVL(SUM(SaasCnt1), 0) - NVL(SUM(SaasCnt2), 0))	AS difSaasCnt
			                    , NVL(SUM(PaasCnt1), 0) 							AS PaasCnt
			                    , (NVL(SUM(PaasCnt1), 0) - NVL(SUM(PaasCnt2), 0)) 	AS difPaasCnt
			                    , NVL(SUM(IaasCnt1), 0) 							AS IaasCnt
			                    , (NVL(SUM(IaasCnt1), 0) - NVL(SUM(IaasCnt2), 0)) 	AS difIaasCnt
			                    , NVL(SUM(ScsCnt1), 0) 					    		AS ScsCnt
			                    , (NVL(SUM(ScsCnt1), 0) - NVL(SUM(ScsCnt2), 0))		AS difScsCnt
			                    , NVL(SUM(goodsCnt1), 0) 							AS goodsCnt
			                    , (NVL(SUM(goodsCnt1), 0) - NVL(SUM(goodsCnt2), 0))	AS difgoodsCnt
			                FROM  (SELECT  goods_stats
			                             , goods_regist_sttus
					                     , DECODE(statDt, #{nowDate}, SaasCnt, #{beforeDate}, 0)  AS SaasCnt1
					                     , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, SaasCnt)  AS SaasCnt2
					                     , DECODE(statDt, #{nowDate}, PaasCnt, #{beforeDate}, 0)  AS PaasCnt1
					                     , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, PaasCnt)  AS PaasCnt2
					                     , DECODE(statDt, #{nowDate}, IaasCnt, #{beforeDate}, 0)  AS IaasCnt1
					                     , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, IaasCnt)  AS IaasCnt2
					                     , DECODE(statDt, #{nowDate}, ScsCnt, #{beforeDate}, 0)   AS ScsCnt1
					                     , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, ScsCnt)   AS ScsCnt2
					                     , DECODE(statDt, #{nowDate}, goodsCnt, #{beforeDate}, 0) AS goodsCnt1
					                     , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, goodsCnt) AS goodsCnt2
			                         FROM  (SELECT  goods_stats
			                                      , goods_regist_sttus
			                                      , #{nowDate}   AS statDt
			                                      , COUNT(SaaS)  AS SaasCnt
			                                      , COUNT(PaaS)  AS PaasCnt
			                                      , COUNT(IaaS)  AS IaasCnt
			                                      , COUNT(SCS)   AS ScsCnt
			                                      , (COUNT(SaaS) + COUNT(PaaS) + COUNT(IaaS) + COUNT(SCS)) AS goodsCnt
			                                  FROM  ( SELECT  'stats' AS goods_stats
			                                                , DECODE(goods_knd_cd, 1001, 'PaaS') AS PaaS
			                                                , DECODE(goods_knd_cd, 1002, 'SaaS') AS SaaS
			                                                , DECODE(goods_knd_cd, 1003, 'IaaS') AS IaaS
			                                                , DECODE(goods_knd_cd, 1004, 'SCS')  AS SCS
			                                                , goods_regist_sttus
			                                            FROM  TST_GOOD_INFO_I
			                                           WHERE  goods_regist_sttus = '1006'
			                                             AND  TO_CHAR(regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{basicDate}
			                                             AND  mngr_delete_at != 'Y'
			                                        )
			                                 GROUP  BY goods_stats, goods_regist_sttus
			                                 UNION  ALL
			                                SELECT  goods_stats
			                                      , goods_regist_sttus
			                                      , #{beforeDate} AS statDt
			                                      , COUNT(SaaS) AS SaasCnt
			                                      , COUNT(PaaS) AS PaasCnt
			                                      , COUNT(IaaS) AS IaasCnt
			                                      , COUNT(SCS) AS ScsCnt
			                                      , (COUNT(SaaS) + COUNT(PaaS) + COUNT(IaaS) + COUNT(SCS)) AS goodsCnt
			                                  FROM  ( SELECT  'stats' AS goods_stats
			                                                , DECODE(goods_knd_cd, 1001, 'PaaS') AS PaaS
			                                                , DECODE(goods_knd_cd, 1002, 'SaaS') AS SaaS
			                                                , DECODE(goods_knd_cd, 1003, 'IaaS') AS IaaS
			                                                , DECODE(goods_knd_cd, 1004, 'SCS')  AS SCS
			                                                , goods_regist_sttus
			                                            FROM  TST_GOOD_INFO_I
			                                           WHERE  goods_regist_sttus = '1006'
			                                             AND  TO_CHAR(regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{endDate}
			                                             AND  mngr_delete_at != 'Y'
			                                        )
			                                 GROUP  BY goods_stats, goods_regist_sttus
			                      )
			             )
			      GROUP  BY goods_stats,  goods_regist_sttus
			      UNION  ALL
			      /*비전시*/
			      SELECT  goods_stats
			            , goods_regist_sttus
			            , NVL(SUM(SaasCnt1), 0) AS SaasCnt
			            , (NVL(SUM(SaasCnt1), 0) - NVL(SUM(SaasCnt2), 0)) AS difSaasCnt
			            , NVL(SUM(PaasCnt1), 0) AS PaasCnt
			            , (NVL(SUM(PaasCnt1), 0) - NVL(SUM(PaasCnt2), 0)) AS difPaasCnt
			            , NVL(SUM(IaasCnt1), 0) AS IaasCnt
			            , (NVL(SUM(IaasCnt1), 0) - NVL(SUM(IaasCnt2), 0)) AS difIaasCnt
			            , NVL(SUM(ScsCnt1), 0) AS ScsCnt
			            , (NVL(SUM(ScsCnt1), 0) - NVL(SUM(ScsCnt2), 0)) AS difScsCnt
			            , NVL(SUM(goodsCnt1), 0) AS goodsCnt
			            , (NVL(SUM(goodsCnt1), 0) - NVL(SUM(goodsCnt2), 0)) AS difgoodsCnt
			        FROM  (SELECT  goods_stats
			                     , goods_regist_sttus
			                      , DECODE(statDt, #{nowDate}, SaasCnt, #{beforeDate}, 0)  AS SaasCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, SaasCnt)  AS SaasCnt2
			                      , DECODE(statDt, #{nowDate}, PaasCnt, #{beforeDate}, 0)  AS PaasCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, PaasCnt)  AS PaasCnt2
			                      , DECODE(statDt, #{nowDate}, IaasCnt, #{beforeDate}, 0)  AS IaasCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, IaasCnt)  AS IaasCnt2
			                      , DECODE(statDt, #{nowDate}, ScsCnt, #{beforeDate}, 0)   AS ScsCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, ScsCnt)   AS ScsCnt2
			                      , DECODE(statDt, #{nowDate}, goodsCnt, #{beforeDate}, 0) AS goodsCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, goodsCnt) AS goodsCnt2
			                 FROM  (SELECT  goods_stats
			                              , goods_regist_sttus
			                              , #{nowDate} AS statDt
			                              , COUNT(SaaS) AS SaasCnt
			                              , COUNT(PaaS) AS PaasCnt
			                              , COUNT(IaaS) AS IaasCnt
			                              , COUNT(SCS)  AS ScsCnt
			                              , (COUNT(SaaS) + COUNT(PaaS) + COUNT(IaaS) + COUNT(SCS)) AS goodsCnt
			                          FROM  ( SELECT  'stats' AS goods_stats
			                                        , DECODE(goods_knd_cd, 1001, 'PaaS') AS PaaS
			                                        , DECODE(goods_knd_cd, 1002, 'SaaS') AS SaaS
			                                        , DECODE(goods_knd_cd, 1003, 'IaaS') AS IaaS
			                                        , DECODE(goods_knd_cd, 1004, 'SCS')  AS SCS
			                                        , goods_regist_sttus
			                                    FROM  TST_GOOD_INFO_I
			                                   WHERE  goods_regist_sttus = '1007'
			                                     AND  TO_CHAR(regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{basicDate}
			                                     AND  mngr_delete_at != 'Y'
			                                )
			                         GROUP  BY goods_stats, goods_regist_sttus
			                         UNION  ALL
			                        SELECT  goods_stats
			                              , goods_regist_sttus
			                              , #{beforeDate} AS statDt
			                              , COUNT(SaaS) AS SaasCnt
			                              , COUNT(PaaS) AS PaasCnt
			                              , COUNT(IaaS) AS IaasCnt
			                              , COUNT(SCS)  AS ScsCnt
			                              , (COUNT(SaaS) + COUNT(PaaS) + COUNT(IaaS) + COUNT(SCS)) AS goodsCnt
			                          FROM  ( SELECT  'stats' AS goods_stats
			                                        , DECODE(goods_knd_cd, 1001, 'PaaS') AS PaaS
			                                        , DECODE(goods_knd_cd, 1002, 'SaaS') AS SaaS
			                                        , DECODE(goods_knd_cd, 1003, 'IaaS') AS IaaS
			                                        , DECODE(goods_knd_cd, 1004, 'SCS')  AS SCS
			                                        , goods_regist_sttus
			                                    FROM  TST_GOOD_INFO_I
			                                   WHERE  goods_regist_sttus = '1007'
			                                     AND  TO_CHAR(regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{endDate}
			                                     AND  mngr_delete_at != 'Y'
			                                )
			                         GROUP  BY goods_stats, goods_regist_sttus
			                       )
			              )
			       GROUP  BY goods_stats,  goods_regist_sttus
			       UNION  ALL
			       /* 회원*/
			       SELECT  goods_stats
			             , goods_regist_sttus
			             , NVL(SUM(SaasCnt1), 0) AS SaasCnt
			             , (NVL(SUM(SaasCnt1), 0) - NVL(SUM(SaasCnt2), 0)) AS difSaasCnt
			             , NVL(SUM(PaasCnt1), 0) AS PaasCnt
			             , (NVL(SUM(PaasCnt1), 0) - NVL(SUM(PaasCnt2), 0)) AS difPaasCnt
			             , NVL(SUM(IaasCnt1), 0) AS IaasCnt
			             , (NVL(SUM(IaasCnt1), 0) - NVL(SUM(IaasCnt2), 0)) AS difIaasCnt
			             , NVL(SUM(ScsCnt1), 0) AS ScsCnt
			             , (NVL(SUM(ScsCnt1), 0) - NVL(SUM(ScsCnt2), 0))   AS difScsCnt
			             , NVL(SUM(goodsCnt1), 0) AS goodsCnt
			             , (NVL(SUM(goodsCnt1), 0) - NVL(SUM(goodsCnt2), 0)) AS difgoodsCnt
			         FROM  (SELECT  goods_stats
			                      , goods_regist_sttus
			                      , DECODE(statDt, #{nowDate}, SaasCnt, #{beforeDate}, 0)  AS SaasCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, SaasCnt)  AS SaasCnt2
			                      , DECODE(statDt, #{nowDate}, PaasCnt, #{beforeDate}, 0)  AS PaasCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, PaasCnt)  AS PaasCnt2
			                      , DECODE(statDt, #{nowDate}, IaasCnt, #{beforeDate}, 0)  AS IaasCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, IaasCnt)  AS IaasCnt2
			                      , DECODE(statDt, #{nowDate}, ScsCnt, #{beforeDate}, 0)   AS ScsCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, ScsCnt)   AS ScsCnt2
			                      , DECODE(statDt, #{nowDate}, goodsCnt, #{beforeDate}, 0) AS goodsCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, goodsCnt) AS goodsCnt2
			                  FROM  (SELECT  goods_stats
			                               , goods_regist_sttus
			                               , #{nowDate} AS statDt
			                               , SUM(SaaS) AS SaasCnt
			                               , SUM(PaaS) AS PaasCnt
			                               , SUM(IaaS) AS IaasCnt
			                               , SUM(SCS)  AS ScsCnt
			                               , (NVL(SUM(SaaS), 0) + NVL(SUM(PaaS), 0) + NVL(SUM(IaaS), 0) + NVL(SUM(SCS), 0)) AS goodsCnt
			                           FROM  (SELECT  goods_stats
			                                        , goods_regist_sttus
			                                        , DECODE(user_ty_p, '1001', user_cnt) AS SaaS
			                                        , DECODE(user_ty_p, '2001', user_cnt) AS PaaS
			                                        , DECODE(user_ty_p, '3001', user_cnt) AS IaaS
			                                        , DECODE(user_ty_p, '4001', user_cnt) AS SCS
			                                    FROM  (SELECT  'stats' AS goods_stats
			                                                 , 1000 AS goods_regist_sttus
			                                                 , COUNT(A.user_id) AS user_cnt
			                                                 , DECODE(A.user_ty_cd, '1001', '1001', '1002', '1001', '2001', '2001', '2002', '2001', '3001', '3001', '3002', '3001', '4001', '4001', '4002', '4001') AS user_ty_p
			                                             FROM  op_user A
			                                            WHERE  A.user_sttus_cd IN (1001)
			                                              AND  TO_CHAR(A.regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{basicDate}
			                                            GROUP  BY A.user_ty_cd
			                                          )
			                                 )
			                          GROUP  BY goods_stats
			                          UNION  ALL
			                         SELECT  goods_stats
			                               , goods_regist_sttus
			                               , #{beforeDate} AS statDt
			                               , SUM(SaaS) AS SaasCnt
			                               , SUM(PaaS) AS PaasCnt
			                               , SUM(IaaS) AS IaasCnt
			                               , SUM(SCS) AS ScsCnt
			                               , (NVL(SUM(SaaS), 0) + NVL(SUM(PaaS), 0) + NVL(SUM(IaaS), 0) + NVL(SUM(SCS), 0)) AS goodsCnt
			                           FROM  (SELECT  goods_stats
			                                        , goods_regist_sttus
			                                        , DECODE(user_ty_p, '1001', user_cnt) AS SaaS
			                                        , DECODE(user_ty_p, '2001', user_cnt) AS PaaS
			                                        , DECODE(user_ty_p, '3001', user_cnt) AS IaaS
			                                        , DECODE(user_ty_p, '4001', user_cnt) AS SCS
			                                    FROM  (SELECT  'stats' AS goods_stats
			                                                 , 1000 AS goods_regist_sttus
			                                                 , COUNT(A.user_id) AS user_cnt
			                                                 , DECODE(A.user_ty_cd, '1001', '1001', '1002', '1001', '2001', '2001', '2002', '2001', '3001', '3001', '3002', '3001', '4001', '4001', '4002', '4001') AS user_ty_p
			                                             FROM  op_user A
			                                            WHERE  A.user_sttus_cd IN (1001)
			                                              AND  TO_CHAR(A.regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{endDate}
			                                            GROUP  BY A.user_ty_cd
			                                          )
			                                 )
			                          GROUP  BY goods_stats
			                        )
			               )
			        GROUP  BY goods_stats,  goods_regist_sttus
			        UNION  ALL
			       SELECT  goods_stats
			             , goods_regist_sttus
			             , SUM(SaasCnt1) AS SaasCnt
			             , (SUM(SaasCnt1)-SUM(SaasCnt2)) AS difSaasCnt
			             , SUM(PaasCnt1) AS PaasCnt
			             , (SUM(PaasCnt1)-SUM(PaasCnt2)) AS difPaasCnt
			             , SUM(IaasCnt1) AS IaasCnt
			             , (SUM(IaasCnt1)-SUM(IaasCnt2)) AS difIaasCnt
			             , SUM(ScsCnt1) AS ScsCnt
			             , (SUM(ScsCnt1)-SUM(ScsCnt2)) AS difScsCnt
			             , SUM(goodsCnt1) AS goodsCnt
			             , (SUM(goodsCnt1)-SUM(goodsCnt2)) AS difgoodsCnt
			         FROM  (SELECT  goods_stats
			                      , goods_regist_sttus
			                      , DECODE(statDt, #{nowDate}, SaasCnt, #{beforeDate}, 0)  AS SaasCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, SaasCnt)  AS SaasCnt2
			                      , DECODE(statDt, #{nowDate}, PaasCnt, #{beforeDate}, 0)  AS PaasCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, PaasCnt)  AS PaasCnt2
			                      , DECODE(statDt, #{nowDate}, IaasCnt, #{beforeDate}, 0)  AS IaasCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, IaasCnt)  AS IaasCnt2
			                      , DECODE(statDt, #{nowDate}, ScsCnt, #{beforeDate}, 0)   AS ScsCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, ScsCnt)   AS ScsCnt2
			                      , DECODE(statDt, #{nowDate}, goodsCnt, #{beforeDate}, 0) AS goodsCnt1
			                      , DECODE(statDt, #{nowDate}, 0, #{beforeDate}, goodsCnt) AS goodsCnt2
			                  FROM  (SELECT  goods_stats
			                               , goods_regist_sttus
			                               , #{nowDate}   AS statDt
			                               , SUM(SaasCnt) AS SaasCnt
			                               , SUM(PaasCnt) AS PaasCnt
			                               , SUM(IaasCnt) AS IaasCnt
			                               , SUM(ScsCnt)  AS ScsCnt
			                               , (NVL(SUM(SaasCnt), 0) + NVL(SUM(PaasCnt), 0) + NVL(SUM(IaasCnt), 0) + NVL(SUM(ScsCnt), 0)) AS goodsCnt
			                           FROM  (SELECT  'stats' AS goods_stats
			                                        , 2000 AS goods_regist_sttus
			                                        , COUNT(user_id) AS SaasCnt
			                                        , 0 AS PaasCnt
			                                        , 0 AS IaasCnt
			                                        , 0 AS ScsCnt
			                                    FROM  tcm_bass_agrem_manage_i A
			                                   WHERE  delete_at != 'Y'
			                                     AND  TO_CHAR(regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{basicDate}
			                                     AND  agrem_stat = 1004 
			                                 )
			                          GROUP  BY goods_stats, goods_regist_sttus
			                          UNION  ALL
			                         SELECT  goods_stats
			                               , goods_regist_sttus
			                               , #{beforeDate} AS statDt
			                               , SUM(SaasCnt) AS SaasCnt
			                               , SUM(PaasCnt) AS PaasCnt
			                               , SUM(IaasCnt) AS IaasCnt
			                               , SUM(ScsCnt)  AS ScsCnt
			                               , (SUM(SaasCnt) + SUM(PaasCnt) + SUM(IaasCnt) + SUM(ScsCnt)) AS goodsCnt
			                           FROM  (SELECT  'stats' AS goods_stats
			                                        , 2000 AS goods_regist_sttus
			                                        , COUNT(user_id) AS SaasCnt
			                                        , 0 AS PaasCnt
			                                        , 0 AS IaasCnt
			                                        , 0 AS ScsCnt
			                                    FROM  TCM_BASS_AGREM_MANAGE_I A
			                                   WHERE  DELETE_AT != 'Y'
			                                     AND  TO_CHAR(regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{endDate}
			                                     AND  agrem_stat = 1004
			                                 )
			                              GROUP BY goods_stats, goods_regist_sttus 
			                        )
			               )
			        GROUP  BY goods_stats,  goods_regist_sttus
			    )
			    )
	     GROUP  BY goods_stats
<!-- 		
		SELECT goods_stats
		      , MAX(aGoods_regist_sttus)	AS aGoods_regist_sttus
		      , NVL(SUM(aSaasCnt), 0)   	AS aSaasCnt
		      , 0 AS aDifSaasCnt
		      , NVL(SUM(aPaasCnt), 0)  		AS aPaasCnt
		      , 0 AS aDifPaasCnt
		      , NVL(SUM(aIaasCnt), 0)  		AS aIaasCnt
		      , 0 AS aDifIaasCnt
		      , NVL(SUM(aGoodsCnt), 0) 		AS aGoodsCnt
		      , 0 AS aDifGoodsCnt
		      , MAX(bGoods_regist_sttus)	AS bGoods_regist_sttus
		      , NVL(SUM(bSaasCnt), 0)  		AS bSaasCnt
		      , 0 AS bDifSaasCnt
		      , NVL(SUM(bPaasCnt), 0)  		AS bPaasCnt
		      , 0 AS bDifPaasCnt
		      , NVL(SUM(bIaasCnt), 0)  		AS bIaasCnt
		      , 0 AS bDifIaasCnt
		      , NVL(SUM(bGoodsCnt), 0) 		AS bGoodsCnt
		      , 0 AS bDifGoodsCnt
		      , MAX(mGoods_regist_sttus) 	AS mGoods_regist_sttus
		      , NVL(SUM(mSaasCnt), 0)  		AS mSaasCnt
		      , 0 AS mDifSaasCnt
		      , NVL(SUM(mPaasCnt), 0)  		AS mPaasCnt
		      , 0 AS mDifPaasCnt
		      , NVL(SUM(mIaasCnt), 0)  		AS mIaasCnt
		      , 0 AS mDifIaasCnt
		      , NVL(SUM(mGoodsCnt), 0) 		AS mGoodsCnt
		      , 0 AS mDifGoodsCnt
		      , MAX(bsGoods_regist_sttus) 	AS bsGoods_regist_sttus
		      , NVL(SUM(bsSaasCnt), 0)  	AS bsSaasCnt
		      , 0 AS bsDifSaasCnt
		      , NVL(SUM(bsPaasCnt), 0)  	AS bsPaasCnt
		      , 0 AS bsDifPaasCnt
		      , NVL(SUM(bsIaasCnt), 0)  	AS bsIaasCnt
		      , 0 AS bsDifIaasCnt
		      , NVL(SUM(bsGoodsCnt), 0) 	AS bsGoodsCnt
		      , 0 AS bsDifGoodsCnt
		      , #{issueDate}   				AS goodsDate
		      , #{basicDate}   				AS basicDate
		  FROM  ( SELECT  goods_stats
		                , DECODE(goods_regist_sttus, 1006, '전시',    1007, '0') AS aGoods_regist_sttus
		                , DECODE(goods_regist_sttus, 1006, SaasCnt,  1007,  0 ) AS aSaasCnt
           				, DECODE(goods_regist_sttus, 1006, PaasCnt,  1007,  0 ) AS aPaasCnt
           				, DECODE(goods_regist_sttus, 1006, IaasCnt,  1007,  0 ) AS aIaasCnt
           				, DECODE(goods_regist_sttus, 1006, goodsCnt, 1007,  0 ) AS aGoodsCnt
           				, DECODE(goods_regist_sttus, 1007, '비전시',   1006, '0') AS bGoods_regist_sttus
           				, DECODE(goods_regist_sttus, 1007, SaasCnt,  1006,  0 ) AS bSaasCnt
           				, DECODE(goods_regist_sttus, 1007, PaasCnt,  1006,  0 ) AS bPaasCnt
           				, DECODE(goods_regist_sttus, 1007, IaasCnt,  1006,  0 ) AS bIaasCnt
           				, DECODE(goods_regist_sttus, 1007, goodsCnt, 1006,  0 ) AS bGoodsCnt
           				, DECODE(goods_regist_sttus, 1000, '회원',    1006, '0', 1007, '0') AS mGoods_regist_sttus
           				, DECODE(goods_regist_sttus, 1000, SaasCnt,  1006,  0,  1007,  0 ) AS mSaasCnt
           				, DECODE(goods_regist_sttus, 1000, PaasCnt,  1006,  0,  1007,  0 ) AS mPaasCnt
           				, DECODE(goods_regist_sttus, 1000, IaasCnt,  1006,  0,  1007,  0 ) AS mIaasCnt
           				, DECODE(goods_regist_sttus, 1000, goodsCnt, 1006,  0,  1007,  0 ) AS mGoodsCnt
           				, DECODE(goods_regist_sttus, 2000, '협약',    1000, '회원', 1006, '0', 1007, '0') AS bsGoods_regist_sttus
           				, DECODE(goods_regist_sttus, 2000, SaasCnt,  1000, 0, 1006,  0,  1007,  0 ) AS bsSaasCnt
           				, DECODE(goods_regist_sttus, 2000, PaasCnt,  1000, 0, 1006,  0,  1007,  0 ) AS bsPaasCnt
           				, DECODE(goods_regist_sttus, 2000, IaasCnt,  1000, 0, 1006,  0,  1007,  0 ) AS bsIaasCnt
           				, DECODE(goods_regist_sttus, 2000, goodsCnt, 1000, 0, 1006,  0,  1007,  0 ) AS bsGoodsCnt
           		    FROM  ( 
           		           /* 전시*/
           		            SELECT  goods_stats
           		                  , goods_regist_sttus
           		                  , NVL(SaasCnt, 0) AS SaasCnt 
           		                  , NVL(PaasCnt, 0) AS PaasCnt 
           		                  , NVL(IaasCnt, 0) AS IaasCnt
           		                  , SUM(NVL(SaasCnt, 0)+NVL(PaasCnt, 0)+NVL(IaasCnt, 0)) AS goodsCnt
           		              FROM  ( SELECT  goods_stats
           		                            , goods_regist_sttus
           		                            , COUNT(SaaS) AS SaasCnt
           		                            , COUNT(PaaS) AS PaasCnt
           		                            , COUNT(IaaS) AS IaasCnt
           		                        FROM  ( SELECT  'stats' AS goods_stats
           		                                      , DECODE(goods_knd_cd, 1001, 'SaaS') AS SaaS
           		                                      , DECODE(goods_knd_cd, 1002, 'PaaS') AS PaaS
           		                                      , DECODE(goods_knd_cd, 1003, 'IaaS') AS IaaS
           		                                      , goods_regist_sttus
           		                                  FROM  TST_GOOD_INFO_I
           		                                 WHERE  goods_regist_sttus = '1006'
           		                                   AND  TO_CHAR(regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{basicDate}
           		                              )
           		                       GROUP  BY goods_stats, goods_regist_sttus
           		                    )
                             GROUP  BY goods_regist_sttus, SaasCnt, PaasCnt, IaasCnt
                             UNION  ALL
                             /* 비전시*/
                            SELECT  goods_stats
                                  , goods_regist_sttus
                                  , SaasCnt
                                  , PaasCnt
                                  , IaasCnt
                                  , SUM(SaasCnt+PaasCnt+IaasCnt) AS goodsCnt
                              FROM  ( SELECT  goods_stats
                                            , goods_regist_sttus
                                            , COUNT(SaaS) AS SaasCnt
                                            , COUNT(PaaS) AS PaasCnt
                                            , COUNT(IaaS) AS IaasCnt
                                        FROM  ( SELECT  'stats' AS goods_stats
                                                      , DECODE(goods_knd_cd, 1001, 'SaaS') AS SaaS
                                                      , DECODE(goods_knd_cd, 1002, 'PaaS') AS PaaS
                                                      , DECODE(goods_knd_cd, 1003, 'IaaS') AS IaaS
                                                      , goods_regist_sttus 
                                                  FROM  TST_GOOD_INFO_I
                                                 WHERE  goods_regist_sttus = '1007'
                                                   AND  TO_CHAR(regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{basicDate}
                                              )
                                       GROUP  BY goods_stats, goods_regist_sttus
                                    )
                             GROUP  BY goods_stats, goods_regist_sttus, SaasCnt, PaasCnt, IaasCnt
                             UNION ALL
                             /* 회원*/
                             SELECT  goods_stats
                                   , goods_regist_sttus
                                   , SaasCnt
                                   , PaasCnt
                                   , IaasCnt
                                   , (SaasCnt+PaasCnt+IaasCnt) AS goodsCnt
                               FROM  (SELECT  goods_stats
                                            , goods_regist_sttus
                                            , SUM(SaaS) AS SaasCnt
                                            , SUM(PaaS) AS PaasCnt
                                            , SUM(IaaS) AS IaasCnt
                                        FROM  (SELECT  goods_stats
                                                     , goods_regist_sttus
                                                     , DECODE(user_ty_p, '1001', user_cnt) AS SaaS
                                                     , DECODE(user_ty_p, '2001', user_cnt) AS PaaS
                                                     , DECODE(user_ty_p, '3001', user_cnt) AS IaaS
                                                 FROM  (SELECT  'stats' AS goods_stats
                                                              , 1000 AS goods_regist_sttus
                                                              , COUNT(A.user_id) AS user_cnt
                                                              , DECODE(A.user_ty_cd, '1001', '1001', '1002', '1001', '2001', '2001', '2002', '2001', '3001', '3001', '3002', '3001') AS user_ty_p
                                                          FROM  op_user A 
                                                         WHERE  A.user_sttus_cd IN (1001)
                                                           AND  TO_CHAR(A.regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{basicDate}
                                                         GROUP  BY A.user_ty_cd
                                                       )
                                              )
                                       GROUP  BY goods_stats
                                     )
                              GROUP  BY goods_stats, goods_regist_sttus, SaasCnt, PaasCnt, IaasCnt
                             UNION ALL
                             /* 협약*/
                            SELECT goods_stats
                                  , goods_regist_sttus
							      , SaasCnt
							      , PaasCnt
							      , IaasCnt
							      , (SaasCnt+PaasCnt+IaasCnt) AS goodsCnt
  					          FROM  (SELECT  'stats' AS goods_stats
  					                       , 2000 AS goods_regist_sttus
  					                       , COUNT(user_id) AS SaasCnt
  					                       , 0 AS PaasCnt
  					                       , 0 AS IaasCnt
							           FROM  TCM_BASS_AGREM_MANAGE_I A
						              WHERE  DELETE_AT != 'Y'
						            )
                          )
                )
         GROUP  BY goods_stats
 -->
	</select>
	
    <select id="goodsMonitorList" parameterType="map" resultType="ExplorerVO">
    	/* _explorer.goodsMonitorList */
    	SELECT  MAX(goods_code) AS goods_code
    	      , MAX(lang_code) AS lang_code
              , MAX(goods_knd_cd) AS goods_knd_cd
              , goods_nm
              , MAX(goods_monitor_url) AS goods_monitor_url
          FROM  TST_GOOD_INFO_I
         WHERE  mngr_delete_at='N' 
           AND  goods_actvty_at='Y'
           AND  LENGTH(goods_monitor_url) > 0
         GROUP  BY goods_nm
         ORDER  BY regist_dt DESC
    </select>

<!-- /*협약관리*/ -->
    <select id="workMonitorList" parameterType="map" resultType="ExplorerVO">
    	/*_explorer.workMonitorList */
    	SELECT state
    	      , MAX(DECODE (workState, '0', '체결승인')) AS workContract
    	      , NVL(SUM(workCnt1), 0) AS workContractCnt
    	      , MAX(DECODE (workState, '1', '검토(운영팀)')) AS workExam
    	      , NVL(SUM(workCnt2), 0) AS workExamCnt
    	      , MAX(DECODE (workState, '2', '승인(NIA)')) AS workApproval
    	      , NVL(SUM(workCnt3), 0) AS workApprovalCnt
    	      , MAX(DECODE (workState, '3', '발급요청')) AS workReq
    	      , NVL(SUM(workCnt4), 0) AS workReqCnt
    	      , MAX(DECODE (workState, '4', 'QA 답변대기')) AS qnaState
    	      , NVL(SUM(workCnt5), 0) AS qnaStateCnt
    	      , MAX(DECODE (workState, '5', '비즈매칭 답변대기')) AS bizState
    	      , NVL(SUM(workCnt6), 0) AS bizStateCnt
    	      , MAX(DECODE (workState, '6', '상품문의 답변대기')) AS goodsQnaState
    	      , NVL(SUM(workCnt7), 0) AS goodsQnaStateCnt
    	  FROM  (
    			 SELECT 'stat' AS state
    	               , workState
    	               , DECODE (workState, '0', workCnt, '1', 0) AS workCnt1
    	               , DECODE (workState, '0', 0, '1', workCnt) AS workCnt2
    	               , DECODE (workState, '0', 0, '1', 0, '2', workCnt) AS workCnt3
    	               , DECODE (workState, '0', 0, '1', 0, '2', 0, '3', workCnt) AS workCnt4
    	               , DECODE (workState, '0', 0, '1', 0, '2', 0, '3', 0, '4', workCnt) AS workCnt5
    	               , DECODE (workState, '0', 0, '1', 0, '2', 0, '3', 0, '4', 0, '5', workCnt) AS workCnt6
    	               , DECODE (workState, '0', 0, '1', 0, '2', 0, '3', 0, '4', 0, '5', 0, '6', workCnt) AS workCnt7
    	           FROM  (
    					  <!-- //협약관리>체계승인 건수 -->
    	                  SELECT  '0' AS workState
    	                        , COUNT(*) AS workCnt
    	                    FROM  tcm_bass_agrem_manage_i
    	                   WHERE 	DELETE_AT != 'Y'
    	                     AND  AGREM_STAT IN (1001,1002,1007)
    	                     AND  TO_CHAR(cncls_compt_de, 'YYYY-MM-DD hh:mm') &lt;= #{basicDate}
    	                   UNION  ALL
    	                   <!-- //서비스관리>검토(운영팀) -->
    	                   SELECT  '1' AS workState
    	                         , COUNT(*) AS workCnt
    	                     FROM  tst_good_info_i
    	                    WHERE  mngr_delete_at != 'Y'
    	                      AND  goods_actvty_at = 'Y'
    	                      AND  goods_regist_sttus IN (1002, 1005, 1009)
    	                      AND  GOODS_CODE IN ( SELECT  A.GOODS_CODE
    	                                           FROM  TST_GOOD_CATE_I A, TST_CATE_MGMT_M B
    	                                          WHERE  A.CTGRY_CODE = B.CTGRY_CODE
    	                                          GROUP  BY  A.GOODS_CODE )
    	                      AND  TO_CHAR(regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{basicDate}
    	                    UNION  ALL
    	                    <!-- //서비스관리>승인(NIA) -->
    	                   SELECT  '2' AS workState
    	                         , COUNT(*) AS workCnt
    	                     FROM  tst_good_info_i
    	                    WHERE  MNGR_DELETE_AT != 'Y' 
    	                      AND  goods_actvty_at = 'Y' 
    	                      AND  goods_code IN ( SELECT  A.goods_code
    	                                             FROM  tst_good_cate_i A
    	                                                 , tst_cate_mgmt_m B
    	                                            WHERE  A.ctgry_code = B.ctgry_code
    	                                            GROUP  BY  A.goods_code )
    	                      AND  GOODS_REGIST_STTUS = 1004
    	                      AND  TO_CHAR(regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{basicDate}
    	                   UNION ALL
    	                   <!-- //증명서관리 -->
    	                   SELECT '3' AS workState
    	                         , COUNT(*) as workCnt
    	                     FROM ROU_ISSU_APPLY_I
    	                    WHERE ISSU_STTUS =  '1001'
    	                      AND TO_CHAR(regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{basicDate}            
    	                   UNION ALL
    	                   SELECT '4' AS workState
    	                         , COUNT(*) as workCnt
    	                     FROM  op_board
    	                    WHERE  bbs_cd =  1003
    	                      AND  domain_cd = 2
    	                      AND  notice_bbsctt_at = 'N'
    	                      AND  banned_wrd_at = 'N'
    	                      AND  estn_column3 = 'N'
    	                      AND  TO_CHAR(regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{basicDate}
    	                   UNION ALL
    	                   SELECT '5' AS workState
    	                         , COUNT(*) as workCnt
    	                     FROM  op_board
    	                    WHERE  bbs_cd =  1010
    	                      AND  domain_cd = 2
    	                      AND  notice_bbsctt_at = 'N'
    	                      AND  banned_wrd_at = 'N'
    	                      AND  estn_column3 = 'N'
    	                      AND  TO_CHAR(regist_dt, 'YYYY-MM-DD HH:mm') &lt;= #{basicDate}
    	                   UNION ALL
    	                   	<!-- 상품문의 답변대기 -->
					         SELECT '6' AS workState
					                  , COUNT(*) as workCnt
					          FROM TST_GOOD_INQR_I A , TST_GOOD_INFO_I B , OP_USER C , OP_USER D, TUM_SVC_STOR_I E
					         WHERE B.GOODS_CODE = A.GOODS_CODE
					           AND C.USER_ID = A.INQR_ID
					           AND D.USER_ID = B.USER_ID
					           AND B.USER_ID = E.USER_ID
					           AND B.LANG_CODE = E.LANG_CODE
					           AND MNGR_DELETE_AT = 'N'
					           AND A.ANSWER_STTUS_CD = 1001
					           AND  TO_CHAR(A.REGIST_DT, 'YYYY-MM-DD HH:mm') &lt;= #{basicDate}
    	           		 )
    	          )
    	      GROUP BY state
    </select>
    
    <select id="totalCntrAmount" parameterType="map" resultType="ExplorerVO">
    	/*_explorer.totalCntrAmount*/
    	SELECT  cntrctState
    	      , SUM(cntrctAmount1) AS cntrctAmount
    	      , (SUM(cntrctAmount1) - SUM(cntrctAmount2)) AS difCntrctAmount
    	      , SUM(cntrctSnCnt1) AS cntrctSnCnt
    	      , (SUM(cntrctSnCnt1) - SUM(cntrctSnCnt2)) AS difCntrctSnCnt
    	  FROM  (SELECT  'state' AS cntrctState
    	               , DECODE(cntrctDt, #{nowDate}, cntrctAmount, #{beforeDate}, 0) AS cntrctAmount1
    	               , DECODE(cntrctDt, #{nowDate}, 0, #{beforeDate}, cntrctAmount) AS cntrctAmount2
    	               , DECODE(cntrctDt, #{nowDate}, cntrctSnCnt, #{beforeDate}, 0) AS cntrctSnCnt1
    	               , DECODE(cntrctDt, #{nowDate}, 0, #{beforeDate}, cntrctSnCnt) AS cntrctSnCnt2
    	           FROM  (SELECT  SUM(NVL(b.cntrct_amount, 0)) AS cntrctAmount
    	                        , COUNT(a.cntrct_sn) AS cntrctSnCnt
    	                        , #{nowDate} AS cntrctDt
    	                    FROM  tcm_cntrct_manage_i a,
    	                          tcm_cntrct_service_i b
    	                   WHERE  a.delete_at != 'N'
    	                     AND  a.asis = 'N'
    	                     <!-- AND  sport_at = 'N' -->
                             AND  TO_CHAR(a.cntr_dt, 'YYYY-MM-DD hh:mm:ss') BETWEEN '2016-02-01 00:00' AND #{basicDate}
                             AND a.cntrct_sn = b.cntrct_sn                                                          
<!--                              AND  cntr_num NOT LIKE '%추가%' -->
                           UNION  ALL
                          SELECT  SUM(NVL(cntrctamount, 0)) AS cntrctAmount
                                , COUNT(cntrct_sn) AS cntrctSnCnt
                                , #{beforeDate} AS cntrctDt
                            FROM  tcm_cntrct_manage_i
                           WHERE  delete_at != 'N'
                             AND  asis = 'N'
                             <!-- AND  sport_at = 'N' -->
<!--                              AND  cntr_num NOT LIKE '%추가%' -->
                             AND  TO_CHAR(cntr_dt, 'YYYY-MM-DD hh:mm:ss') BETWEEN  '2016-02-01 00:00' AND #{basicDate}                                                      
                          )
                )
         GROUP  BY cntrctState
<!-- 
    	SELECT  SUM(NVL(cntrctamount, 0)) AS cntrctAmount
    	      , COUNT(cntrct_sn) AS cntrctSnCnt
    	  FROM  tcm_cntrct_manage_i
    	 WHERE  delete_at != 'Y'
    	   AND  TO_CHAR(cntr_dt, 'YYYY-MM') BETWEEN  '2016-01' AND TO_CHAR(#{basicDate}, 'YYYY-MM')
 -->
    </select>
    
<!-- 계약금액 TOP 10 -->
    <select id="totalCntrTopList" parameterType="map" resultType="HashMap">
    	/*_explorer.totalCntrTopList*/
    	SELECT rNum
    	      , purchsInsttNm
    	      , cntrctAmount
    	  FROM  ( SELECT  ROWNUM AS rNum
    	                , purchsInsttNm
    	                , cntrctAmount
    	            FROM  (
							SELECT 
									Z.purchsInsttNm
									, Z.cntrctAmount
							FROM (		
							SELECT  A.purchs_instt_nm2 AS purchsInsttNm
    	                         , SUM(B.cntrct_amount) AS cntrctAmount
    	                     FROM  TCM_CNTRCT_MANAGE_I A,
          	                       TCM_CNTRCT_SERVICE_I B
    	                    
    	                    WHERE  A.DELETE_AT != 'N'
    	                      AND  A.asis = 'N'
    	                      AND  A.USER_SE != '1'
    	                      AND  TO_CHAR(A.CNTR_DT, 'YYYY-MM') BETWEEN  '2016-01' AND #{basicDate}
    	                      AND A.cntrct_sn = B.cntrct_sn    	      
    	                      AND A.purchs_instt_nm2 IS NOT NULL                
    	                    GROUP  BY A.purchs_instt_nm2
    	                    ) Z    	    
       	                    ORDER BY Z.cntrctAmount DESC      	            
    	                  )
    	        )
    	 WHERE  rNum &lt;= 10
    </select>
    
<!-- 계약건수 TOP 10 -->
    <select id="totalCntrCountTopList" parameterType="map" resultType="HashMap">
    	/*_explorer.totalCntrCountTopList*/
    	SELECT rNum
    	      , purchsInsttNm
    	      , cntrctAmount
    	  FROM  ( SELECT  ROWNUM AS rNum
    	                , purchsInsttNm
    	                , cntrctAmount
    	            FROM  (
							SELECT 
									Z.purchsInsttNm
									, Z.cntrctAmount
							FROM (		
							SELECT  A.purchs_instt_nm2 AS purchsInsttNm
    	                         , SUM(B.cntrct_amount) AS cntrctAmount
    	                     FROM  TCM_CNTRCT_MANAGE_I A,
          	                       TCM_CNTRCT_SERVICE_I B
    	                    
    	                    WHERE  A.DELETE_AT != 'N'
    	                      AND  A.asis = 'N'
    	                      AND  A.USER_SE != '1'
    	                      AND  TO_CHAR(A.CNTR_DT, 'YYYY-MM') BETWEEN  '2016-01' AND #{basicDate}
    	                      AND A.cntrct_sn = B.cntrct_sn    	      
    	                      AND A.purchs_instt_nm2 IS NOT NULL                
    	                    GROUP  BY A.purchs_instt_nm2
    	                    ) Z    	    
       	                    ORDER BY Z.cntrctAmount DESC     	            
    	                  )
    	        )
    	 WHERE  rNum &lt;= 10
    </select>
     
     
<!-- 계약금액 누적통계 -->
	<select id="cntrctAmountView" parameterType="map" resultType="HashMap">
		/*_explorer.cntrctAmountView*/
		SELECT  cntrDtYyyy
		      , DECODE(cntrDtYyyy, '2018', 'window.chartColors.blue', '2017', 'window.chartColors.red', '2016', 'window.chartColors.orange') AS cntrColor
		      , SUM(cntrctamount) AS cntrctamount
		      , SUM(Jan)  AS Jan
		      , SUM(Feb)  AS Feb
		      , SUM(Mar)  AS Mar
		      , SUM(Apr)  AS Apr
		      , SUM(May)  AS May
		      , SUM(Jun)  AS Jun
		      , SUM(Jul)  AS Jul
		      , SUM(Aug)  AS Aug
		      , SUM(Sept) AS Sept
		      , SUM(Oct)  AS Oct
		      , SUM(Nov)  AS Nov
		      , SUM(Dece) AS Dece
		      , (SUM(Jan) + SUM(Feb) + SUM(Mar))  AS aQuarter
		      , (SUM(Apr) + SUM(May) + SUM(Jun))  AS bQuarter
		      , (SUM(Jul) + SUM(Aug) + SUM(Sept)) AS cQuarter
		      , (SUM(Oct) + SUM(Nov) + SUM(Dece)) AS dQuarter
		  FROM  (SELECT  purchsInsttNm
		               , TO_CHAR(cntr_dt,'YYYY') AS cntrDtYyyy
		               , cntrctamount
		               , TO_CHAR(cntr_dt,'MM') AS cntrDtMm
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '01', cntrctamount, 0) AS Jan
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '02', cntrctamount, 0) AS Feb
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '03', cntrctamount, 0) AS Mar
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '04', cntrctamount, 0) AS Apr
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '05', cntrctamount, 0) AS May
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '06', cntrctamount, 0) AS Jun
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '07', cntrctamount, 0) AS Jul
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '08', cntrctamount, 0) AS Aug
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '09', cntrctamount, 0) AS Sept
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '10', cntrctamount, 0) AS Oct
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '11', cntrctamount, 0) AS Nov
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '12', cntrctamount, 0) AS Dece
		           FROM  (SELECT  A.purchs_instt_nm AS purchsInsttNm
		                        , B.cntrct_amount AS cntrctamount
		                        , A.cntr_dt
		                    FROM  TCM_CNTRCT_MANAGE_I A,
		                          TCM_CNTRCT_SERVICE_I B 
		                   <!-- WHERE  DELETE_AT != 'Y' -->
		                   WHERE  A.DELETE_AT != 'N'
		                     AND  A.ASIS = 'N'
		                     AND  TO_CHAR(A.cntr_dt, 'YYYY-MM') BETWEEN '2016-01' AND TO_CHAR(#{basicDate}, 'YYYY-MM')
    	                      AND A.cntrct_sn = B.cntrct_sn		                     		                     
		                 )
		        )
		  WHERE 1 = 1

		 <if test="flag == 'cntrct'">
		 	GROUP  BY cntrDtYyyy WITH ROLLUP
		 </if>
		 <if test="flag != 'cntrct'">
		 	GROUP  BY cntrDtYyyy
		 </if>
	</select>

<!-- 계약건수 누적통계 -->
	<select id="cntrctCountView" parameterType="map" resultType="HashMap">
		/*_explorer.cntrctCountView*/
		SELECT  cntrDtYyyy
		      , SUM(Jan)  AS Jan
		      , SUM(Feb)  AS Feb
		      , SUM(Mar)  AS Mar
		      , SUM(Apr)  AS Apr
		      , SUM(May)  AS May
		      , SUM(Jun)  AS Jun
		      , SUM(Jul)  AS Jul
		      , SUM(Aug)  AS Aug
		      , SUM(Sept) AS Sept
		      , SUM(Oct)  AS Oct
		      , SUM(Nov)  AS Nov
		      , SUM(Dece) AS Dece
		  FROM  (SELECT  TO_CHAR(cntr_dt,'YYYY') AS cntrDtYyyy
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '01', cntrctAmount, 0) AS Jan
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '02', cntrctAmount, 0) AS Feb
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '03', cntrctAmount, 0) AS Mar
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '04', cntrctAmount, 0) AS Apr
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '05', cntrctAmount, 0) AS May
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '06', cntrctAmount, 0) AS Jun
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '07', cntrctAmount, 0) AS Jul
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '08', cntrctAmount, 0) AS Aug
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '09', cntrctAmount, 0) AS Sept
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '10', cntrctAmount, 0) AS Oct
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '11', cntrctAmount, 0) AS Nov
		               , DECODE(TO_CHAR(cntr_dt,'MM'), '12', cntrctAmount, 0) AS Dece
		           FROM  (SELECT  A.purchs_instt_nm AS purchsInsttNm
		                        , COUNT(B.cntrct_amount) AS cntrctAmount
		                        , A.cntr_dt
		                    FROM  TCM_CNTRCT_MANAGE_I A,
		                          TCM_CNTRCT_SERVICE_I B 
		                   <!-- WHERE  DELETE_AT != 'Y' -->
		                   WHERE  A.DELETE_AT != 'N'
		                     AND  A.ASIS = 'N'
		                     AND  TO_CHAR(A.cntr_dt, 'YYYY-MM') BETWEEN '2016-01' AND TO_CHAR(#{basicDate}, 'YYYY-MM')
		                   GROUP  BY A.purchs_instt_nm, TO_CHAR(A.cntr_dt, 'YYYY-MM')
		                 )
		        )
		 GROUP  BY cntrDtYyyy
	</select>
	
<!-- 계약금액 서비스 비율 -->
	<select id="cntrctRatio" parameterType="map" resultType="ExplorerVO">
		/*_explorer.cntrctRatio*/
		SELECT  saasCnt
		      , paasCnt
		      , iaasCnt
		      , scsCnt
		      , (saasCnt + paasCnt + iaasCnt + scsCnt) AS cntSum
		  FROM  (SELECT  SUM(DECODE(goods_knd, 'SaaS', cntrctCnt, 'PaaS', 0, 'IaaS', 0, 'SCS', 0)) AS saasCnt
		               , SUM(DECODE(goods_knd, 'SaaS', 0, 'PaaS', cntrctCnt, 'IaaS', 0, 'SCS', 0)) AS paasCnt
		               , SUM(DECODE(goods_knd, 'SaaS', 0, 'PaaS', 0, 'IaaS', cntrctCnt, 'SCS', 0)) AS iaasCnt
		               , SUM(DECODE(goods_knd, 'SaaS', 0, 'PaaS', 0, 'IaaS', 0, 'SCS', cntrctCnt)) AS scsCnt
		           FROM  (SELECT  COUNT(cntrct_sn) AS cntrctCnt
		                        , goods_knd
		                    FROM  (SELECT  A.cntrct_sn
		                                 , NVL(DECODE( (SELECT goods_knd_cd
		                                                  FROM TST_GOOD_INFO_I
		                                                 WHERE goods_code = A.goods_code), 1001, 'PaaS', 1002, 'SaaS', 1003, 'IaaS', 1004, 'SCS'),  'PaaS')  AS goods_knd
		                             FROM  TCM_CNTRCT_MANAGE_I A,
		                                   TCM_CNTRCT_SERVICE_I B 
		                            <!-- WHERE  DELETE_AT != 'Y' -->
		                            WHERE  A.DELETE_AT != 'N'
		                              AND  A.ASIS = 'N'
		                              AND  TO_CHAR(A.cntr_dt, 'YYYY-MM-DD hh:mm:ss') BETWEEN '2016-02-01 00:00:00' AND #{basicDate}
		                              AND A.cntrct_sn = B.cntrct_sn
		                          )
		                   GROUP  BY goods_knd
		                 )
		        )
	</select>

<!-- 계약건수 서비스 비율 -->
	<select id="cntrctCountRatio" parameterType="map" resultType="ExplorerVO">
		/*_explorer.cntrctCountRatio*/
		SELECT  SUM(saasCnt) AS saasCnt
		      , SUM(paasCnt) AS paasCnt
		      , SUM(iaasCnt) AS iaasCnt
		      , SUM(scsCnt)  AS scsCnt
		      , SUM(cntSum)  AS cntSum
		  FROM  (SELECT  saasCnt
		               , paasCnt
		               , iaasCnt
		               , scsCnt
		               , (saasCnt + paasCnt + iaasCnt + scsCnt) AS cntSum
		           FROM  (SELECT  SUM(DECODE(goods_knd, 'SaaS', cntrctCnt, 'PaaS', 0, 'IaaS', 0, 'SCS', 0)) AS saasCnt
		                        , SUM(DECODE(goods_knd, 'SaaS', 0, 'PaaS', cntrctCnt, 'IaaS', 0, 'SCS', 0)) AS paasCnt
		                        , SUM(DECODE(goods_knd, 'SaaS', 0, 'PaaS', 0, 'IaaS', cntrctCnt, 'SCS', 0)) AS iaasCnt
		                        , SUM(DECODE(goods_knd, 'SaaS', 0, 'PaaS', 0, 'IaaS', 0, 'SCS', cntrctCnt)) AS scsCnt
		                        , goods_knd
		                    FROM  (SELECT  COUNT(A.cntrct_sn) AS cntrctCnt
		                                 , NVL(DECODE( (SELECT goods_knd_cd FROM  TST_GOOD_INFO_I WHERE goods_code = A.goods_code), 1001, 'PaaS', 1002, 'SaaS', 1003, 'IaaS', 1004, 'SCS'),  'PaaS')  AS goods_knd
		                             FROM  TCM_CNTRCT_MANAGE_I A,
		                                   TCM_CNTRCT_SERVICE_I B
		                            <!-- WHERE  A.delete_at != 'Y' -->
		                   			WHERE  A.DELETE_AT != 'N'
		                     		  AND  A.ASIS = 'N'
		                              AND  TO_CHAR(A.cntr_dt, 'YYYY-MM-DD hh:mm:ss') BETWEEN '2016-02-01 00:00:00' AND #{basicDate}
		                              AND A.cntrct_sn = B.cntrct_sn
		                            GROUP  BY A.goods_code
		                          )
		                   GROUP  BY goods_knd
		                )
		        )
	</select>

	<select id="cntrctTpList" parameterType="map" resultType="HashMap">
		/*_explorer.cntrctTpList*/
		SELECT  SUM(saasCnt) AS saasCnt
		      , SUM(paasCnt) AS paasCnt
		      , SUM(iaasCnt) AS iaasCnt
		      , SUM(scsCnt)  AS scsCnt
		      , SUM(cntSum)  AS cntSum
		      , NVL(cntrDt, '합계') AS cntrDt
		  FROM  (SELECT  saasCnt
		               , paasCnt
		               , iaasCnt
		               , scsCnt
		               , (saasCnt + paasCnt + iaasCnt + scsCnt) AS cntSum
		               , cntrDt
		           FROM  (SELECT  SUM(DECODE(goods_knd, 'SaaS', cntrctCnt, 'PaaS', 0, 'IaaS', 0, 'SCS', 0)) AS saasCnt
		                        , SUM(DECODE(goods_knd, 'SaaS', 0, 'PaaS', cntrctCnt, 'IaaS', 0, 'SCS', 0)) AS paasCnt
		                        , SUM(DECODE(goods_knd, 'SaaS', 0, 'PaaS', 0, 'IaaS', cntrctCnt, 'SCS', 0)) AS iaasCnt
		                        , SUM(DECODE(goods_knd, 'SaaS', 0, 'PaaS', 0, 'IaaS', 0, 'SCS', cntrctCnt)) AS scsCnt
		                        , goods_knd
		                        , cntrDt
		                    FROM  (SELECT  COUNT(A.cntrct_sn) AS cntrctCnt
		                                 , TO_CHAR(A.cntr_dt, 'YYYY') AS cntrDt
		                                 , NVL(DECODE( (SELECT goods_knd_cd FROM  TST_GOOD_INFO_I WHERE goods_code = A.goods_code), 1001, 'PaaS', 1002, 'SaaS', 1003, 'IaaS', 1004, 'SCS'),  'PaaS')  AS goods_knd
		                             FROM  TCM_CNTRCT_MANAGE_I A
		                            <!-- WHERE  A.delete_at != 'Y' -->
		                            WHERE  A.DELETE_AT != 'N'
		                     		  AND  A.ASIS = 'N'
		                              AND  TO_CHAR(A.cntr_dt, 'YYYY-MM-DD hh:mm:ss') BETWEEN '2016-02-01 00:00:00' AND #{basicDate}
		                            GROUP  BY A.goods_code, cntrDt
		                          )
		                   GROUP  BY goods_knd, cntrDt
		                )
		        )
        GROUP  BY cntrDt WITH ROLLUP
	</select>
	
	<select id="cntrctCorpList" parameterType="map" resultType="HashMap">
		/*_explorer.cntrctCorpList*/
		SELECT  SUM(priveCnt) 		AS priveCnt
              , SUM(corpCnt)  		AS corpCnt
              , SUM(orgCnt)   		AS orgCnt
              , SUM(cntSum)      	AS cntSum
              , NVL(cntrDt, '합계')	AS cntrDt
          FROM  (SELECT  priveCnt
			           , corpCnt
			           , orgCnt
			           , (priveCnt+corpCnt+orgCnt) AS cntSum
			           , cntrDt
			       FROM  (SELECT  SUM(priveCnt) AS priveCnt
			                    , SUM(corpCnt)  AS corpCnt
			                    , SUM(orgCnt)   AS orgCnt
			                    , cntrDt
			                FROM  (SELECT  DECODE(user_ty_p, '1001', user_cnt) AS priveCnt
			                             , DECODE(user_ty_p, '2001', user_cnt) AS corpCnt
			                             , DECODE(user_ty_p, '3001', user_cnt) AS orgCnt
			                             , cntrDt
			                         FROM  (SELECT  COUNT(A.user_id) AS user_cnt
			                                      , DECODE(A.user_ty_cd, '1001', '1001', '1002', '1001', '2001', '2001', '2002', '2001', '3001', '3001', '3002', '3001') AS user_ty_p
			                                      , TO_CHAR(A.regist_dt, 'YYYY') AS cntrDt
			                                  FROM  op_user A 
			                                 WHERE  A.user_sttus_cd IN (1001)
			                                   AND  TO_CHAR(A.regist_dt, 'YYYY-MM-DD hh:mm:ss') BETWEEN '2016-03 00:00:00' AND #{basicDate}
			                                 GROUP  BY A.regist_dt
			                               )
			                      )
			               GROUP  BY cntrDt
			             )
			     )
		  GROUP  BY cntrDt WITH ROLLUP
          ORDER  BY cntrDt
	</select>


	<select id="cntrctServiceList" parameterType="map" resultType="HashMap">
		/*_explorer.cntrctServiceList*/
		SELECT  DECODE(NVL(svcNm, '서비스명 없음'), '', '서비스명 없음', svcNm) AS svcNm
		      , goodsCode
		      , MAX(NVL(goodsKnd, 'SaaS')) AS goodsKnd
		      , SUM(NVL(cntrctAmount, 0)) AS cntrctAmount
		      , SUM(DECODE(userTyCd, '1001', cntrctAmount, '2001', 0, '3001', 0)) AS privAmount
		      , SUM(DECODE(userTyCd, '1001', 0, '2001', cntrctAmount, '3001', 0)) AS corpAmount
		      , SUM(DECODE(userTyCd, '1001', 0, '2001', 0, '3001', cntrctAmount)) AS orgAmount
		  FROM  (SELECT  TRIM(A.svc_nm) AS svcNm
		               , A.goods_code AS goodsCode
		               , A.cntrctamount  AS cntrctAmount
		               , (SELECT DECODE(goods_knd_cd, 1001, 'PaaS', 1002, 'SaaS', 1003, 'IaaS') 
		                    FROM TST_GOOD_INFO_I
		                   WHERE goods_code = A.goods_code) AS goodsKnd
		               , (SELECT DECODE(user_ty_cd, '1001', '1001', '1002', '1001', '2001', '2001', '2002', '2001', '3001', '3001', '3002', '3001') 
                            FROM op_user
                           WHERE user_id = A.user_id) AS userTyCd
                   FROM  tcm_cntrct_manage_i A
                  <!-- WHERE  A.delete_at != 'Y' -->
                  WHERE  A.DELETE_AT != 'N'
		            AND  A.ASIS = 'N'
                    AND  TO_CHAR(A.cntr_dt, 'YYYY-MM') BETWEEN '2016-01' AND TO_CHAR(#{basicDate}, 'YYYY-MM')
                )
         WHERE 1=1
         
         <if test="goodsKnd != '' and goodsKnd != null">
           AND goodsKnd = #{goodsKnd}
         </if>
         
         <if test="svcNm != '' and svcNm != null">
         	AND svcNm LIKE '%' || #{svcNm} || '%'
         </if>
         GROUP  BY svcNm, goodsCode

         <if test="sortVl eq 'cntrctAmount' or sortVl eq null">
         	ORDER  BY cntrctAmount DESC
         </if>
         
         <if test="sortVl eq 'svcNm'">
         	ORDER  BY svcNm ASC
         </if>
	</select>
	
	<select id="cntrctServiceDetailCount" parameterType="ResultVO" resultType="int">
     	/*_explorer.cntrctServiceDetailCount*/      
        SELECT COUNT(1) AS totalCount
          FROM TCM_CNTRCT_MANAGE_I A
          LEFT JOIN TCM_CNTRCT_TEMP_USER C
         	ON A.TEMP_USER_SN = C.USER_SN
		  LEFT JOIN OP_USER_PBLINSTT_OPTION D 
			ON A.COMM_USER_ID = D.USER_ID 
		 <!-- WHERE DELETE_AT != 'Y' -->
		 WHERE  A.DELETE_AT != 'N'
		   AND  A.ASIS = 'N'
		 <if test="goodsCode != '' and goodsCode != null">
		 	AND A.GOODS_CODE = #{goodsCode}
		 </if>
		 
		 <if test="userId != '' and userId != null">
		 	AND A.user_id = #{userId}
		 </if>
<!-- 		 
		 <if test="svcNm != '' and svcNm != null">
		 	AND A.SVC_NM = #{svcNm}
		 </if>
 -->
    </select>
	
	<select id="cntrctServiceDetailList" parameterType="map" resultType="ResultVO">
    	/*_explorer.cntrctServiceDetailList*/
      	SELECT Y.* FROM (
      		SELECT ROWNUM NUM, X.* FROM (
				SELECT A.CNTRCT_SN AS cntrctSn 
				     , A.USER_ID AS userId 
				     , A.SVC_NM AS svcNm 
				     , TO_CHAR(CNTR_DT,'yyyy-mm-dd') AS cntrDt
				     , A.CNTRCT_BEGIN_DE AS cntrctBeginDe 
				     , A.CNTRCT_END_DE AS cntrctEndDe 
				     , A.CNTRCTAMOUNT AS cntrctamount 
				     , A.PURCHS_INSTT_NM AS purchsInsttNm 
				     , CASE WHEN A.goods_code IS NOT NULL THEN (SELECT  B.cmpny_nm 
				                                                  FROM  tst_good_info_i C
				                                                      , op_user_entrprs_option B 
				                                                 WHERE  C.user_id = B.user_id 
				                                                   AND  C.goods_code = A.goods_code) 
				       ELSE A.SLE_INSTT_NM END AS sleInsttNm 
				     , A.CTRTC_SN AS ctrtcSn 
				     , IFNULL(A.COMM_USER_ID,A.REGIST_ID) AS registId 
				     , A.REGIST_DT 		AS registDt 
				     , A.UPDT_ID 		AS updtId 
				     , A.UPDT_DT 		AS updtDt 
				     , A.DELETE_AT 		AS deleteAt 
				     , A.TEMP_USER_SN	AS tempUserSn
				     , A.CNTR_COUNT		AS cntrCount
				     , B.GOODS_NM		AS goodsNm
				     , A.USE_AT 		AS useAt
				  FROM TCM_CNTRCT_MANAGE_I A
			 LEFT JOIN TST_GOOD_INFO_I B
	                ON A.GOODS_CODE = B.GOODS_CODE
	         LEFT JOIN TCM_CNTRCT_TEMP_USER C
	         		ON A.TEMP_USER_SN = C.USER_SN
			  LEFT JOIN OP_USER_PBLINSTT_OPTION D 
					 ON A.COMM_USER_ID = D.USER_ID 
			 LEFT JOIN OP_CODE_INDVDLZ G
                     ON G.GROUP_CD = '2046'
                    AND G.INDVDLZ_CD = A.REGIST_MTHD_CODE					 
				 <!-- WHERE A.DELETE_AT != 'Y' -->
				 WHERE  A.DELETE_AT != 'N'
				   AND  A.ASIS = 'N'
				 <if test="goodsCode != '' and goodsCode != null">
				 	AND A.GOODS_CODE = #{goodsCode}
				 </if>
				 <if test="userId != '' and userId != null">
				 	AND A.user_id = #{userId}
				 </if>
		         ORDER BY A.REGIST_DT DESC
        	) X  WHERE ROWNUM &lt;= #{pagingEndNum}
		) Y  
		WHERE 1=1
<!-- 		 
		<if test="svcNm != '' and svcNm != null">
		  AND svcNm = #{svcNm}
		</if>
 -->		
		  AND NUM &gt;= #{pagingStartNum}
	</select>
	
	
	<select id="cntrctSupplyList" parameterType="map" resultType="HashMap">
		/*_explorer.cntrctSupplyList*/
		SELECT  goodsMakr
		      , smlpzChk
		      , userId
		      , SUM(cntrctAmount) AS cntrctAmount
		      , SUM(DECODE(goodsKnd, 'SaaS', cntrctAmount, 'PaaS', 0, 'IaaS', 0, 'SCS', 0)) AS saasCnt
		      , SUM(DECODE(goodsKnd, 'SaaS', 0, 'PaaS', cntrctAmount, 'IaaS', 0, 'SCS', 0)) AS paasCnt
		      , SUM(DECODE(goodsKnd, 'SaaS', 0, 'PaaS', 0, 'IaaS', cntrctAmount, 'SCS', 0)) AS iaasCnt
		      , SUM(DECODE(goodsKnd, 'SaaS', 0, 'PaaS', 0, 'IaaS', 0, 'SCS', cntrctAmount)) AS iaasCnt
		  FROM  (SELECT  cntrctAmount
		               , userId
		               , NVL(goodsMakr, '-')	AS goodsMakr
		               , NVL(smlpzChk,  '-')	AS smlpzChk
		               , NVL(goodsKnd,  '-')	AS goodsKnd
		           FROM  (SELECT  A.cntrctamount AS cntrctAmount
		                        , A.user_id AS userId 
		                        , (SELECT goods_makr 
		                             FROM tst_good_info_i 
		                            WHERE mngr_delete_at='N' 
		                              AND goods_actvty_at = 'Y' 
		                              AND goods_regist_sttus = '1006' 
		                              AND user_id = A.user_id 
		                              AND goods_code = A.goods_code) AS goodsMakr
                                , (SELECT DECODE(smlpz_chk, 'Y', '중소기업', 'M', '중견기업', 'B', '대기업') 
                                     FROM tst_good_info_i 
                                    WHERE mngr_delete_at='N' 
                                      AND goods_actvty_at = 'Y' 
                                      AND goods_regist_sttus = '1006' 
                                      AND user_id = A.user_id 
                                      AND goods_code = A.goods_code) AS smlpzChk 
                                 , (SELECT DECODE(goods_knd_cd, 1001, 'PaaS', 1002, 'SaaS', 1003, 'IaaS')
                                      FROM TST_GOOD_INFO_I
                                     WHERE goods_code = A.goods_code) AS goodsKnd
                             FROM  tcm_cntrct_manage_i A
                            <!-- WHERE  A.delete_at != 'Y' -->
                            WHERE  A.DELETE_AT != 'N'
		                      AND  A.ASIS = 'N'
                              AND  TO_CHAR(A.cntr_dt, 'YYYY-MM') BETWEEN  '2016-01' AND TO_CHAR(#{basicDate}, 'YYYY-MM')
                            ORDER  BY cntrct_sn DESC
                         )
                )
         WHERE  1=1
         <if test="smlpzChk != '' and smlpzChk != null">
           AND  smlpzChk = #{smlpzChk}
         </if>
         <if test="goodsMakr != '' and goodsMakr != null">
           AND  goodsMakr LIKE '%' || #{goodsMakr} || '%'
         </if>
         GROUP  BY goodsMakr, smlpzChk, userId

         <if test="sortVl eq 'cntrctAmount' or sortVl eq null">
         	ORDER  BY cntrctAmount DESC
         </if>
         <if test="sortVl eq 'goodsMakr'">
         	ORDER  BY goodsMakr ASC
         </if>
          
	</select>

	
	<select id="_explorer.cntrctUseInsttList" parameterType="map" resultType="HashMap">
		/*_explorer.cntrctUseInsttList*/
	    SELECT userTy
	          ,userTyCd
	          ,purchsInsttNm
	          ,cntrctAmount
	          ,cntrCount
	          ,cntrctNum
	      FROM (
	              SELECT DECODE(userTyCd, '1001', '개인', '2001', '기업', '3001', '공공') AS userTy
	                    ,userTyCd
	                    ,purchsInsttNm
	                    ,SUM(cntrctAmount) AS cntrctAmount
	                    ,SUM(NVL(cntrCount, 0)) AS cntrCount
	                    ,COUNT(*) AS cntrctNum
	                FROM (
	                       SELECT (SELECT DECODE(user_ty_cd, '1001', '1001', '1002', '1001', '2001', '2001', '2002', '2001', '3001', '3001', '3002', '3001') 
	                                 FROM op_user 
	                                WHERE user_id = A.user_id
	                              ) AS userTyCd
	                             ,A.purchs_instt_nm AS purchsInsttNm
	                             ,A.cntrctamount AS cntrctAmount
	                             ,A.cntr_count AS cntrCount
	                         FROM tcm_cntrct_manage_i A
	                        <!-- WHERE A.delete_at != 'Y' -->
	                        WHERE  A.DELETE_AT != 'N'
	                          AND  A.ASIS = 'N'
	                          AND TO_CHAR(A.cntr_dt, 'YYYY-MM') BETWEEN  '2016-01' AND TO_CHAR(#{basicDate}, 'YYYY-MM')
	                     )
	            GROUP BY userTyCd
	                    ,purchsInsttNm
	           )
	     WHERE 1=1
   
         <if test="userTy != '' and userTy != null">
           AND userTy = #{userTy}
         </if>
         <if test="purchsInsttNm != '' and purchsInsttNm != null">
           AND purchsInsttNm LIKE '%' || #{purchsInsttNm} || '%'
         </if>
         
         <if test="sortVl eq 'cntrctAmount' or sortVl eq null">
     ORDER  BY cntrctAmount DESC
         </if>
         <if test="sortVl eq 'purchsInsttNm'">
     ORDER  BY purchsInsttNm ASC
         </if>
       
	</select>
	
  	<select id="contractListCount" parameterType="ResultVO" resultType="int">
        /*_explorer.contractListCount*/      
          SELECT COUNT(1) AS totalCount
            FROM (
		                  SELECT (SELECT DECODE(user_ty_cd, '1001', '1001', '1002', '1001', '2001', '2001', '2002', '2001', '3001', '3001', '3002', '3001') 
		                            FROM OP_USER 
		                           WHERE USER_ID = A.USER_ID
		                         ) AS userTyCd
		                    FROM TCM_CNTRCT_MANAGE_I A
		               LEFT JOIN TCM_CNTRCT_TEMP_USER C
		                      ON A.TEMP_USER_SN = C.USER_SN
		               LEFT JOIN OP_USER_PBLINSTT_OPTION D 
		                      ON A.COMM_USER_ID = D.USER_ID 
		                   <!-- WHERE DELETE_AT != 'Y' -->            
		                   WHERE  A.DELETE_AT != 'N'
		                     AND  A.ASIS = 'N'
		                     AND TO_CHAR(A.cntr_dt, 'YYYY-MM') BETWEEN  '2016-01' AND TO_CHAR(#{basicDate}, 'YYYY-MM')
		                     AND A.PURCHS_INSTT_NM = #{purchsInsttNm}
		         )
		   WHERE usertycd = #{userTyCd}
		             
    
  	</select>

  	<select id="contractList" parameterType="map" resultType="ResultVO">
        /*_explorer.contractList*/
        SELECT Y.* FROM (
          SELECT ROWNUM NUM, X.* FROM (
    
                  SELECT cntrctSn 
                        ,userId 
                        ,svcNm 
                        ,cntrDt
                        ,cntrctBeginDe 
                        ,cntrctEndDe 
                        ,cntrctamount 
                        ,purchsInsttNm 
                        ,sleInsttNm 
                        ,ctrtcSn 
                        ,registId 
                        ,registDt 
                        ,updtId 
                        ,updtDt 
                        ,deleteAt 
                        ,tempUserSn
                        ,cntrCount
                        ,goodsNm
                        ,useAt
                        ,userTyCd
                    FROM (    
	                          SELECT A.CNTRCT_SN AS cntrctSn 
	                                ,A.USER_ID   AS userId 
	                                ,A.SVC_NM    AS svcNm 
	                                ,TO_CHAR(CNTR_DT,'yyyy-mm-dd') AS cntrDt
	                                ,A.CNTRCT_BEGIN_DE AS cntrctBeginDe 
	                                ,A.CNTRCT_END_DE   AS cntrctEndDe 
	                                ,A.CNTRCTAMOUNT    AS cntrctamount 
	                                ,A.PURCHS_INSTT_NM AS purchsInsttNm 
	                                ,CASE WHEN A.goods_code IS NOT NULL THEN (SELECT B.cmpny_nm 
	                                                                            FROM tst_good_info_i C
	                                                                                ,op_user_entrprs_option B 
	                                                                           WHERE C.user_id    = B.user_id 
	                                                                             AND C.goods_code = A.goods_code) 
	                                      ELSE A.SLE_INSTT_NM 
	                                 END AS sleInsttNm 
	                                ,A.CTRTC_SN     AS ctrtcSn 
	                                ,IFNULL(A.COMM_USER_ID,A.REGIST_ID) AS registId 
	                                ,A.REGIST_DT    AS registDt 
	                                ,A.UPDT_ID      AS updtId 
	                                ,A.UPDT_DT      AS updtDt 
	                                ,A.DELETE_AT    AS deleteAt 
	                                ,A.TEMP_USER_SN AS tempUserSn
	                                ,A.CNTR_COUNT   AS cntrCount
	                                ,B.GOODS_NM     AS goodsNm
	                                ,A.USE_AT       AS useAt
	                                ,(SELECT DECODE(user_ty_cd, '1001', '1001', '1002', '1001', '2001', '2001', '2002', '2001', '3001', '3001', '3002', '3001') 
	                                    FROM OP_USER 
	                                   WHERE USER_ID = A.USER_ID
	                                 ) AS userTyCd
	                            FROM TCM_CNTRCT_MANAGE_I A
	                       LEFT JOIN TST_GOOD_INFO_I B
	                              ON A.GOODS_CODE = B.GOODS_CODE
	                       LEFT JOIN TCM_CNTRCT_TEMP_USER C
	                              ON A.TEMP_USER_SN = C.USER_SN
	                       LEFT JOIN OP_USER_PBLINSTT_OPTION D 
	                              ON A.COMM_USER_ID = D.USER_ID 
	                       LEFT JOIN OP_CODE_INDVDLZ G
	                              ON G.GROUP_CD = '2046'
	                             AND G.INDVDLZ_CD = A.REGIST_MTHD_CODE          
	                           <!-- WHERE A.DELETE_AT != 'Y' -->
	                           WHERE  A.DELETE_AT != 'N'
		                     	 AND  A.ASIS = 'N'
	                             AND TO_CHAR(A.cntr_dt, 'YYYY-MM') BETWEEN  '2016-01' AND TO_CHAR(#{basicDate}, 'YYYY-MM')                   
	                             AND A.PURCHS_INSTT_NM = #{purchsInsttNm}
                         )  
                   WHERE usertycd = #{userTyCd}                   
                ORDER BY registDt DESC
    
          ) X  WHERE ROWNUM &lt;= #{pagingEndNum}
        ) Y  
        WHERE NUM &gt;= #{pagingStartNum}
        
    </select>

	<select id="cntrctSportList" parameterType="map" resultType="HashMap">		
		/*_explorer.cntrctSportList*/
		SELECT  svcNm			/*사업명*/
		      , goodsCode
              , NVL(goodsKnd, 'SaaS') AS goodsKnd		/*서비스 구분*/
		      , sleInsttNm		/*서비스 명	*/
		      , goodsMakr		/*판개기관*/
		      , purchsInsttNm	/*계약기관*/
		      , cntrDt			/*계약체곌일*/
		      , cntrctBeginDe	/*계약기간 시작일*/
		      , cntrctEndDe		/*계약기간 종료일*/
		      , cntrCount		/*지원계약 수*/
		      , cntrctAmount	/*주 계약금액*/
		  FROM  (SELECT  TRIM(A.svc_nm) AS svcNm
		               , A.goods_code AS goodsCode
		               , (SELECT DECODE(goods_knd_cd, 1001, 'PaaS', 1002, 'SaaS', 1003, 'IaaS')
		                    FROM tst_good_info_i
		                   WHERE goods_code = A.goods_code) AS goodsKnd
		               , A.sle_instt_nm AS sleInsttNm
		               , (SELECT goods_makr FROM tst_good_info_i WHERE goods_code = A.goods_code) AS goodsMakr
		               , A.purchs_instt_nm AS purchsInsttNm
		               , TO_CHAR(A.cntr_dt, 'YYYY-MM-DD') AS cntrDt
		               , (SUBSTRING(A.cntrct_begin_de, 0, 4) || '-' || SUBSTRING(A.cntrct_begin_de, 5, 2) || '-' || SUBSTRING(A.cntrct_begin_de, 7, 2)) AS cntrctBeginDe
		               , (SUBSTRING(A.cntrct_end_de, 0, 4)   || '-' || SUBSTRING(A.cntrct_end_de, 5, 2)   || '-' || SUBSTRING(A.cntrct_end_de, 7, 2))   AS cntrctEndDe
		               , NVL(A.cntr_count, 0) AS cntrCount
		               , NVL(A.cntrctamount, 0) AS cntrctAmount
		           FROM  tcm_cntrct_manage_i A
		          <!-- WHERE  A.delete_at != 'Y' -->
		          WHERE  A.DELETE_AT != 'N'
		            AND  A.ASIS = 'N'
		            AND  A.SPORT_AT  = 'Y'
		            AND  TO_CHAR(A.cntr_dt, 'YYYY-MM') BETWEEN  '2016-01' AND TO_CHAR(#{basicDate}, 'YYYY-MM')
		         <if test="cntrDt != '' and cntrDt != null">
		            AND  TO_CHAR(A.cntr_dt, 'YYYY') = #{cntrDt}
		         </if>
		      ORDER BY  A.cntr_dt DESC
	            )
	</select>
	
	<select id="cntrctSportTotList" parameterType="map" resultType="HashMap">
		/*_explorer.cntrctSportTotList*/
		SELECT cntrDt
		      , COUNT(svcNm) AS svcNmCnt
		      , SUM(cntrCount) AS cntrCount
		      , SUM(cntrctAmount) AS cntrctAmount
		  FROM  (SELECT  TRIM(A.svc_nm) AS svcNm
		               , (SELECT DECODE(goods_knd_cd, 1001, 'PaaS', 1002, 'SaaS', 1003, 'IaaS', 1004, 'SCS') 
		                    FROM  tst_good_info_i
		                   WHERE  goods_code = A.goods_code) AS goodsKnd
		               , A.sle_instt_nm AS sleInsttNm
		               , (SELECT goods_makr FROM tst_good_info_i WHERE goods_code = A.goods_code) AS goodsMakr
		               , A.purchs_instt_nm AS purchsInsttNm
		               , TO_CHAR(A.cntr_dt, 'YYYY') AS cntrDt
		               , TO_CHAR(A.cntrct_begin_de, 'YYYY-MM-DD') AS cntrctBeginDe
		               , TO_CHAR(A.cntrct_end_de, 'YYYY-MM-DD') AS cntrctEndDe
		               , NVL(A.cntr_count, 0) AS cntrCount
		               , NVL(A.cntrctamount, 0) AS cntrctAmount
		           FROM  tcm_cntrct_manage_i A
		          <!-- WHERE  A.delete_at != 'Y' -->
		          WHERE  A.DELETE_AT != 'N'
		            AND  A.ASIS = 'N'
		            AND  TO_CHAR(A.cntr_dt, 'YYYY-MM') BETWEEN  '2016-01' AND TO_CHAR(#{basicDate}, 'YYYY-MM')
		          ORDER  BY A.cntr_dt DESC
	           )
	    WHERE  1=1
		<if test="cntrDt != '' and cntrDt != null">
		  AND  TO_CHAR(cntrDt, 'YYYY') = #{cntrDt} 
		</if>
	    GROUP  BY cntrDt
	</select>
</mapper>