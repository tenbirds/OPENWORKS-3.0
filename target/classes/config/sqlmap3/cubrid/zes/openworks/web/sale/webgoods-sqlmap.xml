<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="_webGoods">

    <sql id="searchWhere">
        <!-- 카테고리 -->
        <if test="q_goodsTyCd != null  and  q_goodsTyCd != ''"> 
            <choose>
                <when test="q_ctgryCd3 != null  and q_ctgryCd3 != ''">
                    AND A.GOODS_CODE IN (SELECT GOODS_CODE FROM TST_GOOD_CATE_I WHERE CTGRY_CODE = #{q_ctgryCd3})
                </when>
                <when test="q_ctgryCd2 != null  and q_ctgryCd2 != ''">
                    AND A.GOODS_CODE IN (SELECT GOODS_CODE FROM TST_GOOD_CATE_I WHERE CTGRY_CODE = #{q_ctgryCd2})
                </when>
                <when test="q_ctgryCd1 != null  and q_ctgryCd1 != ''">
                    AND A.GOODS_CODE IN (SELECT GOODS_CODE FROM TST_GOOD_CATE_I WHERE CTGRY_CODE = #{q_ctgryCd1})
                </when>
                <otherwise>
                    AND A.GOODS_CODE IN
                    ( SELECT  A.GOODS_CODE
                        FROM  TST_GOOD_CATE_I A, TST_CATE_MGMT_M B
                       WHERE  A.CTGRY_CODE = B.CTGRY_CODE
                         AND  B.CTGRY_CL_CD = #{q_goodsTyCd}
                    GROUP BY  A.GOODS_CODE )  
                </otherwise>
            </choose>
        </if>

        <if test="q_goodsTyCd == null  or  q_goodsTyCd == ''">
                     AND A.GOODS_CODE IN
                     ( SELECT  A.GOODS_CODE
                         FROM  TST_GOOD_CATE_I A, TST_CATE_MGMT_M B
                        WHERE  A.CTGRY_CODE = B.CTGRY_CODE
                     GROUP BY  A.GOODS_CODE ) 
        </if>
        
        <!-- 판매방식 -->
        <if test="q_sleMthdCd != null  and q_sleMthdCd != ''">
            AND A.SLE_MTHD_CD = #{q_sleMthdCd}
        </if>
        
        <!-- 서비스 언어 -->
        <if test="q_langCodes != null  and q_langCodes != ''">
            AND A.LANG_CODE IN 
            <foreach collection="q_langCodes" item="item" index="index" separator="," open=" (" close=") ">
                    TRIM(#{item})
            </foreach>
        </if>
        
        <!-- 등록일 -->
        <if test="q_beginDate != null and q_beginDate != ''">
            AND TO_CHAR(REGIST_DT,'YYYYMMDD') BETWEEN REPLACE(#{q_beginDate},'-','') AND REPLACE(#{q_endDate},'-','')
        </if>
        
        <!-- 전시 유무 -->
        <choose>
            <when test="q_goodsRegistSttus != null and q_goodsRegistSttus != ''">
                AND A.GOODS_REGIST_STTUS = #{q_goodsRegistSttus}
            </when>
            <!-- 서비스검토대기목록 필수조건 -->
            <when test="goodsRegistSttus != null and goodsRegistSttus != ''">
                AND A.GOODS_REGIST_STTUS IN 
                <foreach collection="goodsRegistSttus" item="item" index="index" separator="," open=" (" close=") ">
                    TRIM(#{item})
                </foreach>
            </when>
            <otherwise>
                AND A.GOODS_REGIST_STTUS IN (1006,1007)
            </otherwise>
        </choose>
        
        <!-- 인증구분 -->
        <if test="q_crtfcCodes != null and q_crtfcCodes != ''">
            AND A.GOODS_CODE IN
                ( SELECT  GOODS_CODE
                    FROM  TST_GOOD_MARK_I
                   WHERE  MARK_CD IN 
                   <foreach collection="q_crtfcCodes" item="item" index="index" separator="," open=" (" close=") ">
                    TRIM(#{item})
                   </foreach>
                GROUP BY GOODS_CODE )
        </if>
        
        <!-- 상세 검색 -->
        <if test="q_searchKey != null  and q_searchKey != ''">
            <choose>
                <!-- 서비스명 -->
                <when test="q_searchKey == '1001'">
                    AND A.GOODS_NM LIKE  '%' || #{q_searchVal} || '%'
                </when>
                <!-- 스토어명 -->
                <when test="q_searchKey == '1002'">
                    AND A.USER_ID IN (SELECT USER_ID FROM TUM_SVC_STOR_I WHERE LANG_STORE_NM LIKE '%' || #{q_searchVal} || '%')
                </when>
                <!-- 판매자ID -->
                <when test="q_searchKey == '1003'">
                    AND A.USER_ID = #{q_searchVal}
                </when>
                <!-- 서비스코드 -->
                <when test="q_searchKey == '1004'">
                    AND A.GOODS_CODE = #{q_searchVal}
                </when>
            </choose>
        </if>
        
    </sql>
        
    <sql id="searchWhereDelete">
        <!-- 카테고리 -->
        <if test="q_goodsTyCd != null  and  q_goodsTyCd != ''"> 
            <choose>
                <when test="q_ctgryCd3 != null  and q_ctgryCd3 != ''">
                    AND GOODS_CODE IN (SELECT GOODS_CODE FROM TST_GOOD_CATE_I WHERE CTGRY_CODE = #{q_ctgryCd3})
                </when>
                <when test="q_ctgryCd2 != null  and q_ctgryCd2 != ''">
                    AND GOODS_CODE IN (SELECT GOODS_CODE FROM TST_GOOD_CATE_I WHERE CTGRY_CODE = #{q_ctgryCd2})
                </when>
                <when test="q_ctgryCd1 != null  and q_ctgryCd1 != ''">
                    AND GOODS_CODE IN (SELECT GOODS_CODE FROM TST_GOOD_CATE_I WHERE CTGRY_CODE = #{q_ctgryCd1})
                </when>
                <otherwise>
                    AND GOODS_CODE IN
                    ( SELECT  A.GOODS_CODE
                        FROM  TST_GOOD_CATE_I A, TST_CATE_MGMT_M B
                       WHERE  A.CTGRY_CODE = B.CTGRY_CODE
                         AND  B.CTGRY_CL_CD = #{q_goodsTyCd}
                    GROUP BY  A.GOODS_CODE )  
                </otherwise>
            </choose>
        </if>
        
        <!-- 판매방식 -->
        <if test="q_sleMthdCd != null  and q_sleMthdCd != ''">
            AND SLE_MTHD_CD = #{q_sleMthdCd}
        </if>
        
        <!-- 서비스 언어 -->
        <if test="q_langCodes != null  and q_langCodes != ''">
            AND A.LANG_CODE IN 
            <foreach collection="q_langCodes" item="item" index="index" separator="," open=" (" close=") ">
                    TRIM(#{item})
            </foreach>
        </if>
        
        <!-- 삭제일 -->
        <if test="q_beginDate != null and q_beginDate != ''">
            AND UPDT_DT BETWEEN TO_DATE(#{q_beginDate}, 'YYYY-MM-DD') AND TO_DATE(#{q_endDate}, 'YYYY-MM-DD') + 1
        </if>
        
        <!-- 인증구분 -->
        <if test="q_crtfcCodes != null and q_crtfcCodes != ''">
            AND GOODS_CODE IN
                ( SELECT  GOODS_CODE
                    FROM  TST_GOOD_MARK_I
                   WHERE  MARK_CD IN 
                   <foreach collection="q_crtfcCodes" item="item" index="index" separator="," open=" (" close=") ">
                    TRIM(#{item})
                   </foreach>
                GROUP BY GOODS_CODE )
        </if>
        
        <!-- 상세 검색 -->
        <if test="q_searchKey != null  and q_searchKey != ''">
            <choose>
                <!-- 서비스명 -->
                <when test="q_searchKey == '1001'">
                    AND GOODS_NM LIKE  '%' || #{q_searchVal} || '%'
                </when>
                <!-- 스토어명 -->
                <when test="q_searchKey == '1002'">
                    AND A.USER_ID IN (SELECT USER_ID FROM TUM_SVC_STOR_I WHERE LANG_STORE_NM LIKE '%' || #{q_searchVal} || '%')
                </when>
                <!-- 판매자ID -->
                <when test="q_searchKey == '1003'">
                    AND A.USER_ID = #{q_searchVal}
                </when>
                <!-- 서비스코드 -->
                <when test="q_searchKey == '1004'">
                    AND A.GOODS_CODE = #{q_searchVal}
                </when>
            </choose>
        </if>        
    </sql>
     
    <resultMap id="goodsResult" type="goodsManageVO">     
        <result property="goodsCode" column="GOODS_CODE"/>
        <result property="langCode" column="LANG_CODE"/>
        <collection property="goodsType" column="{goodsCode = GOODS_CODE, langCode = LANG_CODE}" ofType="map" select="goodsTyList"/>
        <collection property="goodsMarkList" column="{goodsCode = GOODS_CODE, langCode = LANG_CODE}" ofType="map" select="goodsMarkImageList"/>
    </resultMap>
    <select id="goodsList" parameterType="map" resultMap="goodsResult">     
    /* _webGoods.goodsList*/      
       SELECT Y.* FROM (
           SELECT ROWNUM NUM, X.* FROM (
               SELECT 
                      A.GOODS_CODE,
                      A.LANG_CODE,
                      A.GOODS_NM AS goodsNm,
                      A.GOODS_PC AS goodsPc,
                      A.SVC_PC AS svcPc,                      
                      <!-- (SELECT LANG_NM FROM TCO_SVC_LANG_C WHERE LANG_CODE = A.LANG_CODE) AS langNm,
                      (SELECT LANG_ENG_NM FROM TCO_SVC_LANG_C WHERE LANG_CODE = A.LANG_CODE) AS langEngNm, -->
                      (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=1007 AND INDVDLZ_CD = A.SLE_MTHD_CD) AS sleMthdNm,
                      A.GOODS_REGIST_STTUS AS goodsRegistSttus,
                      (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=1008 AND INDVDLZ_CD = A.GOODS_REGIST_STTUS) AS goodsRegistSttusNm,
                      (SELECT LANG_STORE_NM FROM TUM_SVC_STOR_I WHERE USER_ID = A.USER_ID AND LANG_CODE = A.LANG_CODE) AS langStoreNm, 
                      <!-- USER_ID AS userId, -->
                      (SELECT USER_NM FROM OP_USER WHERE USER_ID = A.REGIST_ID) AS registId,
                      TO_CHAR( IFNULL(A.UPDT_DT,A.REGIST_DT) ,'YYYY.MM.DD HH24:mi') AS registDt,  
                      H.REQUST_SE AS requstSe,
                      (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=2047 AND INDVDLZ_CD = H.REQUST_SE) AS requstSeNm,
                      H.REQUST_PROCESS_AT AS requstProcessAt, 
                      A.GOODS_KND_CD AS goodsTyCd,
					  NVL((SELECT GOODS_STAT FROM TST_GOOD_INFO_I_TMP Z WHERE A.GOODS_CODE = Z.GOODS_CODE),'0000') AS goodsStat,                      
                      (
                      		SELECT Y.indvdlz_cd_nm 
                      		FROM TST_GOOD_INFO_I_TMP X, op_code_indvdlz Y
                      		WHERE A.GOODS_CODE = X.GOODS_CODE
                      		AND Y.group_cd = 2086
                      		AND X.GOODS_STAT = Y.indvdlz_cd
                      ) AS goodsStatNm
                 FROM TST_GOOD_INFO_I A LEFT OUTER JOIN TST_EXMN_CNFM_H H ON H.GOODS_CODE = A.GOODS_CODE AND H.REQUST_PROCESS_AT IN('N','M')/* N:요청, M:검토, Y:승인*/
                WHERE A.MNGR_DELETE_AT='N' AND A.GOODS_ACTVTY_AT='Y'
                  AND A.USER_ID = #{q_userId}
                <include refid="searchWhere"/>
                
             ) X
            WHERE ROWNUM &lt;= #{pagingEndNum}
            ORDER BY X.registDt DESC
        ) Y
        WHERE NUM &gt;= #{pagingStartNum}         
    </select>
    <select id="goodsList1" parameterType="map" resultMap="goodsResult">     
    /* _webGoods.goodsList1*/      
       SELECT Y.* FROM (
           SELECT ROWNUM NUM, X.* FROM (
			SELECT AZ.* FROM 
			(           
               SELECT 
                      A.GOODS_CODE,
                      A.LANG_CODE,
                      A.GOODS_NM AS goodsNm,
                      A.GOODS_PC AS goodsPc,
                      <!-- (SELECT LANG_NM FROM TCO_SVC_LANG_C WHERE LANG_CODE = A.LANG_CODE) AS langNm,
                      (SELECT LANG_ENG_NM FROM TCO_SVC_LANG_C WHERE LANG_CODE = A.LANG_CODE) AS langEngNm, -->
                      (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=1007 AND INDVDLZ_CD = A.SLE_MTHD_CD) AS sleMthdNm,
                      A.GOODS_REGIST_STTUS AS goodsRegistSttus,
                      (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=1008 AND INDVDLZ_CD = A.GOODS_REGIST_STTUS) AS goodsRegistSttusNm,
                      (SELECT LANG_STORE_NM FROM TUM_SVC_STOR_I WHERE USER_ID = A.USER_ID AND LANG_CODE = A.LANG_CODE) AS langStoreNm, 
                      <!-- USER_ID AS userId, -->
                      (SELECT USER_NM FROM OP_USER WHERE USER_ID = A.REGIST_ID) AS registId,
                      TO_CHAR( IFNULL(A.UPDT_DT,A.REGIST_DT) ,'YYYY.MM.DD HH24:mi') AS registDt,  
                      H.REQUST_SE AS requstSe,
                      (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=2047 AND INDVDLZ_CD = H.REQUST_SE) AS requstSeNm,
                      H.REQUST_PROCESS_AT AS requstProcessAt, 
                      A.GOODS_KND_CD AS goodsTyCd,
					  NVL((SELECT GOODS_STAT FROM TST_GOOD_INFO_I_TMP Z WHERE A.GOODS_CODE = Z.GOODS_CODE),'0000') AS goodsStat,                      
                      (
                      		SELECT Y.indvdlz_cd_nm 
                      		FROM TST_GOOD_INFO_I_TMP X, op_code_indvdlz Y
                      		WHERE A.GOODS_CODE = X.GOODS_CODE
                      		AND Y.group_cd = 2086
                      		AND X.GOODS_STAT = Y.indvdlz_cd
                      ) AS goodsStatNm,
                      'insert' AS updateYn                       
                 FROM TST_GOOD_INFO_I A LEFT OUTER JOIN TST_EXMN_CNFM_H H ON H.GOODS_CODE = A.GOODS_CODE AND H.REQUST_PROCESS_AT IN('N','M')/* N:요청, M:검토, Y:승인*/
                WHERE A.MNGR_DELETE_AT='N' AND A.GOODS_ACTVTY_AT='Y'
                  AND A.USER_ID = #{q_userId}
                <include refid="searchWhere"/>
                
                UNION

               SELECT 
                      A.GOODS_CODE,
                      A.LANG_CODE,
                      A.GOODS_NM AS goodsNm,
                      A.GOODS_PC AS goodsPc,
                      <!-- (SELECT LANG_NM FROM TCO_SVC_LANG_C WHERE LANG_CODE = A.LANG_CODE) AS langNm,
                      (SELECT LANG_ENG_NM FROM TCO_SVC_LANG_C WHERE LANG_CODE = A.LANG_CODE) AS langEngNm, -->
                      (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=1007 AND INDVDLZ_CD = A.SLE_MTHD_CD) AS sleMthdNm,
                      A.GOODS_REGIST_STTUS AS goodsRegistSttus,
                      (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=1008 AND INDVDLZ_CD = A.GOODS_REGIST_STTUS) AS goodsRegistSttusNm,
                      (SELECT LANG_STORE_NM FROM TUM_SVC_STOR_I WHERE USER_ID = A.USER_ID AND LANG_CODE = A.LANG_CODE) AS langStoreNm, 
                      <!-- USER_ID AS userId, -->
                      (SELECT USER_NM FROM OP_USER WHERE USER_ID = A.REGIST_ID) AS registId,
                      TO_CHAR( IFNULL(A.UPDT_DT,A.REGIST_DT) ,'YYYY.MM.DD HH24:mi') AS registDt,  
                      H.REQUST_SE AS requstSe,
                      (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=2047 AND INDVDLZ_CD = H.REQUST_SE) AS requstSeNm,
                      H.REQUST_PROCESS_AT AS requstProcessAt, 
                      A.GOODS_KND_CD AS goodsTyCd,
					  NVL((SELECT GOODS_STAT FROM TST_GOOD_INFO_I_TMP Z WHERE A.GOODS_CODE = Z.GOODS_CODE),'0000') AS goodsStat,                      
                      (
                      		SELECT Y.indvdlz_cd_nm 
                      		FROM TST_GOOD_INFO_I_TMP X, op_code_indvdlz Y
                      		WHERE A.GOODS_CODE = X.GOODS_CODE
                      		AND Y.group_cd = 2086
                      		AND X.GOODS_STAT = Y.indvdlz_cd
                      ) AS goodsStatNm,
                      'update' AS updateYn                       
                 FROM TST_GOOD_INFO_I_TMP A LEFT OUTER JOIN TST_EXMN_CNFM_H H ON H.GOODS_CODE = A.GOODS_CODE AND H.REQUST_PROCESS_AT IN('N','M')/* N:요청, M:검토, Y:승인*/
                WHERE A.MNGR_DELETE_AT='N' AND A.GOODS_ACTVTY_AT='Y'
                  AND A.USER_ID = #{q_userId}
                <include refid="searchWhere"/>
                
				) AZ                    
				ORDER BY AZ.registDt DESC                    
             ) X
            WHERE ROWNUM &lt;= #{pagingEndNum}
            ORDER BY X.registDt DESC
        ) Y
        WHERE NUM &gt;= #{pagingStartNum}         
    </select>
    
    <select id="goodsDeleteList" parameterType="map" resultMap="goodsResult">     
    /* _webGoods.goodsDeleteList*/   
       SELECT Y.* FROM (
           SELECT ROWNUM NUM, X.* FROM (
               SELECT 
                      A.GOODS_CODE,
                      A.LANG_CODE,
                      GOODS_NM AS goodsNm,
                      GOODS_PC AS goodsPc,
                      (SELECT LANG_NM FROM TCO_SVC_LANG_C WHERE LANG_CODE = A.LANG_CODE) AS langNm,
                      (SELECT LANG_ENG_NM FROM TCO_SVC_LANG_C WHERE LANG_CODE = A.LANG_CODE) AS langEngNm,
                      (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=1007 AND INDVDLZ_CD = A.SLE_MTHD_CD) AS sleMthdNm,
                      (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=1008 AND INDVDLZ_CD = A.GOODS_REGIST_STTUS) AS goodsRegistSttusNm, 
                      (SELECT LANG_STORE_NM FROM TUM_SVC_STOR_I WHERE USER_ID = A.USER_ID AND LANG_CODE = A.LANG_CODE) AS langStoreNm,
                      MNGR_DELETE_AT AS mngrDeleteAt,
                      GOODS_ACTVTY_AT AS goodsActvtyAt,
                      USER_ID AS userId,
                      TO_CHAR(UPDT_DT,'YYYY.MM.DD HH24:mi') AS updtDt,         
                      TO_CHAR(REGIST_DT,'YYYY.MM.DD HH24:mi') AS registDt         
                 FROM TST_GOOD_INFO_I A
                WHERE ((MNGR_DELETE_AT='Y') OR (GOODS_ACTVTY_AT='N'))
                  AND A.USER_ID = #{q_userId}
                <include refid="searchWhereDelete"/>
            	ORDER BY REGIST_DT DESC      
            ) X
			WHERE ROWNUM &lt;= #{pagingEndNum}
        ) Y
        WHERE NUM &gt;= #{pagingStartNum}         
    </select>
    
    <select id="goodsTyList" resultType="map">
    /* _webGoods.goodsTyList*/      
        SELECT  (SELECT INDVDLZ_CD_NM
                   FROM OP_CODE_INDVDLZ
                  WHERE LANG_CODE = #{langCode} 
                    AND GROUP_CD = 1005 
                    AND INDVDLZ_CD = B.CTGRY_CL_CD) AS GOODSTYNM
          FROM  TST_GOOD_CATE_I A, TST_CATE_MGMT_M B
         WHERE  A.GOODS_CODE = #{goodsCode}
           AND  A.CTGRY_CODE = B.CTGRY_CODE
      GROUP BY  B.CTGRY_CL_CD
      ORDER BY  B.CTGRY_CL_CD
    </select>
    
    <select id="goodsMarkImageList" resultType="map">
    /* _webGoods.goodsMarkImageList*/      
          SELECT   B.MARK_IMAGE_FILE_SEQ AS MARKIMAGEFILESEQ
            FROM   TST_GOOD_MARK_I A, TST_GOOD_MARK_M B 
           WHERE   A.MARK_CD = B.MARK_CD
             AND A.GOODS_CODE = #{goodsCode}
        ORDER BY   A.MARK_CD         
    </select>

    <select id="goodsCount" parameterType="map" resultType="int">
    /* _webGoods.goodsCount*/     
        SELECT
            COUNT(A.GOODS_CODE) AS totalCount
        FROM
            TST_GOOD_INFO_I A
        WHERE MNGR_DELETE_AT='N' AND GOODS_ACTVTY_AT='Y'
          AND A.USER_ID = #{q_userId}
        <include refid="searchWhere"/>        
    </select>
    <select id="goodsCount1" parameterType="map" resultType="int">
    /* _webGoods.goodsCount1*/
		SELECT SUM(totalCount) AS totalCount FROM (
	        SELECT
	            COUNT(A.GOODS_CODE) AS totalCount
	        FROM
	            TST_GOOD_INFO_I A
	        WHERE MNGR_DELETE_AT='N' AND GOODS_ACTVTY_AT='Y'
	          AND A.USER_ID = #{q_userId}
	        <include refid="searchWhere"/>        
			UNION ALL
	        SELECT
	            COUNT(A.GOODS_CODE) AS totalCount
	        FROM
	            TST_GOOD_INFO_I_TMP A
	        WHERE MNGR_DELETE_AT='N' AND GOODS_ACTVTY_AT='Y'
	          AND A.USER_ID = #{q_userId}
	        <include refid="searchWhere"/>        
		)
    </select>
    
    <select id="goodsDeleteCount" parameterType="map" resultType="int">
    /* _webGoods.goodsDeleteCount*/     
        SELECT
            COUNT(A.GOODS_CODE) AS totalCount
        FROM
            TST_GOOD_INFO_I A
        WHERE ((MNGR_DELETE_AT='Y') OR (GOODS_ACTVTY_AT='N'))
          AND A.USER_ID = #{q_userId}
        <include refid="searchWhereDelete"/>        
    </select>

    <update id="dspyUpdate" parameterType="goodsManageVO">
    /* _webGoods.dspyUpdate*/    
        UPDATE TST_GOOD_INFO_I SET
          GOODS_REGIST_STTUS = #{goodsRegistSttus}
        , UPDT_ID       = #{updtId}
        , UPDT_DT       = SYSDATETIME
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="goodsCodes != null">        
                GOODS_CODE IN 
                   <foreach item="item" index="index" collection="goodsCodes" open="(" separator="," close=")">#{item}</foreach>
            </if>
        </trim>          
    </update>
    
    <!-- 상태조회 -->
    <select id="sttusList" parameterType="goodsManageVO" resultType="goodsManageVO">
    /* _webGoods.sttusList*/    
        SELECT 
            INDVDLZ_CD        AS goodsRegistSttus,  
            INDVDLZ_CD_NM     AS goodsRegistSttusNm
        FROM 
            OP_CODE_INDVDLZ 
        WHERE GROUP_CD = 1008
          AND LANG_CODE = #{langCode}
          AND USE_YN ='Y'
          AND INDVDLZ_CD BETWEEN 1001 AND 1005
    </select> 
    
    <select id="langList" parameterType="goodsManageVO" resultType="goodsManageVO">
    /* _webGoods.langList*/    
         SELECT
                LANG_CODE AS langCode
              , LANG_NM    AS langNm
              , DOMAIN_CD  AS domainCd
              , LANG_ENG_ABRV AS  langEngAbrv
              , LANG_ENG_NM   AS  langEngNm
           FROM TCO_SVC_LANG_C
          WHERE DOMAIN_CD IS NOT NULL
    </select> 

    <select id="ctgryList"  parameterType="goodsManageVO" resultType="goodsManageVO">
    /* _webGoods.ctgryList*/    
        SELECT 
               PARNTS_CTGRY_CODE AS parntsCtgryCd
             , CTGRY_CODE AS ctgryCd
             , LANG_CTGRY_NM AS ctgryNm
          FROM TST_CATE_MGMT_M
         WHERE CTGRY_CL_CD = #{goodsTyCd}
           AND CTGRY_DP = #{ctgryDp}
           <if test="ctgryCd != null and ctgryCd != '' and ctgryCd != 'null'">
                AND PARNTS_CTGRY_CODE = #{ctgryCd}
           </if>
           AND LANG_CODE = '00'
           AND CTGRY_USE_YN = 'Y'
           AND CTGRY_DELETE_AT = 'N'           
         ORDER BY LANG_CODE, SORT_ORDR
    </select>

    <resultMap id="goodsViewResult" type="goodsManageVO">     
        <result property="goodsCode" column="GOODS_CODE"/>
        <result property="userId" column="USER_ID"/>
        <result property="langCode" column="LANG_CODE"/>
        <collection property="goodsCtgry" column="{goodsCode=GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsCtgryList"/>
<!--         <collection property="goodsImage" column="GOODS_CODE" ofType="map" select="goodsImageList"/> -->
        <collection property="goodsMark" column="{goodsCode=GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsMarkList"/>
        <collection property="goodsStore" column="{userId=USER_ID, langCode=LANG_CODE}" ofType="map" select="goodsStoreList"/>
        <collection property="goodsTag" column="{goodsCode=GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsTagList"/>
        <collection property="goodsMetaLang" column="{goodsCode = GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsMetaLangList"/>        
        <collection property="goodsMetaOS" column="{goodsCode = GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsMetaOSList"/>
        <collection property="goodsMetaAS" column="{goodsCode = GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsMetaASList"/>
        <collection property="goodsMetaTECH" column="{goodsCode = GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsMetaTECHList"/>
        <collection property="goodsMetaTAG" column="{goodsCode = GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsMetaTAGList"/>
        <collection property="goodsMetaPrice" column="{goodsCode = GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsMetaPriceList"/>
        <collection property="goodsMetaArea" column="{goodsCode = GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsMetaAreaList"/>
        <!-- KS : 공통코드 추가 {{ -->
        <collection property="goodsMetaExprn" column="{goodsCode = GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsMetaExprnList"/>
        <collection property="goodsMetaCntrctUnit" column="{goodsCode = GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsMetaCntrctUnitList"/>
        <collection property="goodsMetaSvc" column="{goodsCode = GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsMetaSvcList"/>
        <collection property="goodsMetaStd" column="{goodsCode = GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsMetaStdList"/>
        <collection property="goodsMetaCnstcMthd" column="{goodsCode = GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsMetaCnstcMthdList"/>
        <collection property="goodsMetaScqcLv" column="{goodsCode = GOODS_CODE, langCode=LANG_CODE}" ofType="map" select="goodsMetaScqcLvList"/>
        <!-- }} -->
<!--         <collection property="goodsMnl" column="GOODS_CODE" ofType="map" select="goodsMnlList"/> -->
    </resultMap>    
    
    <select id="goodsView" parameterType="String" resultMap="goodsViewResult">
        /* _webGoods.goodsView*/        
        SELECT 
               A.LANG_CODE,
               (SELECT LANG_NM FROM TCO_SVC_LANG_C WHERE LANG_CODE = A.LANG_CODE) AS langNm,
               (SELECT LANG_ENG_NM FROM TCO_SVC_LANG_C WHERE LANG_CODE = A.LANG_CODE) AS langEngNm,
               A.GOODS_REGIST_STTUS AS goodsRegistSttus,
               (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=1008 AND INDVDLZ_CD = A.GOODS_REGIST_STTUS) AS goodsRegistSttusNm,
               A.SLE_MTHD_CD AS sleMthdCd,
               (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=1007 AND INDVDLZ_CD = A.SLE_MTHD_CD) AS sleMthdNm,
               A.GOODS_FILE_SEQ AS goodsFileSeq,
               A.DEMO_EXPRN_URL AS demoExprnUrl,
               A.GOODS_CODE,
               A.GOODS_NM AS goodsNm,
               A.GOODS_PC AS goodsPc,
               A.GOODS_KND_CD AS goodsKndCd,
               (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=1024 AND INDVDLZ_CD = A.GOODS_KND_CD) AS goodsKndNm,
               A.GOODS_LICENCE_CD AS goodsLicenceCd,
               A.GOODS_LICENCE_CN AS goodsLicenceCn,
               (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=1015 AND INDVDLZ_CD = A.GOODS_LICENCE_CD) AS goodsLicenceNm,
               A.ARCHTC_SE AS archtcSe,
               A.GOODS_VER_INFO AS goodsVerInfo,
               A.COMOU_DE AS comouDe,
               A.GOODS_MAKR AS goodsMakr,
               A.GOODS_DWLD_URL AS goodsDwldUrl,
               A.GOODS_IMAGE_FILE_SEQ AS goodsImageFileSeq,
               A.GOODS_MNL_FILE_SEQ AS goodsMnlFileSeq,
               (SELECT LANG_STORE_NM FROM TUM_SVC_STOR_I WHERE USER_ID = A.USER_ID AND LANG_CODE = A.LANG_CODE) AS langStoreNm, 
               (SELECT DECODE(NATION_CODE, '410', '국내','해외') FROM OP_USER WHERE USER_ID = A.USER_ID) AS nationGrp,
               (SELECT (CASE WHEN USER_TY_CD = 1002 THEN '개인' WHEN USER_TY_CD = 2002 THEN '기업' WHEN USER_TY_CD = 3002 THEN '정부' END)
                  FROM OP_USER WHERE USER_ID = A.USER_ID) AS userTyGrp, 
               USER_ID,
               A.GOODS_CHARGER_NM AS goodsChargerNm,
               decrypt(A.GOODS_CHARGER_EMAIL, 'P008') AS goodsChargerEmail,
               A.GOODS_CHARGER_CTTPC AS goodsChargerCttpc,
               decrypt(A.GOODS_CHARGER_MBTLNUM, 'P007') AS goodsChargerMbtlnum,
               A.GOODS_HMPG_URL AS goodsHmpgUrl,
               A.GOODS_SUMRY AS goodsSumry,
               A.GOODS_MAIN_FNCT AS goodsMainFnct,
               A.GOODS_REFER AS goodsRefer,
               A.SPCLTY_REALM AS spcltyRealm,
               A.CNSTNT_CO AS cnstntCo,
               A.CNSL_EXPC_EFFECT AS cnslExpcEffect,
               TO_CHAR(REGIST_DT,'YYYY.MM.DD HH24:mi') AS registDt,
               <!-- {{ BH, 2015.12.17 소프트웨어 서비스 세부컬럽 추가로 인한 소스추가-->
               A.ORGPLCE    AS orgplce,
               A.CNTRCT_NO	AS cntrctNo,
        	   A.ITEM_VOD_URL AS itemVodUrl,
        	   A.ITEM_SFE	AS itemSfe,
        	   A.SMLPZ_CHK	AS smlpzChk, 
        	   A.MNL_DN_FILE_SEQ AS mnlDnFileSeq,
        	   A.ITEM_DN_FILE_SEQ AS etcFileSeq,
               <!-- }} -->
               A.PRICE_DN_FILE_SEQ AS priceDnFileSeq,
               A.GOODS_MONITOR_URL  AS goodsMonitorUrl, 
               <!-- {{ DK, 2016.06.22 서비스제공방식 추가 -->
               A.SERVICE_OFFER_METHOD AS serviceOfferMethod, 
               (SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE LANG_CODE = A.LANG_CODE AND GROUP_CD=2034 AND INDVDLZ_CD = A.SERVICE_OFFER_METHOD) AS serviceOfferMethodNm
               <!-- }} -->
          FROM TST_GOOD_INFO_I A
         WHERE MNGR_DELETE_AT='N' AND GOODS_ACTVTY_AT='Y'
           AND A.GOODS_CODE = #{goodsCode}            
    </select>
    <!--     카테고리     -->
    <select id="goodsCtgryList" resultType="map">
    /* _webGoods.goodsCtgryList*/    
        SELECT
                A.CTGRY_CODE    AS CTGRYCODE,
                (SELECT INDVDLZ_CD_NM
                   FROM OP_CODE_INDVDLZ
                  WHERE LANG_CODE = #{langCode}
                    AND GROUP_CD = 1005
                    AND INDVDLZ_CD = B.CTGRY_CL_CD)    AS CTGRYCLNM,         
                (SELECT SYS_CONNECT_BY_PATH(C.LANG_CTGRY_NM, ' > ')
                   FROM TST_CATE_MGMT_M C
                  WHERE C.CTGRY_CODE = A.CTGRY_CODE                       
             START WITH C.PARNTS_CTGRY_CODE = '0'
       CONNECT BY PRIOR C.CTGRY_CODE = C.PARNTS_CTGRY_CODE  )    AS CTGRYPATH
          FROM TST_GOOD_CATE_I A, TST_CATE_MGMT_M B
         WHERE A.CTGRY_CODE = B.CTGRY_CODE
           AND B.CTGRY_DELETE_AT = 'N'         
           AND A.GOODS_CODE = #{goodsCode}
    </select>
    
    <!--     이미지      -->
<!--     <select id="goodsImageList" resultType="map">         -->
<!--        SELECT GOODS_IMAGE_FILE_SEQ AS GOODSIMAGEFILESEQ FROM T_GOODS_IMAGES -->
<!--         WHERE GOODS_CODE= #{goodsCode} -->
<!--        ORDER BY GOODS_IMAGE_ORDR -->
<!--     </select> -->

    <!--     인증구분 (서비스 등록)    -->
    <select id="goodsMarkList" resultType="map">
    
    /* _webGoods.goodsMarkList*/    
    
	         SELECT B.INDVDLZ_CD    AS MARKCD
	              , B.INDVDLZ_CD_NM AS MARKNM
	              , A.MARK_CD       AS GOODSMARKCD
	              , (SELECT MARK_IMAGE_FILE_SEQ FROM TST_GOOD_MARK_M WHERE MARK_CD = A.MARK_CD) AS MARKIMAGEFILESEQ
	              , (SELECT (SELECT  file_url  FROM  op_file WHERE file_seq  = f.MARK_IMAGE_FILE_SEQ  )	              
	                   FROM TST_GOOD_MARK_M f 
	                  WHERE f.MARK_CD = A.MARK_CD
	                ) AS MARKIMAGEFILEURL	              
	              , C.CRTFC_SE_FILE_SEQ AS CRTFCSEFILESEQ
	              , (SELECT XX.FILE_ID FROM OP_FILE XX WHERE XX.FILE_ORDR_NO = (SELECT MAX(file_ordr_no) FROM OP_FILE ZZ WHERE ZZ.FILE_SEQ = XX.FILE_SEQ) AND XX.FILE_SEQ = C.CRTFC_SE_FILE_SEQ) AS FILEID	              
	              , (SELECT XX.LOCAL_ORGINL_NM FROM OP_FILE XX WHERE XX.FILE_ORDR_NO = (SELECT MAX(file_ordr_no) FROM OP_FILE ZZ WHERE ZZ.FILE_SEQ = XX.FILE_SEQ) AND XX.FILE_SEQ = C.CRTFC_SE_FILE_SEQ) AS FILENM
	           FROM OP_CODE_INDVDLZ B 
	LEFT OUTER JOIN TST_GOOD_MARK_I A
	             ON A.MARK_CD    = B.INDVDLZ_CD 
	            AND A.GOODS_CODE = #{goodsCode}
	LEFT OUTER JOIN TST_CTFC_ATCH_I C
	             ON C.CRTFC_SE_CD = B.INDVDLZ_CD   
	            AND C.GOODS_CODE  = #{goodsCode}
	          WHERE 1=1 
	          	/* AND (B.GROUP_CD = 1011 OR (B.GROUP_CD = 2060 AND B.INDVDLZ_CD=1003)) */
	          	AND B.GROUP_CD = 1011
	            AND B.USE_YN    = 'Y'	            
	            <if test="langCode != null  and  langCode != ''">
	            AND B.LANG_CODE = #{langCode}
	            </if>
	       ORDER BY B.GROUP_CD 
	              , B.CD_SORT_NO
                
    </select>
    <select id="goodsMarkListTmp" resultType="map">
    
    /* _webGoods.goodsMarkListTmp*/    
    
	         SELECT B.INDVDLZ_CD    AS MARKCD
	              , B.INDVDLZ_CD_NM AS MARKNM
	              , A.MARK_CD       AS GOODSMARKCD
	              , (SELECT MARK_IMAGE_FILE_SEQ FROM TST_GOOD_MARK_M WHERE MARK_CD = A.MARK_CD) AS MARKIMAGEFILESEQ
	              , (SELECT (SELECT  file_url  FROM  op_file WHERE file_seq  = f.MARK_IMAGE_FILE_SEQ  )	              
	                   FROM TST_GOOD_MARK_M f 
	                  WHERE f.MARK_CD = A.MARK_CD
	                ) AS MARKIMAGEFILEURL	              
	              , C.CRTFC_SE_FILE_SEQ AS CRTFCSEFILESEQ
	              , (SELECT LOCAL_ORGINL_NM FROM OP_FILE WHERE FILE_ORDR_NO = 1 AND FILE_SEQ = C.CRTFC_SE_FILE_SEQ) AS FILENM
	           FROM OP_CODE_INDVDLZ B 
	LEFT OUTER JOIN TST_GOOD_MARK_I_TMP A
	             ON A.MARK_CD    = B.INDVDLZ_CD 
	            AND A.GOODS_CODE = #{goodsCode}
	LEFT OUTER JOIN TST_CTFC_ATCH_I_TMP C
	             ON C.CRTFC_SE_CD = B.INDVDLZ_CD   
	            AND C.GOODS_CODE  = #{goodsCode}
	          WHERE 1=1 
	          	/* AND (B.GROUP_CD = 1011 OR (B.GROUP_CD = 2060 AND B.INDVDLZ_CD=1003)) */
	          	AND B.GROUP_CD = 1011
	            AND B.USE_YN    = 'Y'	            
	            <if test="langCode != null  and  langCode != ''">
	            AND B.LANG_CODE = #{langCode}
	            </if>
	       ORDER BY B.GROUP_CD 
	              , B.CD_SORT_NO
                
    </select>
    
    <!--     판매자 정보     -->
    <select id="goodsStoreList" parameterType="java.util.Map" resultType="map">
    /* _webGoods.goodsStoreList*/  
        SELECT 
               (CASE WHEN A.USER_TY_CD=1002 THEN
               (SELECT CMPNY_NM FROM OP_USER_OPTION WHERE USER_ID=A.USER_ID)
                     WHEN USER_TY_CD=2002 THEN 
               (SELECT CMPNY_NM FROM OP_USER_ENTRPRS_OPTION WHERE USER_ID=A.USER_ID)
                END) AS CMPNYNM,
               B.LANG_STORE_NM AS LANGSTORENM, 
               B.STORE_CHARGER_NM AS STORECHARGERNM, 
               B.REPRSNT_EMAIL AS REPRSNTEMAIL, 
               B.REPRSNT_TELNO AS REPRSNTTELNO     
          FROM OP_USER A, TUM_SVC_STOR_I B
         WHERE A.USER_ID = B.USER_ID
           AND B.LANG_CODE = #{langCode}
           AND A.USER_ID = #{userId} 
    </select>
    <!--     태그    -->
    <select id="goodsTagList" parameterType="java.util.Map" resultType="map">
    /* _webGoods.goodsTagList*/  
        SELECT GOODS_TAG_NM AS GOODSTAGNM FROM TST_GOOD_TAG_I
        WHERE GOODS_CODE = #{goodsCode}
    </select>
    <!--     설명서     -->
<!--     <select id="goodsMnlList" resultType="map"> -->
<!--         SELECT  GOODS_MNL_SEQ AS GOODSMNLSEQ, -->
<!--                 GOODS_MNL_NM AS GOODSMNLNM, -->
<!--                 GOODS_MNL_FILE_SEQ AS GOODSMNLFILESEQ                 -->
<!--           FROM  T_GOODS_MNL_INFO -->
<!--          WHERE  GOODS_CODE = #{goodsCode} -->
<!--     </select> -->

    <select id="goodsMetaLangCode" parameterType="goodsVO" resultType="goodsVO">
    
    /*searchWhere.goodsMetaLangCode*/
    
        SELECT INDVDLZ_CD    AS metaLangCd
             , INDVDLZ_CD_NM AS metaLangNm
          FROM OP_CODE_INDVDLZ
         WHERE LANG_CODE = #{langCode} 
           AND GROUP_CD  = 1019
           AND USE_YN    = 'Y'
      ORDER BY CD_SORT_NO
      
    </select>


	<select id="goodsMetaPriceCode" parameterType="goodsVO" resultType="map">
	
	/*searchWhere.goodsMetaPriceCode*/
	
        SELECT INDVDLZ_CD    AS metaPriceCd
             , INDVDLZ_CD_NM AS metaPriceNm
          FROM OP_CODE_INDVDLZ
         WHERE LANG_CODE = #{langCode} 
           AND GROUP_CD = 2024
           AND USE_YN = 'Y'
      ORDER BY CD_SORT_NO
      
    </select>


    <select id="goodsMetaLangList" parameterType="java.util.Map" resultType="map">
        SELECT  B.INDVDLZ_CD AS LANGCD,
                B.INDVDLZ_CD_NM AS LANGNM,
                A.INDVDLZ_CD AS METALANGCD,
                A.META_ETC_CN AS METAETCCN
          FROM  OP_CODE_INDVDLZ B LEFT OUTER JOIN TST_GOOD_META_I A
            ON  A.GROUP_CD = B.GROUP_CD AND A.INDVDLZ_CD = B.INDVDLZ_CD AND A.LANG_CD = B.LANG_CODE AND A.GOODS_CODE = #{goodsCode}
         WHERE  B.LANG_CODE = #{langCode}
           AND  B.GROUP_CD = 1019
           AND  B.USE_YN = 'Y'           
      ORDER BY  B.CD_SORT_NO 
    </select>
    <select id="goodsMetaOSList" parameterType="java.util.Map" resultType="map">
        SELECT  A.GOODS_CODE, A.LANG_CD, A.INDVDLZ_CD, A.META_ETC_CN,
                B.INDVDLZ_CD_NM
          FROM  TST_GOOD_META_I A, OP_CODE_INDVDLZ B
          WHERE A.GROUP_CD = B.GROUP_CD AND A.INDVDLZ_CD = B.INDVDLZ_CD AND A.LANG_CD = B.LANG_CODE
            AND A.GOODS_CODE = #{goodsCode}
            AND A.GROUP_CD = 1020
            AND B.LANG_CODE = #{langCode}
            AND B.USE_YN = 'Y' 
    </select>
    <select id="goodsMetaASList" parameterType="java.util.Map" resultType="map">
        SELECT  A.GOODS_CODE, A.LANG_CD, A.INDVDLZ_CD, A.META_ETC_CN,
                B.INDVDLZ_CD_NM
          FROM  TST_GOOD_META_I A, OP_CODE_INDVDLZ B
          WHERE A.GROUP_CD = B.GROUP_CD AND A.INDVDLZ_CD = B.INDVDLZ_CD AND A.LANG_CD = B.LANG_CODE
            AND A.GOODS_CODE = #{goodsCode}
            AND A.GROUP_CD = 1021
            AND B.LANG_CODE = #{langCode}
            AND B.USE_YN = 'Y' 
    </select>
    <select id="goodsMetaTECHList" parameterType="java.util.Map" resultType="map">
        SELECT  A.GOODS_CODE, A.LANG_CD, A.INDVDLZ_CD, A.META_ETC_CN,
                B.INDVDLZ_CD_NM
          FROM  TST_GOOD_META_I A, OP_CODE_INDVDLZ B
          WHERE A.GROUP_CD = B.GROUP_CD AND A.INDVDLZ_CD = B.INDVDLZ_CD AND A.LANG_CD = B.LANG_CODE
            AND A.GOODS_CODE = #{goodsCode}
            AND A.GROUP_CD = 1022
            AND B.LANG_CODE = #{langCode}
            AND B.USE_YN = 'Y' 
    </select>
    <select id="goodsMetaTAGList" parameterType="java.util.Map" resultType="map">
        SELECT  A.GOODS_CODE, A.LANG_CD, A.INDVDLZ_CD, A.META_ETC_CN,
                B.INDVDLZ_CD_NM
          FROM  TST_GOOD_META_I A, OP_CODE_INDVDLZ B
          WHERE A.GROUP_CD = B.GROUP_CD AND A.INDVDLZ_CD = B.INDVDLZ_CD AND A.LANG_CD = B.LANG_CODE
            AND B.LANG_CODE = #{langCode}
            AND A.GOODS_CODE = #{goodsCode}
            AND A.GROUP_CD = 1023
            AND B.USE_YN = 'Y' 
    </select>
    
 <!-- {{ 2015.12.19 SKYOOU -->
	<select id="goodsMetaPriceList" parameterType="goodsVO" resultType="map">
		 SELECT  B.INDVDLZ_CD AS PRICECD,
                B.INDVDLZ_CD_NM AS PRICENM,
                A.INDVDLZ_CD AS METAPRICECD,
                A.META_ETC_CN AS METAETCCN
          FROM  OP_CODE_INDVDLZ B LEFT OUTER JOIN TST_GOOD_META_I A
            ON  A.GROUP_CD = B.GROUP_CD AND A.INDVDLZ_CD = B.INDVDLZ_CD AND A.LANG_CD = B.LANG_CODE AND A.GOODS_CODE = #{goodsCode}
         WHERE  B.LANG_CODE = #{langCode}
           AND  B.GROUP_CD = 2024
           AND  B.USE_YN = 'Y'           
      ORDER BY  B.CD_SORT_NO      
    </select>
    
    <select id="goodsMetaAreaList" parameterType="goodsVO" resultType="map">
         SELECT  A.GOODS_CODE, A.LANG_CD, A.INDVDLZ_CD, B.INDVDLZ_CD_NM, A.META_ETC_CN,
                B.INDVDLZ_CD_NM
          FROM  TST_GOOD_META_I A, OP_CODE_INDVDLZ B
          WHERE A.GROUP_CD = B.GROUP_CD AND A.INDVDLZ_CD = B.INDVDLZ_CD AND A.LANG_CD = B.LANG_CODE
            AND A.GOODS_CODE = #{goodsCode}            
            AND B.LANG_CODE = #{langCode}
            AND A.GROUP_CD = 2022
            AND B.USE_YN = 'Y'
    </select>
 <!-- }} -->   
 <!-- {{ 2015.12.24 KS -->
 	<select id="goodsMetaExprnList" parameterType="java.util.Map" resultType="map">
        SELECT  A.GOODS_CODE, A.LANG_CD, A.INDVDLZ_CD, A.META_ETC_CN,
                B.INDVDLZ_CD_NM
          FROM  TST_GOOD_META_I A, OP_CODE_INDVDLZ B
          WHERE A.GROUP_CD = B.GROUP_CD AND A.INDVDLZ_CD = B.INDVDLZ_CD AND A.LANG_CD = B.LANG_CODE
            AND A.GOODS_CODE = #{goodsCode}
            AND A.GROUP_CD = 2027
            AND B.LANG_CODE = #{langCode}
            AND B.USE_YN = 'Y' 
    </select>
    <select id="goodsMetaCntrctUnitList" parameterType="java.util.Map" resultType="map">
        SELECT  A.GOODS_CODE, A.LANG_CD, A.INDVDLZ_CD, A.META_ETC_CN,
                B.INDVDLZ_CD_NM
          FROM  TST_GOOD_META_I A, OP_CODE_INDVDLZ B
          WHERE A.GROUP_CD = B.GROUP_CD AND A.INDVDLZ_CD = B.INDVDLZ_CD AND A.LANG_CD = B.LANG_CODE
            AND A.GOODS_CODE = #{goodsCode}
            AND A.GROUP_CD = 2028
            AND B.LANG_CODE = #{langCode}
            AND B.USE_YN = 'Y' 
    </select>
    <select id="goodsMetaSvcList" parameterType="java.util.Map" resultType="map">
        SELECT  A.GOODS_CODE, A.LANG_CD, A.INDVDLZ_CD, A.META_ETC_CN,
                B.INDVDLZ_CD_NM
          FROM  TST_GOOD_META_I A, OP_CODE_INDVDLZ B
          WHERE A.GROUP_CD = B.GROUP_CD AND A.INDVDLZ_CD = B.INDVDLZ_CD AND A.LANG_CD = B.LANG_CODE
            AND A.GOODS_CODE = #{goodsCode}
            AND A.GROUP_CD = 2030
            AND B.LANG_CODE = #{langCode}
            AND B.USE_YN = 'Y' 
    </select>
    <select id="goodsMetaStdList" parameterType="java.util.Map" resultType="map">
        SELECT  A.GOODS_CODE, A.LANG_CD, A.INDVDLZ_CD, A.META_ETC_CN,
                B.INDVDLZ_CD_NM
          FROM  TST_GOOD_META_I A, OP_CODE_INDVDLZ B
          WHERE A.GROUP_CD = B.GROUP_CD AND A.INDVDLZ_CD = B.INDVDLZ_CD AND A.LANG_CD = B.LANG_CODE
            AND A.GOODS_CODE = #{goodsCode}
            AND A.GROUP_CD = 2031
            AND B.LANG_CODE = #{langCode}
            AND B.USE_YN = 'Y' 
    </select>
    <select id="goodsMetaCnstcMthdList" parameterType="java.util.Map" resultType="map">
        SELECT  A.GOODS_CODE, A.LANG_CD, A.INDVDLZ_CD, A.META_ETC_CN,
                B.INDVDLZ_CD_NM
          FROM  TST_GOOD_META_I A, OP_CODE_INDVDLZ B
          WHERE A.GROUP_CD = B.GROUP_CD AND A.INDVDLZ_CD = B.INDVDLZ_CD AND A.LANG_CD = B.LANG_CODE
            AND A.GOODS_CODE = #{goodsCode}
            AND A.GROUP_CD = 2032
            AND B.LANG_CODE = #{langCode}
            AND B.USE_YN = 'Y' 
    </select>
    <select id="goodsMetaScqcLvList" parameterType="java.util.Map" resultType="map">
        SELECT  A.GOODS_CODE, A.LANG_CD, A.INDVDLZ_CD, A.META_ETC_CN,
                B.INDVDLZ_CD_NM
          FROM  TST_GOOD_META_I A, OP_CODE_INDVDLZ B
          WHERE A.GROUP_CD = B.GROUP_CD AND A.INDVDLZ_CD = B.INDVDLZ_CD AND A.LANG_CD = B.LANG_CODE
            AND A.GOODS_CODE = #{goodsCode}
            AND A.GROUP_CD = 2033
            AND B.LANG_CODE = #{langCode}
            AND B.USE_YN = 'Y' 
    </select>
<!-- }} -->   

    <select id="ctgrySelect"  parameterType="goodsManageVO" resultType="goodsManageVO">
    /* _webGoods.ctgrySelect*/  
        SELECT
                A.CTGRY_CODE  AS ctgryCode,
                (SELECT INDVDLZ_CD_NM
                   FROM OP_CODE_INDVDLZ
                  WHERE LANG_CODE = A.LANG_CODE
                    AND GROUP_CD = 1005
                    AND INDVDLZ_CD = A.CTGRY_CL_CD) AS ctgryClNm,         
                (SELECT /*SYS_CONNECT_BY_PATH(B.LANG_CTGRY_NM, ' > ')*/
                        B.LANG_CTGRY_NM
                   FROM TST_CATE_MGMT_M B
                  WHERE B.CTGRY_CODE = A.CTGRY_CODE                       
             START WITH B.PARNTS_CTGRY_CODE = '0'
       CONNECT BY PRIOR B.CTGRY_CODE = B.PARNTS_CTGRY_CODE  ) AS ctgryPath
          FROM TST_CATE_MGMT_M A
         WHERE A.CTGRY_DELETE_AT = 'N'    
           <if test="ctgryCodes != null">     
           AND A.CTGRY_CODE IN 
               <foreach item="item" index="index" collection="ctgryCodes" open="(" separator="," close=")">#{item}</foreach>
           </if>
    </select>
        
    <update id="goodsUpdate" parameterType="goodsVO">
    
    /*_webGoods.goodsUpdate*/
    
        UPDATE TST_GOOD_INFO_I 
           SET GOODS_NM              = #{goodsNm}
             , GOODS_VER_INFO        = #{goodsVerInfo}
             , GOODS_HMPG_URL        = #{goodsHmpgUrl}
             , GOODS_SUMRY           = #{goodsSumry}
             , GOODS_MAIN_FNCT       = #{goodsMainFnct}
             , GOODS_REFER           = #{goodsRefer}
             , GOODS_DWLD_URL        = #{goodsDwldUrl}
             <!--,  SLE_MTHD_CD      = #{sleMthdCd} -->
             , GOODS_FILE_SEQ        = #{goodsFileSeq}
             , DEMO_EXPRN_URL        = #{demoExprnUrl}
             , GOODS_MAKR            = #{goodsMakr}
             , GOODS_REGIST_STTUS    = #{goodsRegistSttus}
             , GOODS_IMAGE_FILE_SEQ  = #{goodsImageFileSeq}
             , GOODS_MNL_FILE_SEQ    = #{goodsMnlFileSeq}
             , GOODS_KND_CD          = #{goodsKndCd}
             , COMOU_DE              = #{comouDe}
             , GOODS_PC              = #{goodsPc}
             , GOODS_LICENCE_CD      = #{goodsLicenceCd}
             , GOODS_LICENCE_CN      = #{goodsLicenceCn}
             , ARCHTC_SE             = #{archtcSe}
             , GOODS_CHARGER_NM      = #{goodsChargerNm}
             , GOODS_CHARGER_EMAIL   = encrypt(#{goodsChargerEmail}, 'P008')
             , GOODS_CHARGER_CTTPC   = #{goodsChargerCttpc}
             , GOODS_CHARGER_MBTLNUM = encrypt(#{goodsChargerMbtlnum}, 'P007')
             , SPCLTY_REALM          = #{spcltyRealm}
             , CNSTNT_CO             = #{cnstntCo}
             , CNSL_EXPC_EFFECT      = #{cnslExpcEffect}
             , UPDT_ID               = #{updtId}
             , UPDT_DT               = SYSDATETIME
             <!-- {{ BH, 2015.12.17 소프트웨어 서비스 세부컬럽 추가로 인한 소스추가-->
             , ORGPLCE               = #{orgplce}
             , CNTRCT_NO             = #{cntrctNo}
             , ITEM_VOD_URL          = #{itemVodUrl}
             , ITEM_SFE              = #{itemSfe}
             , SMLPZ_CHK             = #{smlpzChk}
             , MNL_DN_FILE_SEQ       = #{mnlDnFileSeq}
             <!-- }} -->
             , ITEM_DN_FILE_SEQ      = #{etcFileSeq}         <!-- {{ KS, 2015.12.23 기타 첨부파일 추가 -->
             , PRICE_DN_FILE_SEQ     = #{priceDnFileSeq}     <!-- {{ BH, 2016.01.13 가격표 첨부파일 추가 -->
             , GOODS_MONITOR_URL     = #{goodsMonitorUrl}    <!-- {{ SK, 2016.01.20 기타 모니터링 URL}} -->
             , SERVICE_OFFER_METHOD  = #{serviceOfferMethod} <!-- {{ DK, 2016.06.22 서비스제공방식 추가}} -->
             , CSTMR_INFO            = #{cstmrInfo}
             , GOODS_EXPC_EFFECT     = #{goodsExpcEffect}
             , GS_CRTFC_NO           = #{gsCrtfcNo}
             , NARA_CRTFC_NO         = #{naraCrtfcNo}
             , IS_MARK               = #{isMark}         
			 , SVC_PC				 = #{svcPc}			   <!-- {{ 2018.08.29 서비스가격 추가 -->
			 , SVC_PC_VAT			 = #{svcPcVat}		   <!-- {{ 2018.08.29 VAT포함 추가 -->	
			 , SVC_PC_UNT_CD		 = #{svcPcUntCd}		   <!-- {{ 2018.08.29 서비스 가격단위 추가 -->
			 , MUMM_CNTRCTPD		 = #{mummCntrctpd}	   <!-- {{ 2018.08.29 최소계약기간 추가 -->
			 , DUE_STDR_MUMM         = #{dueStdrMumm}		   <!-- {{ 2018.08.29 과금기준 추가 -->
                 
         WHERE GOODS_CODE = #{goodsCode}
          
    </update>
    <update id="goodsUpdateTmp" parameterType="goodsVO">
    
    /*_webGoods.goodsUpdateTmp*/
    
        UPDATE TST_GOOD_INFO_I_TMP
           SET GOODS_NM              = #{goodsNm}
             , GOODS_VER_INFO        = #{goodsVerInfo}
             , GOODS_HMPG_URL        = #{goodsHmpgUrl}
             , GOODS_SUMRY           = #{goodsSumry}
             , GOODS_MAIN_FNCT       = #{goodsMainFnct}
             , GOODS_REFER           = #{goodsRefer}
             , GOODS_DWLD_URL        = #{goodsDwldUrl}
             <!--,  SLE_MTHD_CD      = #{sleMthdCd} -->
             , GOODS_FILE_SEQ        = #{goodsFileSeq}
             , DEMO_EXPRN_URL        = #{demoExprnUrl}
             , GOODS_MAKR            = #{goodsMakr}
             , GOODS_REGIST_STTUS    = #{goodsRegistSttus}
             , GOODS_IMAGE_FILE_SEQ  = #{goodsImageFileSeq}
             , GOODS_MNL_FILE_SEQ    = #{goodsMnlFileSeq}
             , GOODS_KND_CD          = #{goodsKndCd}
             , COMOU_DE              = #{comouDe}
             , GOODS_PC              = #{goodsPc}
             , GOODS_LICENCE_CD      = #{goodsLicenceCd}
             , GOODS_LICENCE_CN      = #{goodsLicenceCn}
             , ARCHTC_SE             = #{archtcSe}
             , GOODS_CHARGER_NM      = #{goodsChargerNm}
             , GOODS_CHARGER_EMAIL   = encrypt(#{goodsChargerEmail}, 'P008')
             , GOODS_CHARGER_CTTPC   = #{goodsChargerCttpc}
             , GOODS_CHARGER_MBTLNUM = encrypt(#{goodsChargerMbtlnum}, 'P007')
             , SPCLTY_REALM          = #{spcltyRealm}
             , CNSTNT_CO             = #{cnstntCo}
             , CNSL_EXPC_EFFECT      = #{cnslExpcEffect}
             , UPDT_ID               = #{updtId}
             , UPDT_DT               = SYSDATETIME
             <!-- {{ BH, 2015.12.17 소프트웨어 서비스 세부컬럽 추가로 인한 소스추가-->
             , ORGPLCE               = #{orgplce}
             , CNTRCT_NO             = #{cntrctNo} 
             , ITEM_VOD_URL          = #{itemVodUrl}
             , ITEM_SFE              = #{itemSfe}
             , SMLPZ_CHK             = #{smlpzChk}
             , MNL_DN_FILE_SEQ       = #{mnlDnFileSeq}
             <!-- }} -->
             , ITEM_DN_FILE_SEQ      = #{etcFileSeq}         <!-- {{ KS, 2015.12.23 기타 첨부파일 추가 -->
             , PRICE_DN_FILE_SEQ     = #{priceDnFileSeq}     <!-- {{ BH, 2016.01.13 가격표 첨부파일 추가 -->
             , GOODS_MONITOR_URL     = #{goodsMonitorUrl}    <!-- {{ SK, 2016.01.20 기타 모니터링 URL}} -->
             , SERVICE_OFFER_METHOD  = #{serviceOfferMethod} <!-- {{ DK, 2016.06.22 서비스제공방식 추가}} -->
             , CSTMR_INFO            = #{cstmrInfo}
             , GOODS_EXPC_EFFECT     = #{goodsExpcEffect}
             , GS_CRTFC_NO           = #{gsCrtfcNo}
             , NARA_CRTFC_NO         = #{naraCrtfcNo}
			 , IS_MARK         		 = #{isMark}
			 , SVC_PC				 = #{svcPc}			   	 <!-- {{ 2018.08.29 서비스가격 추가 -->
			 , SVC_PC_VAT			 = #{svcPcVat}		   	 <!-- {{ 2018.08.29 VAT포함 추가 -->	
			 , SVC_PC_UNT_CD		 = #{svcPcUntCd}		 <!-- {{ 2018.08.29 서비스 가격단위 추가 -->
			 , MUMM_CNTRCTPD		 = #{mummCntrctpd}	   	 <!-- {{ 2018.08.29 최소계약기간 추가 -->
			 , DUE_STDR_MUMM         = #{dueStdrMumm}		 <!-- {{ 2018.08.29 과금기준 추가 -->
         WHERE GOODS_CODE = #{goodsCode}
          
    </update>

    
    <update id="goodsUpdateStep2" parameterType="goodsVO">
    
    /*_webGoods.goodsUpdateStep2*/
    
        UPDATE TST_GOOD_INFO_I 
           SET GOODS_NM              = #{goodsNm}
             , GOODS_VER_INFO        = #{goodsVerInfo}
             , GOODS_HMPG_URL        = #{goodsHmpgUrl}
             , GOODS_SUMRY           = #{goodsSumry}
             , GOODS_MAIN_FNCT       = #{goodsMainFnct}
             , GOODS_REFER           = #{goodsRefer}
             , GOODS_DWLD_URL        = #{goodsDwldUrl}
             <!--,  SLE_MTHD_CD      = #{sleMthdCd} -->
             , GOODS_FILE_SEQ        = #{goodsFileSeq}
             , DEMO_EXPRN_URL        = #{demoExprnUrl}
             , GOODS_MAKR            = #{goodsMakr}
             , GOODS_REGIST_STTUS    = #{goodsRegistSttus}
             , GOODS_IMAGE_FILE_SEQ  = #{goodsImageFileSeq}
             , GOODS_MNL_FILE_SEQ    = #{goodsMnlFileSeq}
             , GOODS_KND_CD          = #{goodsKndCd}
             , COMOU_DE              = #{comouDe}
             , GOODS_PC              = #{goodsPc}
             , GOODS_LICENCE_CD      = #{goodsLicenceCd}
             , GOODS_LICENCE_CN      = #{goodsLicenceCn}
             , ARCHTC_SE             = #{archtcSe}
             , GOODS_CHARGER_NM      = #{goodsChargerNm}
             , GOODS_CHARGER_EMAIL   = encrypt(#{goodsChargerEmail}, 'P008')
             , GOODS_CHARGER_CTTPC   = #{goodsChargerCttpc}
             , GOODS_CHARGER_MBTLNUM = encrypt(#{goodsChargerMbtlnum}, 'P007')
             , SPCLTY_REALM          = #{spcltyRealm}
             , CNSTNT_CO             = #{cnstntCo}
             , CNSL_EXPC_EFFECT      = #{cnslExpcEffect}
             , UPDT_ID               = #{updtId}
             , UPDT_DT               = SYSDATETIME
             <!-- {{ BH, 2015.12.17 소프트웨어 서비스 세부컬럽 추가로 인한 소스추가-->
             , ORGPLCE               = #{orgplce}
             , CNTRCT_NO             = #{cntrctNo}
             , ITEM_VOD_URL          = #{itemVodUrl}
             , ITEM_SFE              = #{itemSfe}
             , SMLPZ_CHK             = #{smlpzChk}
             , MNL_DN_FILE_SEQ       = #{mnlDnFileSeq}
             <!-- }} -->
             , ITEM_DN_FILE_SEQ      = #{etcFileSeq}         <!-- {{ KS, 2015.12.23 기타 첨부파일 추가 -->
             , PRICE_DN_FILE_SEQ     = #{priceDnFileSeq}     <!-- {{ BH, 2016.01.13 가격표 첨부파일 추가 -->
             , GOODS_MONITOR_URL     = #{goodsMonitorUrl}    <!-- {{ SK, 2016.01.20 기타 모니터링 URL}} -->
             , SERVICE_OFFER_METHOD  = #{serviceOfferMethod} <!-- {{ DK, 2016.06.22 서비스제공방식 추가}} -->
             , CSTMR_INFO            = #{cstmrInfo}
             , GOODS_EXPC_EFFECT     = #{goodsExpcEffect}
             , GS_CRTFC_NO           = #{gsCrtfcNo}
             , NARA_CRTFC_NO         = #{naraCrtfcNo}
         WHERE GOODS_CODE = #{goodsCode}
          
    </update>
    
    
      <update id="goodsUpdateConfirm" parameterType="goodsVO">    
    /*_webGoods.goodsUpdateConfirm*/    
        UPDATE TST_GOOD_INFO_I SET         
          GOODS_REGIST_STTUS = #{goodsRegistSttus}
        ,  UPDT_ID       = #{updtId}
        ,  UPDT_DT       = SYSDATETIME  
        WHERE        
          GOODS_CODE = #{goodsCode}
    </update>
    
    <select id="goodsCodekey" resultType="string">
    
    /*_webGoods.goodsCodekey*/
        
        SELECT TO_CHAR(SYSDATE, 'YYYYMM') || GOODS_SEQ.NEXT_VALUE
        
    </select>
    
    <insert id="goodsInsert" parameterType="goodsManageVO">
    
    	/*_webGoods.goodsInsert*/
       INSERT INTO TST_GOOD_INFO_I
	           SET GOODS_CODE              = #{goodsCode}                                                                        
	              ,USER_ID                 = #{userId}                                                                     
	              ,LANG_CODE               = #{langCode}                                                                       
	              ,GOODS_KND_CD            = #{goodsKndCd}                                                                          
	              ,GOODS_NM                = #{goodsNm}                                                                      
	              ,GOODS_VER_INFO          = #{goodsVerInfo}                                                                            
	              ,GOODS_HMPG_URL          = #{goodsHmpgUrl}                                                                            
	              ,GOODS_SUMRY             = #{goodsSumry}                                                                         
	              ,GOODS_MAIN_FNCT         = #{goodsMainFnct}                                                                             
	              ,CNSL_EXPC_EFFECT        = #{cnslExpcEffect}                                                                              
	              ,GOODS_REFER             = #{goodsRefer}                                                                         
	              ,GOODS_DWLD_URL          = #{goodsDwldUrl}                                                                            
	              ,SLE_MTHD_CD             = #{sleMthdCd}                                                                         
	              ,GOODS_FILE_SEQ          = #{goodsFileSeq}                                                                            
	              ,DEMO_EXPRN_URL          = #{demoExprnUrl}                                                                            
	              ,SPCLTY_REALM            = #{spcltyRealm}                                                                          
	              ,CNSTNT_CO               = #{cnstntCo}                                                                       
	              ,GOODS_IMAGE_FILE_SEQ    = #{goodsImageFileSeq}                                                                                  
	              ,GOODS_MNL_FILE_SEQ      = #{goodsMnlFileSeq}                                                                                
	              ,COMOU_DE                = #{comouDe}                                                                      
	              ,GOODS_MAKR              = #{goodsMakr}                                                                        
	              ,GOODS_PC                = #{goodsPc}                                                                      
	              ,GOODS_LICENCE_CD        = #{goodsLicenceCd}                                                                              
	              ,GOODS_LICENCE_CN        = #{goodsLicenceCn}                                                                              
	              ,ARCHTC_SE               = #{archtcSe}                                                                       
	              ,GOODS_CHARGER_NM        = #{goodsChargerNm}                                                                              
	              ,GOODS_CHARGER_EMAIL     = encrypt(#{goodsChargerEmail},'P008')                                                                                 
	              ,GOODS_CHARGER_CTTPC     = #{goodsChargerCttpc}                                                                                 
	              ,GOODS_CHARGER_MBTLNUM   = encrypt(#{goodsChargerMbtlnum},'P007')                                                                                   
	              ,GOODS_REGIST_STTUS      = #{goodsRegistSttus}                                                                                
	              ,GOODS_ACTVTY_AT         = #{goodsActvtyAt}                                                                             
	              ,REGIST_ID               = #{registId}                                                                       
	              ,REGIST_DT               = SYSDATETIME                                                                       
	              ,UPDT_ID                 = #{updtId}                                                                     
	              ,UPDT_DT                 = SYSDATETIME                                                                     
	              ,CONFM_DT                = #{confmDt}                                                                      
	              ,GOODS_RDCNT             = #{goodsRdcnt}                                                                         
	              ,MNGR_DELETE_AT          = #{mngrDeleteAt}                                                                            
	              ,DELETE_MNGR_DEPT_CODE   = #{deleteMngrDeptCode}                                                                                   
	              ,DELETE_MNGR_ID          = #{deleteMngrId}                                                                            
	              ,CNTC_INSTT_CD           = #{cntcInsttCd}                                                                           
	              <!-- {{ BH, 2015.12.17 소프트웨어 서비스 세부컬럽 추가로 인한 소스추가-->                                                             
	              ,ORGPLCE                 = #{orgplce}                                                                     
	              ,CNTRCT_NO               = #{cntrctNo}                                                                       
	              ,ITEM_VOD_URL            = #{itemVodUrl}                                                                          
	              ,ITEM_SFE                = #{itemSfe}                                                                      
	              ,SMLPZ_CHK               = #{smlpzChk}                                                                       
	              ,MNL_DN_FILE_SEQ         = #{mnlDnFileSeq}                                                                             
	              <!-- }} -->                                                             
	              ,ITEM_DN_FILE_SEQ        = #{etcFileSeq}         <!-- {{ KS, 2015.12.23 기타 첨부파일 추가 -->                                                                                
	              ,PRICE_DN_FILE_SEQ       = #{priceDnFileSeq}     <!-- {{ BH, 2016.01.13 기타 첨부파일 추가}} -->                                                                                
	              ,GOODS_MONITOR_URL       = #{goodsMonitorUrl}    <!-- {{ SK, 2016.01.20 기타 모니터링 URL}} -->                                                                                
	              ,SERVICE_OFFER_METHOD    = #{serviceOfferMethod} <!-- {{ DK, 2016.06.22 서비스제공방식 추가}} -->
	              ,GS_CRTFC_NO             = #{gsCrtfcNo}
                  ,NARA_CRTFC_NO           = #{naraCrtfcNo}
				  ,SVC_PC				   = #{svcPc}			   <!-- {{ 2018.08.29 서비스가격 추가 -->
				  ,SVC_PC_VAT			   = #{svcPcVat}		   <!-- {{ 2018.08.29 VAT포함 추가 -->	
				  ,SVC_PC_UNT_CD		   = #{svcPcUntCd}		   <!-- {{ 2018.08.29 서비스 가격단위 추가 -->
				  ,MUMM_CNTRCTPD		   = #{mummCntrctpd}	   <!-- {{ 2018.08.29 최소계약기간 추가 -->
				  ,DUE_STDR_MUMM           = #{dueStdrMumm}		   <!-- {{ 2018.08.29 과금기준 추가 -->
    </insert>
    
    <select id="orderCnt" parameterType="goodsVO" resultType="integer">
        SELECT COUNT(GOODS_CODE) AS ordrCnt
          FROM TST_GOOD_ORDR_I
         WHERE ORDER_CNFIRM_AT = 'N' AND GOODS_CODE= #{goodsCode}
    </select>
    <update id="goodsDelete" parameterType="goodsManageVO">
        UPDATE TST_GOOD_INFO_I SET
          GOODS_ACTVTY_AT = 'N'
        , UPDT_ID       = #{updtId}
        , UPDT_DT       = SYSDATETIME
        WHERE        
          GOODS_CODE = #{goodsCode}
    </update>
    
    <update id="registUpdate" parameterType="goodsManageVO">
        UPDATE TST_GOOD_INFO_I SET
          GOODS_REGIST_STTUS = 1002
        , UPDT_ID       = #{updtId}
        , UPDT_DT       = SYSDATETIME
        WHERE        
          GOODS_CODE = #{goodsCode}
    </update>
    
    <delete id="ctgryDelete" parameterType="goodsManageVO">
    
    /*_webGoods.ctgryDelete*/
    
        DELETE FROM TST_GOOD_CATE_I
              WHERE GOODS_CODE = #{goodsCode}
              
    </delete>
    <delete id="ctgryDeleteTmp" parameterType="goodsManageVO">
    
    /*_webGoods.ctgryDeleteTmp*/
    
        DELETE FROM TST_GOOD_CATE_I_TMP
              WHERE GOODS_CODE = #{goodsCode}
              
    </delete>
    
    <insert id="ctgryInsert" parameterType="goodsManageVO">
    
    /*_webGoods.ctgryInsert*/
    
    INSERT INTO TST_GOOD_CATE_I ( GOODS_CODE, CTGRY_CODE)
                                (
                                   SELECT #{goodsCode}
                                        , #{ctgryCd}
                                            
                                    UNION ALL
                                   
                                   SELECT #{goodsCode}
                                        , MAPNG_CTGRY_CODE 
                                     FROM TST_CATE_MGMT_M
                                    WHERE #{pChk} 
                                      AND CTGRY_CODE = #{ctgryCd} 
                                      AND (MAPNG_CTGRY_CODE IS NOT NULL AND TRIM(MAPNG_CTGRY_CODE) != '')
                                )
						        
    </insert>
    <insert id="ctgryInsertTmp" parameterType="goodsManageVO">
    
    /*_webGoods.ctgryInsertTmp*/
    
    INSERT INTO TST_GOOD_CATE_I_TMP ( GOODS_CODE, CTGRY_CODE)
                                (
                                   SELECT #{goodsCode}
                                        , #{ctgryCd}
                                            
                                    UNION ALL
                                   
                                   SELECT #{goodsCode}
                                        , MAPNG_CTGRY_CODE 
                                     FROM TST_CATE_MGMT_M
                                    WHERE #{pChk} 
                                      AND CTGRY_CODE = #{ctgryCd} 
                                      AND (MAPNG_CTGRY_CODE IS NOT NULL AND TRIM(MAPNG_CTGRY_CODE) != '')
                                )
						        
    </insert>
    
<!--     <update id="imageUpdate" parameterType="goodsManageVO"> -->
<!--         UPDATE T_GOODS_IMAGES SET -->
<!--             GOODS_IMAGE_FILE_SEQ = #{goodsImageFileSeq} -->
<!--         WHERE -->
<!--         GOODS_CODE = #{goodsCode} -->
<!--     </update> -->
    
    <delete id="markDelete" parameterType="goodsManageVO">
    
    /*_webGoods.markDelete*/
    
        DELETE FROM TST_GOOD_MARK_I
              WHERE GOODS_CODE = #{goodsCode}
              
    </delete>
    <delete id="markDeleteMarkCd" parameterType="goodsManageVO">
    
    /*_webGoods.markDeleteMarkCd*/
    
        DELETE FROM TST_GOOD_MARK_I
              WHERE GOODS_CODE = #{goodsCode}
              AND MARK_CD = #{markCd}
              
    </delete>
    <delete id="markDeleteMarkCdTmp" parameterType="goodsManageVO">
    
    /*_webGoods.markDeleteMarkCdTmp*/
    
        DELETE FROM TST_GOOD_MARK_I_TMP
              WHERE GOODS_CODE = #{goodsCode}
              AND MARK_CD = #{markCd}
              
    </delete>
    
    <delete id="markTempDelete" parameterType="goodsManageVO">
    
    /*_webGoods.markTempDelete*/
    
        DELETE FROM TST_GOOD_MARK_I_TMP
              WHERE GOODS_CODE = #{goodsCode}
              
    </delete>
    
    <insert id="markInsert" parameterType="goodsManageVO">
    /*_webGoods.markInsert*/
        INSERT INTO TST_GOOD_MARK_I
        (GOODS_CODE, MARK_CD)
        VALUES
        (#{goodsCode}, #{markCd})        
    </insert>
    <insert id="markTempInsert" parameterType="goodsManageVO">
    /*_webGoods.markTempInsert*/
        INSERT INTO TST_GOOD_MARK_I_TMP
        (GOODS_CODE, MARK_CD)
        VALUES
        (#{goodsCode}, #{markCd})        
    </insert>
    
    <update id="crtfcUpdate" parameterType="goodsManageVO">
    /*_webGoods.crtfcUpdate*/
        MERGE INTO TST_CTFC_ATCH_I T
        USING (SELECT #{goodsCode} AS GOODS_CODE, #{markCd} AS CRTFC_SE_CD ) S        
           ON (T.GOODS_CODE = S.GOODS_CODE AND T.CRTFC_SE_CD = S.CRTFC_SE_CD)                 
        WHEN MATCHED THEN
              UPDATE SET  T.CRTFC_SE_FILE_SEQ = #{crtfcSeFileSeq}
                      
        WHEN NOT MATCHED THEN
              INSERT
                  (GOODS_CODE, CRTFC_SE_CD, CRTFC_SE_FILE_SEQ)
              VALUES
                  (#{goodsCode}, #{markCd}, #{crtfcSeFileSeq})             
    </update>
    <update id="crtfcUpdateTmp" parameterType="goodsManageVO">
    /*_webGoods.crtfcUpdateTmp*/
        MERGE INTO TST_CTFC_ATCH_I_TMP T
        USING (SELECT #{goodsCode} AS GOODS_CODE, #{markCd} AS CRTFC_SE_CD ) S        
           ON (T.GOODS_CODE = S.GOODS_CODE AND T.CRTFC_SE_CD = S.CRTFC_SE_CD)                 
        WHEN MATCHED THEN
              UPDATE SET  T.CRTFC_SE_FILE_SEQ = #{crtfcSeFileSeq}        
        WHEN NOT MATCHED THEN
              INSERT
                  (GOODS_CODE, CRTFC_SE_CD, CRTFC_SE_FILE_SEQ)
              VALUES
                  (#{goodsCode}, #{markCd}, #{crtfcSeFileSeq})             
    </update>
    
    <delete id="tagDelete" parameterType="goodsManageVO">
    
    /*_webGoods.tagDelete*/
    
        DELETE FROM TST_GOOD_TAG_I 
              WHERE GOODS_CODE = #{goodsCode}
        
    </delete>
    <delete id="tagDeleteTmp" parameterType="goodsManageVO">
    
    /*_webGoods.tagDeleteTmp*/
    
        DELETE FROM TST_GOOD_TAG_I_TMP 
              WHERE GOODS_CODE = #{goodsCode}
        
    </delete>
    
    <update id="tagInsert" parameterType="goodsManageVO">
    
    /*_webGoods.tagInsert*/
    
        INSERT INTO TST_GOOD_TAG_I (GOODS_CODE, GOODS_TAG_NM)
                            VALUES (#{goodsCode}, #{goodsTagNm})
            
    </update>
    <update id="tagInsertTmp" parameterType="goodsManageVO">
    
    /*_webGoods.tagInsertTmp*/
    
        INSERT INTO TST_GOOD_TAG_I_TMP (GOODS_CODE, GOODS_TAG_NM)
                            VALUES (#{goodsCode}, #{goodsTagNm})
            
    </update>
    
    <delete id="metaDelete" parameterType="goodsVO">
     
     /* _webGoods.metaDelete  */
     
        DELETE FROM TST_GOOD_META_I 
              WHERE GOODS_CODE = #{goodsCode}
                AND GROUP_CD   = #{metaGroupCd}
                
    </delete>
    <delete id="metaDeleteTmp" parameterType="goodsVO">
     
     /* _webGoods.metaDeleteTmp  */
     
        DELETE FROM TST_GOOD_META_I_TMP
              WHERE GOODS_CODE = #{goodsCode}
                AND GROUP_CD   = #{metaGroupCd}
                
    </delete>
    
    <insert id="metaInsert" parameterType="goodsVO">
     
     /* _webGoods.metaInsert  */
     
     INSERT INTO TST_GOOD_META_I ( GOODS_CODE
                                 , LANG_CD
                                 , GROUP_CD
                                 , INDVDLZ_CD
                                 , META_ETC_CN 
                                 )
                          VALUES ( #{goodsCode}
                                 , #{langCode}
                                 , #{metaGroupCd}
                                 , #{metaCode}
                                 , #{metaEtcCn}
                                 )
            
    </insert>
    <insert id="metaInsertTmp" parameterType="goodsVO">
     
     /* _webGoods.metaInsertTmp  */
     
     INSERT INTO TST_GOOD_META_I_TMP ( GOODS_CODE
                                 , LANG_CD
                                 , GROUP_CD
                                 , INDVDLZ_CD
                                 , META_ETC_CN 
                                 )
                          VALUES ( #{goodsCode}
                                 , #{langCode}
                                 , #{metaGroupCd}
                                 , #{metaCode}
                                 , #{metaEtcCn}
                                 )
            
    </insert>
    
<!--     <update id="mnlUpdate" parameterType="goodsManageVO"> -->
<!--         UPDATE T_GOODS_MNL_INFO SET             -->
<!--             GOODS_MNL_NM = #{goodsMnlNm}, -->
<!--             GOODS_MNL_FILE_SEQ = #{goodsMnlFileSeq}   -->
<!--         WHERE GOODS_CODE = #{goodsCode} -->
<!--           AND GOODS_MNL_SEQ = #{goodsMnlSeq} -->
<!--     </update> -->
    
    <select id="fileCount" parameterType="int" resultType="int">
     /*_webGoods.fileCount*/
        SELECT COUNT(FILE_SEQ) AS fileCnt
          FROM OP_FILE
         WHERE FILE_SEQ = #{fileSeq}
    </select>
    
    <!--     인증구분코드목록     -->
    <select id="goodsMarkCodeList" resultType="map">
    /* _webGoods.goodsMarkCodeList*/  
        SELECT B.INDVDLZ_CD AS MARKCD,
               B.INDVDLZ_CD_NM AS MARKNM,
               A.MARK_CD AS GOODSMARKCD,
               (SELECT MARK_IMAGE_FILE_SEQ FROM TST_GOOD_MARK_M WHERE MARK_CD = A.MARK_CD) AS MARKIMAGEFILESEQ,
               C.CRTFC_SE_FILE_SEQ AS CRTFCSEFILESEQ 
          FROM OP_CODE_INDVDLZ B LEFT OUTER JOIN TST_GOOD_MARK_I A
            ON A.MARK_CD = B.INDVDLZ_CD
               LEFT OUTER JOIN TST_CTFC_ATCH_I C
            ON B.INDVDLZ_CD = C.CRTFC_SE_CD
         WHERE
           AND B.GROUP_CD = 1011
           AND B.USE_YN = 'Y'
        ORDER BY B.CD_SORT_NO
    </select>  
    
    <!--     반려사유조회     -->
    <select id="returnReason" parameterType="goodsVO" resultType="goodsVO">
      /*   _webGoods.returnReason*/
        SELECT * 
        FROM (SELECT GOODS_CODE        AS goodsCode
                   , RETURN_RESN       AS returnResn
                   , EXMNT_CONFM_CD    AS exmntCnfmCd
              FROM TST_EXMN_CNFM_H
              WHERE GOODS_CODE = #{goodsCode}
                 AND EXMNT_CONFM_CD = #{exmntConfmCd}
           ORDER BY EXMNT_CONFM_DT DESC )
        WHERE ROWNUM BETWEEN 1 AND 1    
    </select>
    
    <select id="changeView" parameterType="goodsVO" resultType="goodsVO">
      /*   _webGoods.changeView*/
        SELECT * 
        FROM (SELECT GOODS_CODE        		AS goodsCode
                   , RETURN_RESN       		AS returnResn
                   , EXMNT_CONFM_HIST_SN    AS exmntConfmHistSn
                   , EXMNT_CONFM_DT			AS exmntConfmDt 
                   , GOODS_CHNG_FILE 		AS goodsChngSeq
                   , GOODS_CHNG_PC			AS goodsChngPc
                   , GOODS_BEFORE_PC		AS goodsBeforPc	
              FROM TST_EXMN_CNFM_H
              WHERE GOODS_CODE = #{goodsCode}
                 AND EXMNT_CONFM_CD = #{exmntConfmCd}
           ORDER BY EXMNT_CONFM_DT DESC )
        WHERE ROWNUM BETWEEN 1 AND 1    
    </select>
    
    <!--     이력히스토리     -->
   <select id="goodsChngHist" parameterType="goodsVO" resultType="map">
      /*  _webGoods.goodsChngHist */
        SELECT GOODS_CODE,
        	  EXMNT_CONFM_CD,        	  
        	  MNGR_ID,
        	  TO_CHAR(EXMNT_CONFM_DT,'YYYY.MM.DD') AS EXMNT_CONFM_DT ,
        	  RETURN_RESN,
        	  GOODS_CHNG_FILE,
        	  GOODS_CHNG_PC,
        	  GOODS_BEFORE_PC,
        	  REQU_ID,
        	  TO_CHAR(IFNULL(REQU_DT,EXMNT_CONFM_DT),'YYYY.MM.DD')  AS REQU_DT
        FROM TST_EXMN_CNFM_H
        WHERE GOODS_CODE =  #{goodsCode}
         AND  EXMNT_CONFM_CD = '1007' AND GOODS_CHNG_FILE IS NOT NULL
    </select>
    
    <!--    상점 언어조회     -->
    <select id="storeLangList" parameterType="goodsManageVO" resultType="goodsManageVO">
      
      /* _webGoods.storeLangList*/
        
       SELECT A.LANG_CODE   AS langCode
			, B.LANG_NM     AS langNm
			, B.lang_eng_nm AS langEngNm
			, DECODE(A.LANG_CODE ,#{langCode},'Y','N') AS storeSction
         FROM TUM_SVC_STOR_I A 
            , TCO_SVC_LANG_C B
	    WHERE A.LANG_CODE       = B.LANG_CODE
	      AND A.USER_ID         = #{userId}
	      AND A.STORE_ACTVTY_AT = 'Y'
	      
    </select>
    
    <select id="eManagerAuthInfo" parameterType="goodsManageVO" resultType="goodsManageVO">
        /* _webGoods.eManagerAuthInfo */
        SELECT 
			   A.MNGR_NM AS mngrNm
			 , A.MNGR_ID AS mngrId
			 , (SELECT DEPT_NM FROM OP_DEPT WHERE A.DEPT_CODE=DEPT_CODE) AS deptNm
             , (SELECT TELNO FROM OP_DEPT WHERE A.DEPT_CODE=DEPT_CODE) AS deptTelno
             , A.EMAIL  AS email
             , A.TELNO  AS telno
        FROM OP_MNGR A, OP_AUTH_MNGR_ASSIGN B
        WHERE A.MNGR_ID = B.MNGR_ID
          AND B.AUTH_CODE = #{authCode}
          AND A.USE_YN = 'Y'
          AND A.EMAIL IS NOT NULL
    </select>
    
    <select id="storeLangNm" parameterType="String" resultType="goodsManageVO">
        
        /* _webGoods.storeLangNm */
        
       SELECT LANG_CODE   AS langCode
            , LANG_NM     AS langNm
            , lang_eng_nm AS langEngNm
         FROM TCO_SVC_LANG_C 
        WHERE LANG_CODE = #{langCode}
        
    </select>
    
    <select id="GoodsSpecInfoTobe" parameterType="map" resultType="GoodsSpecVO">
    	/* _webGoods.GoodsSpecInfo */
		SELECT  GOODS_CODE			AS goodsCode
		      , MAX(GOODS_NUM)		AS goodsNum
		      , (SELECT CNTR_NUM FROM TCN_PPS_GOOD_INFO_L GROUP BY CNTR_NUM) AS cntrNum
		      , CMPNY_NM
		      , CMPNY_FOND_YEAR
		      , ENTRPRS_SE
		      , CMPNY_INTRCN
		      , BSNS_REALM
		      , MAIN_REFER
		      , SVC_NM
		      , SVC_DFN_SFE
		      , SVC_EXPC_EFFECT
		      , SVC_TY
		      , SVC_ENTRPRS_SUPLY_TY
		      , DUE_STDR_MUMM
		      , SVC_PC
		      , MUMM_CNTRCTPD
		      , PC_TABLE_ATCH_AT
		      , VAT_INCLS_AT
		      , SVC_BEGIN_PROCSS
		      , SVC_END_PROCSS
		      , AT_SVC_EVL
		      , SVC_EVL_SUPLY_PD
		      , SVC_CHARGER_NM
		      , SVC_CHARGER_TELNO
		      , SVC_CHARGER_EMAIL
		      , GNRLZ_SOPMAL_REGIST_AT
		      , PRIVATE_CLOUD_AT
		      , PUBLIC_CLOUD_AT
		      , HYBRID_CLOUD_AT
		      , KISA_CRTFC_AT
		      , CLOUD_SVC_QLITY_CRTFC_AT
		      , CLOUD_SVC_CNFIRM_AT
		      , CC_CRTFC_AT
		      , GS_CRTFC_AT
		      , SLA_APPLC_AT
		      , SVC_USEFUL
		      , ATMC_ESTN_SPORT_AT
		      , CLUSTERING_SPORT_AT
		      , SFSRV_PROVISIONING_SPORT_AT
		      , SVC_PROVISIONING_TIME
		      , SVC_PROVISIONING_RELIS_TIME
		      , DATA_CNTER_LC_INFO
		      , DATA_CNTER_HBRD_LC_INFO
		      , DSSTRRECOVRY_PLAN
		      , DATA_EXTRC_PROCSS
		      , UNUSE_DATA_PRTC_POLICY
		      , SAFE_DATA_DELETE_POLICY
		      , SVC_MANAGE_STTUS_INFO_SUPLY
		      , SVC_USE_LOG_SUPLY_AT
		      , TROBL_MANAGE_REPRT_POLICY
		      , API_SPORT_AT
		      , API_SPORT_TY
		      , USER_MNL_SUPLY_AT
		      , USER_MNL_INFO_AT
		      , USER_MNL_INFO_INPUT
		      , USER_EDC_SPORT_AT
		      , USER_EDC_INFO
		      , VISIT_EDC_SPORT_AT
		      , VISIT_TCHNLGY_SPORT_AT
		      , VISIT_ELSE_TCHNLGY_SPORT_AT
		      , CSTMR_CNTER_OPER_AT
		      , CSTMR_CNTER_OPER_TIME
		      , I_OTHBC_STD_SPORT_DOC
		      , I_SVC_DIRECT_CNNC_NTWRK
		      , I_VIRTL_NTWRK_SPORT
		      , I_SYNCHRN_SPORT_AT
		      , I_SPORT_EQPMN_LIST
		      , I_SERVER_COMPUTER_SVC
		      , I_STRGE_SVC
		      , I_NTWRK_SVC
		      , I_SCRTY_SVC
		      , I_MANAGE_SVC
		      , I_ETC_SVC
		      , P_SECURE_DEVLOP
		      , P_SECURE_DCT_WDTB
		      , P_SPORT_LANG
		      , P_SPORT_PLTFOM
		      , P_SPORT_CONTAINER_VER
		      , P_SPORT_DATA_STORGE
		      , P_SUB_TENANCY_SPORT_AT
		      , P_DVLPR_UNT_INFO
		      , P_SDK_API_SUPLY_AT
		      , P_TEST_DEBUGING_SPORT_AT
		      , P_ADDON_SVC_MARKPLACE_SPORT_AT
		      , P_CISPORT_SPORT
		      , P_LOGING_MNTRNG_SPORT
		      , P_LOAD_BALANCING_SPORT
		      , S_USER_SVC_SUPLY_MTHD
		      , S_MANAGE_SVC_SUPLY_MTHD
		      , S_INFRSTRCTR_SUPLY_MTHD
		      , S_SCRTY_POLICY
		      , S_DATA_ENCPT_AT_MTHD
		      , S_BACKUP_RECOVRY_POLICY
		      , S_USER_CRTFC_SCRTY_PRTC_POLICY
		      , S_MULTI_PLTFOM_SPORT_AT
		      , S_SPORT_OPERSYSM_LIST
		      , S_SPORT_WBSR_LIST
		      , S_SPORT_MOBILE_PLTFOM_LIST
		      , S_OPEN_STD_SPORT_AT
		      , S_GVRN_FRMWRK_SPORT_AT
		      , S_OPEN_SOURC_SW_AT
		      , S_PAASTA_AT
		      , S_SOURC_OTHBC_AT
		      , S_API_ACCESS_SPORT_AT
		      , S_DB_MIGRATION_SPORT_AT
		      , S_EXTRL_APPLICATION_SPORT_AT
		      , S_SUB_TENANCY_SPORT_AT
		      , S_CSTMZNG_POSBL_AT
		      , S_DEVLOP_SPORT_ETC
		      , ENTR_DATE
		      , USER_ID
		      , SVC_PC_VAT
		      , C_SPCLTY_REALM
		      , C_INDC_WHOLE
		      , C_SETUP_MGR
		      , C_HOLD_QUALF
		      , C_HOLD_TCHNLGY
		      , C_INFRSTRCTR
		      , C_INFRSTRCTR_ETC
		      , C_PLTFOM
		      , C_PRJCT_EXPRNC
		      , C_CNSL_RELM
		      , C_CNSL_SCOPE
		      , C_DETAIL_SVC
		      , C_EXC_PD
		      , C_EXC_AREA
		      , C_BEFFAT_CNSL_AT
		      , C_CNSL_PC
		      , C_PLTFOM_ETC
		      , C_CNSL_RELM_ETC
		      , C_EXC_PD_ETC
		      , SVC_PC_UNT_CD
		      , SAVE_STEP
		      , GOODS_ENTR_DATE
		      , GOODS_USE
		      , ASIS AS asIs
              , GOODS_SPEC1		AS goodsSpec1
              , GOODS_SPEC6		AS goodsSpec6
              , GOODS_SPEC7		AS goodsSpec7
              , GOODS_SPEC8		AS goodsSpec8
              , GOODS_SPEC14	AS goodsSpec14
              , GOODS_SPEC15	AS goodsSpec15
              , GOODS_SPEC17	AS goodsSpec17
              , GOODS_SPEC18	AS goodsSpec18
              , GOODS_SPEC19	AS goodsSpec19
              , GOODS_SPEC23	AS goodsSpec23
              , GOODS_SPEC24	AS goodsSpec24
              , GOODS_SPEC25	AS goodsSpec25
              , GOODS_SPEC30	AS goodsSpec30
              , GOODS_SPEC35	AS goodsSpec35
              , GOODS_SPEC37	AS goodsSpec37
              , GOODS_SPEC38	AS goodsSpec38
              , GOODS_SPEC41	AS goodsSpec41
              , GOODS_SPEC43	AS goodsSpec43
              , GOODS_SPEC44	AS goodsSpec44
              , GOODS_SPEC48	AS goodsSpec48
              , GOODS_SPEC49	AS goodsSpec49
              , GOODS_SPEC50	AS goodsSpec50
              , GOODS_SPEC51	AS goodsSpec51
              , GOODS_SPEC52	AS goodsSpec52
              , GOODS_SPEC53	AS goodsSpec53
              , GOODS_SPEC54	AS goodsSpec54
              , GOODS_SPEC55	AS goodsSpec55
              , GOODS_SPEC56	AS goodsSpec56
              , GOODS_SPEC57	AS goodsSpec57
              , GOODS_SPEC58	AS goodsSpec58
              , GOODS_SPEC59	AS goodsSpec59
              , GOODS_SPEC60	AS goodsSpec60
              , GOODS_SPEC61	AS goodsSpec61
              , GOODS_SPEC64	AS goodsSpec64
              , GOODS_SPEC65	AS goodsSpec65
              , GOODS_SPEC66	AS goodsSpec66
              , GOODS_SPEC67	AS goodsSpec67
              , GOODS_SPEC68	AS goodsSpec68
              , GOODS_SPEC69	AS goodsSpec69
              , GOODS_SPEC70	AS goodsSpec70
              , GOODS_SPEC71	AS goodsSpec71
              , GOODS_SPEC72	AS goodsSpec72
              , GOODS_SPEC73	AS goodsSpec73
              , GOODS_SPEC74	AS goodsSpec74
              , GOODS_SPEC75	AS goodsSpec75
              , GOODS_SPEC76	AS goodsSpec76
              , GOODS_SPEC5		AS goodsSpec5
              , GOODS_SPEC4		AS goodsSpec4
              , GOODS_SPEC2		AS goodsSpec2
              , GOODS_SPEC10	AS goodsSpec10
              , GOODS_SPEC26	AS goodsSpec26
              , GOODS_SPEC22	AS goodsSpec22
              , GOODS_SPEC31	AS goodsSpec31
              , GOODS_SPEC29	AS goodsSpec29
		FROM TST_GOOD_SPEC_DESCRIBE_I
		WHERE ASIS = #{asIs}
		GROUP BY  GOODS_CODE
    </select>
    
    <select id="GoodsSpecInfo" parameterType="map" resultType="GoodsSpecVO">
    	/* _webGoods.GoodsSpecInfoAsis */
		SELECT  AA.GOODS_CODE  		AS goodsCode,
    			E.LANG_STORE_NM 	AS langStoreNm,	 	/*공급업체명*/
    			B.CNTR_NUM			AS cntrNum , 	 	/*계약번호-조달등록번호*/
    			C.BIZRNO			AS bIZrNo , 	 	/*사업자번호*/
    			C.CMPNY_TELNO		AS cmpnyTelNo ,  	/* 대표전화*/
				A.GOODS_CHARGER_NM	AS goodsChargerNm , /*담당자*/
				C.CMPNY_EMAIL		AS cmpnyEmail,  	/*대표이메일*/
				A.GOODS_NM			AS goodsNm , 	 	/*서비스명*/
				A.REGIST_DT			AS registDt ,	 	/*마켓등록일*/
				F.INDVDLZ_CD_NM		AS indvdlzCdNm , 	/*서비스구분*/	
				D.LANG_CTGRY_NM		AS langCtgryNm,		/*서비스종류*/
    			GOODS_SPEC1 		AS goodsSpec1, 		/*서비스개요*/
				GOODS_SPEC2			AS goodsSpec2, 		/*VAT 포함여부*/
				GOODS_SPEC3 		AS goodsSpec3,		/*최소계약기간*/
				GOODS_SPEC4 		AS goodsSpec4, 		/*평가판 사용여부*/
				GOODS_SPEC5 		AS goodsSpec5, 		/*가격 테이블*/
				GOODS_SPEC6 		AS goodsSpec6, 		/*기술평가표*/
				GOODS_SPEC7 		AS goodsSpec7,		/*서비스 항목 정의*/
				GOODS_SPEC8 		AS goodsSpec8, 		/*기간 및 조건*/
				GOODS_SPEC9 		AS goodsSpec9, 		/*담당자*/
				GOODS_SPEC10 		AS goodsSpec10, 	/*전화번호*/
				GOODS_SPEC11		AS goodsSpec11, 	/*e-mail*/
				GOODS_SPEC12 		AS goodsSpec12, 	/*서비스 특징*/
				GOODS_SPEC13 		AS goodsSpec13, 	/*도입 기대효과*/
				GOODS_SPEC14 		AS goodsSpec14, 	/*지원 서비스 종류*/
				GOODS_SPEC15 		AS goodsSpec15, 	/*제3의 제공자에 접근 지원*/
				GOODS_SPEC16 		AS goodsSpec16, 	/*기술지원 시간*/
				GOODS_SPEC17 		AS goodsSpec17, 	/*지원대기 시간*/
				GOODS_SPEC18 		AS goodsSpec18, 	/*서비스의 단계적 확장*/
				GOODS_SPEC19 		AS goodsSpec19, 	/*공개표준 지원 및 문서*/
				GOODS_SPEC20 		AS goodsSpec20, 	/*서비스 개시 절차 포함*/
				GOODS_SPEC21 		AS goodsSpec21, 	/*서비스 종료	절차 포함*/
				GOODS_SPEC22 		AS goodsSpec22, 	/*분석 실시간 관리 정보 제공*/
				GOODS_SPEC23 		AS goodsSpec23, 	/*탄력적 클라우드 지원*/
				GOODS_SPEC24 		AS goodsSpec24, 	/*정의된 자원 보장*/
				GOODS_SPEC25 		AS goodsSpec25, 	/*영구 저장소 지원*/
				GOODS_SPEC26 		AS goodsSpec26, 	/*셀프서비스 프로비저닝 지원*/
				GOODS_SPEC27 		AS goodsSpec27, 	/*서비스 프로비저닝 시간*/
				GOODS_SPEC28 		AS goodsSpec28, 	/*서비스 프로비저닝 해제 시간*/
				GOODS_SPEC29 		AS goodsSpec29, 	/*오픈소스 S/W 사용 및 지원*/
				GOODS_SPEC30 		AS goodsSpec30, 	/*Code libraries 작성 언어*/
				GOODS_SPEC31 		AS goodsSpec31, 	/*API 접근가능 여부 및 지원*/
				GOODS_SPEC32 		AS goodsSpec32, 	/*API type*/
				GOODS_SPEC33 		AS goodsSpec33, 	/*서비스에 직접 연결하는 네트워크*/
				GOODS_SPEC34 		AS goodsSpec34, 	/*지원 웹브라우저 목록*/
				GOODS_SPEC35 		AS goodsSpec35, 	/*오프라인작업및동기화지원여부*/
				GOODS_SPEC36 		AS goodsSpec36, 	/*지원 장비 목록*/
				GOODS_SPEC37 		AS goodsSpec37, 	/*데이터 저장소 정보 및 인증정보*/
				GOODS_SPEC38 		AS goodsSpec38, 	/*사용자가 저장소 위치 지정 가능여부*/
				GOODS_SPEC39 		AS goodsSpec39, 	/*백업, 재해복구, 복구계획*/
				GOODS_SPEC40 		AS goodsSpec40, 	/*데이터추출 및 삭제계획*/
				GOODS_SPEC41 		AS goodsSpec41, 	/*사용자 장비와 서비스간 데이터 보호 방식*/
				GOODS_SPEC42 		AS goodsSpec42, 	/*데이터센터 위치*/
				GOODS_SPEC43 		AS goodsSpec43, 	/*데이터 관리 위치*/
				GOODS_SPEC44 		AS goodsSpec44, 	/*데이터센터 보호*/
				GOODS_SPEC45 		AS goodsSpec45, 	/*미사용 데이터 보호*/
				GOODS_SPEC46 		AS goodsSpec46, 	/*안전한 데이터 삭제*/
				GOODS_SPEC47 		AS goodsSpec47, 	/*서비스 가용성*/
				GOODS_SPEC48 		AS goodsSpec48, 	/*클라우드 배포 모델*/
				GOODS_SPEC49 		AS goodsSpec49, 	/*소비자 유형*/
				GOODS_SPEC50 		AS goodsSpec50, 	/*서비스 분리*/
				GOODS_SPEC51 		AS goodsSpec51, 	/*서비스 관리 분리*/
				GOODS_SPEC52 		AS goodsSpec52, 	/*변경영향 평가*/
				GOODS_SPEC53 		AS goodsSpec53, 	/*사건 관리 절차*/
				GOODS_SPEC54 		AS goodsSpec54, 	/*보안사건 고객 보고*/
				GOODS_SPEC55 		AS goodsSpec55, 	/*보안사건 정의 공표*/
				GOODS_SPEC56 		AS goodsSpec56, 	/*취약점 평가*/
				GOODS_SPEC57 		AS goodsSpec57, 	/*취약점 모니터링*/
				GOODS_SPEC58 		AS goodsSpec58, 	/*취약점 완화 우선순위*/
				GOODS_SPEC59 		AS goodsSpec59, 	/*취약점 추적*/
				GOODS_SPEC60 		AS goodsSpec60, 	/*취약점 완화 시간척도*/
				GOODS_SPEC61 		AS goodsSpec61, 	/*이벤트 모니터링*/
				GOODS_SPEC62 		AS goodsSpec62, 	/*Secure 개발*/
				GOODS_SPEC63 		AS goodsSpec63, 	/*Secure design, coding, testing 및 배포*/
				GOODS_SPEC64 		AS goodsSpec64, 	/*소프트웨어 구성 관리*/
				GOODS_SPEC65 		AS goodsSpec65, 	/*타 공급업체와의 데이터 공유*/
				GOODS_SPEC66 		AS goodsSpec66, 	/*타 공급업체 보안 요구사항*/
				GOODS_SPEC67 		AS goodsSpec67, 	/*타 공급업체의 위험 평가*/
				GOODS_SPEC68 		AS goodsSpec68, 	/*타 공급업체 이행여부 모니터링*/
				GOODS_SPEC69 		AS goodsSpec69, 	/*사용자 인증 및 엑세스 관리*/
				GOODS_SPEC70 		AS goodsSpec70, 	/*지원 채널을 통한 사용자 접근 관리**/
				GOODS_SPEC71 		AS goodsSpec71, 	/*관리 인터페이스 사용자 접근 제어*/
				GOODS_SPEC72 		AS goodsSpec72, 	/*관리자 권한*/
				GOODS_SPEC73 		AS goodsSpec73, 	/*ID 및 인증제어*/
				GOODS_SPEC74 		AS goodsSpec74, 	/*서비스 관리 모델*/
				GOODS_SPEC75 		AS goodsSpec75, 	/*감사정보 제공*/
				GOODS_SPEC76 		AS goodsSpec76, 	/*디바이스 접근 방법*/
				GOODS_SPEC77 		AS goodsSpec77,		/*사용자 교육*/
				FILE_SEQ    		AS fileSeq 
    	   FROM TST_GOOD_SPEC_I AA
				LEFT JOIN TST_GOOD_INFO_I A ON A.GOODS_CODE = AA.GOODS_CODE
				LEFT JOIN (SELECT CNTR_NUM, 
							      GOODS_CODE 
					         FROM TCN_PPS_GOOD_INFO_L
					        GROUP BY CNTR_NUM 
					      ) B 
					   ON AA.GOODS_CODE = B.GOODS_CODE 
				LEFT JOIN OP_USER_ENTRPRS_OPTION  C ON A.USER_ID = C.USER_ID
				LEFT JOIN (SELECT SUBSTR(MAX(SYS_CONNECT_BY_PATH( AA.LANG_CTGRY_NM, ' , ')),3) AS LANG_CTGRY_NM,		
								  GOODS_CODE
							 FROM (SELECT B.LANG_CTGRY_NM AS LANG_CTGRY_NM, 
									      A.GOODS_CODE,
										  ROWNUM  RR
									 FROM TST_GOOD_CATE_I A, 
								  	      TST_CATE_MGMT_M B 
						 			WHERE A.CTGRY_CODE = B.CTGRY_CODE 
						 			  AND A.GOODS_CODE = #{goodsCode} 
								  ) AA
					         START  WITH RR = 1
						CONNECT BY PRIOR RR = RR-1
	   					  GROUP BY GOODS_CODE
				) D ON AA.GOODS_CODE = D.GOODS_CODE
				LEFT JOIN TUM_SVC_STOR_I E ON A.USER_ID = E.USER_ID AND A.LANG_CODE = E.LANG_CODE
				LEFT JOIN (SELECT INDVDLZ_CD, 
								  INDVDLZ_CD_NM 
			 			     FROM OP_CODE_INDVDLZ 
							WHERE GROUP_CD = '1005'
							  AND LANG_CODE = '00'
					      ) F ON F.INDVDLZ_CD = A.GOODS_KND_CD
			WHERE AA.GOODS_CODE = #{goodsCode} 
	       	  AND AA.GOODS_NUM  = (SELECT MAX(GOODS_NUM) FROM TST_GOOD_SPEC_I WHERE goods_code =#{goodsCode} )
    </select>
    
    
    <select id="GoodsKindCode" parameterType="String" resultType="int">
    
    	/*_webGoods.GoodsKindCode*/
    	
    	SELECT GOODS_KND_CD
		  FROM TST_GOOD_INFO_I
		 WHERE GOODS_CODE = #{goodsCode}
    	
    	
    </select>
    
    <select id="GoodsSpecDescribeInfo" parameterType="map" resultType="GoodsSpecDescribeVO">
    
      /* _webGoods.GoodsSpecDescribeInfo */   
      
            SELECT AA.GOODS_CODE                     AS goodsCode                /* 상품코드 */
                  ,A.GOODS_KND_CD                    AS goodsKndCd               /* 상품종류코드(paas 1001 saas 1002 iaas 1003 SCS 1004)*/
                  ,E.LANG_STORE_NM                   AS langStoreNm              /* 공급업체명 */
                  ,B.CNTR_NUM                        AS cntrNum                  /* 계약번호-조달등록번호 */
                  ,C.BIZRNO                          AS bIZrNo                   /* 사업자번호 */
                  ,C.CMPNY_TELNO                     AS cmpnyTelNo               /* 대표전화 */
                  ,A.GOODS_CHARGER_NM                AS goodsChargerNm           /* 담당자 */
                  ,C.CMPNY_EMAIL                     AS cmpnyEmail               /* 대표이메일 */
                  ,A.GOODS_NM                        AS goodsNm                  /* 서비스명 */
                  ,A.REGIST_DT                       AS registDt                 /* 마켓등록일 */
                  ,F.INDVDLZ_CD_NM                   AS indvdlzCdNm              /* 서비스구분* / 
                  ,D.LANG_CTGRY_NM                   AS langCtgryNm              /* 서비스종류*/                   

                  /* 1. 회사 개요 */      
                  ,AA.cmpny_nm                       AS cmpnyNm                  /* 회사 명칭 */
                  ,AA.cmpny_fond_year                AS cmpnyFondYear            /* 회사 설립년도 */
                  ,AA.entrprs_se                     AS entrprsSe                /* 기업 구분 */
                  ,oc2075.INDVDLZ_CD_NM              AS entrprsSeNm              /* 기업 구분 _ 명 */       
                  
                  ,AA.cmpny_intrcn                   AS cmpnyIntrcn              /* 회사 소개*/         
                  ,AA.bsns_realm                     AS bsnsRealm                /* 사업 분야 */       
                  /*  ,AA.main_refer                     AS mainRefer                /* 주요 레퍼런스 (등록 서비스 기준)*/       
                  ,(SELECT goods_refer FROM tst_good_info_i X WHERE X.goods_code = AA.goods_code  ) AS mainRefer

                  
                  /* 2. 서비스 개요 */
                  ,(select AQ.goods_nm from tst_good_info_i AQ where AQ.goods_code = AA.goods_code) AS svcNm                    /* 서비스 명칭 */
                  ,(select AQ.item_Sfe from tst_good_info_i AQ where AQ.goods_code = AA.goods_code) AS svcDfnSfe                /* 서비스 정의 및 특징*/
                  ,(select AQ.goods_Expc_Effect from tst_good_info_i AQ where AQ.goods_code = AA.goods_code) AS svcExpcEffect            /* 서비스 기대효과 */
                  ,AA.svc_ty                         AS svcTy                    /* 서비스 유형 */
                  ,(SELECT AX.indvdlz_cd_nm FROM op_code_indvdlz AX, tst_good_info_i AZ WHERE 1=1 AND AZ.SERVICE_OFFER_METHOD = AX.indvdlz_cd AND AX.group_cd = '2034' AND AZ.goods_code = AA.goods_code) AS svcTyNm /*   서비스 유형 _ 명 * /
                  
                  ,AA.svc_entrprs_suply_ty           AS svcEntrprsSuplyTy        /* 서비스 제공 기업의 공급 유형 */
                  ,oc2055.INDVDLZ_CD_NM              AS svcEntrprsSuplyTyNm      /* 서비스 제공 기업의 공급 유형 _ 명 */
                  
                  ,AA.due_stdr_mumm                  AS dueStdrMumm              /* 과금 기준(최소) */ 
                  ,(SELECT indvdlz_cd_nm FROM tst_good_info_i P,  op_code_indvdlz Q WHERE p.goods_code = AA.goods_code AND P.due_stdr_mumm = Q.indvdlz_cd AND Q.group_cd = '2077') AS dueStdrMummNm            /* 과금 기준(최소) _ 명  */                   
                  
                  ,(select svc_pc from tst_good_info_i W where W.goods_code = AA.goods_code ) AS svcPc                    /* 서비스 가격 */
                  ,decode((select svc_pc_vat from tst_good_info_i W where W.goods_code = AA.goods_code), 'Y', '포함','미포함') AS svcPcVat                    /* 서비스 가격 VAT포함여부 */                  
                  ,AA.svc_pc_unt_cd                  AS svcPcUntCd               /* 서비스 가격 통화단위 코드 */
                  ,(SELECT indvdlz_cd_nm FROM op_code_indvdlz R, tst_good_info_i T WHERE R.indvdlz_cd = T.svc_pc_unt_cd AND T.goods_code = AA.goods_code AND R.group_cd = '2085')  AS svcPcUntCdNm                /* 서비스 가격 통화단위 코드 _ 명*/                  
                  

                  ,(select mumm_cntrctpd from tst_good_info_i W where W.goods_code = AA.goods_code ) AS mummCntrctpd             /* 최소 계약기간 */                  
                  ,decode( (SELECT price_Dn_File_Seq FROM tst_good_info_i VV WHERE VV.goods_code = AA.goods_code), '-1','NO','YES') pcTableAtchAt	/* 가격테이블 첨부 여부 */                  
                  ,AA.vat_incls_at                   AS vatInclsAt               /* VAT포함여부 */
                  ,oc2078.INDVDLZ_CD_NM              AS vatInclsAtNm             /* VAT포함여부 _ 명 */
                  
                  ,AA.svc_begin_procss               AS svcBeginProcss           /* 서비스 시작 절차 */
                  ,AA.svc_end_procss                 AS svcEndProcss             /* 서비스 종료 절차 */
                  ,decode(AA.at_svc_evl,'Y','YES','NO')                    AS atSvcEvl                 /* 서비스 평가판 제공여부 */
                  ,AA.svc_evl_suply_pd               AS svcEvlSuplyPd            /* 서비스 평가판 제공 기간 */
                  ,AA.svc_charger_nm                 AS svcChargerNm             /* 서비스 담당자 이름 */
                  ,AA.svc_charger_telno              AS svcChargerTelno          /* 서비스 담당자 전화번호 */
                  ,AA.svc_charger_email              AS svcChargerEmail          /* 서비스 담당자 이메일 */
                  ,decode((SELECT length(DECODE(BA.gs_crtfc_no,null,'',' ','',BA.gs_crtfc_no)) FROM TST_GOOD_info_i BA WHERE BA.goods_code = AA.goods_code), '0','NO','YES') AS gnrlzSopmalRegistAt /* 나라장터종합쇼핑몰 등록 여부 */                  

                  /* 3. 서비스 기술정보 */
				  ,decode( (SELECT BC.indvdlz_cd FROM TST_GOOD_META_I BC WHERE BC.GOODS_CODE = AA.GOODS_CODE  AND BC.GROUP_CD='2032'  AND BC.indvdlz_cd = '1001'), '1001', 'YES','NO') AS privateCloudAt   /* Private cloud 구축 여부 */
				  ,decode( (SELECT BC.indvdlz_cd FROM TST_GOOD_META_I BC WHERE BC.GOODS_CODE = AA.GOODS_CODE  AND BC.GROUP_CD='2032'  AND BC.indvdlz_cd = '1002'), '1002', 'YES','NO') AS publicCloudAt            /* Public cloud 구축 여부 */
				  ,decode( (SELECT BC.indvdlz_cd FROM TST_GOOD_META_I BC WHERE BC.GOODS_CODE = AA.GOODS_CODE  AND BC.GROUP_CD='2032'  AND BC.indvdlz_cd = '1003'), '1003', 'YES','NO') AS hybridCloudAt            /* Hybrid cloud 구축 여부 */
				  ,(
				  		SELECT AP.file_seq FROM op_file AP
				  		WHERE AP.file_seq = 
				  								(
											  		SELECT 
											  				CRTFC_SE_FILE_SEQ 
											  		FROM 
											  				TST_CTFC_ATCH_I
											  		WHERE crtfc_se_cd = 1004 AND GOODS_CODE = AA.GOODS_CODE
											  	)	
						AND AP.file_ordr_no = 	( SELECT MAX(AQ.file_ordr_no) from op_file AQ WHERE AP.file_seq = AQ.file_seq ) 
				  	)	 AS kisaCrtfcAt		/* 클라우드 보안 인증(KISA) 여부 */		  	            
				  ,(
				  		SELECT AP.file_seq FROM op_file AP
				  		WHERE AP.file_seq = 
				  								(
											  		SELECT 
											  				CRTFC_SE_FILE_SEQ 
											  		FROM 
											  				TST_CTFC_ATCH_I
											  		WHERE crtfc_se_cd = 1007 AND GOODS_CODE = AA.GOODS_CODE
											  	)	
						AND AP.file_ordr_no = 	( SELECT MAX(AQ.file_ordr_no) from op_file AQ WHERE AP.file_seq = AQ.file_seq ) 
				  	)	 AS cloudSvcQlityCrtfcAt		/* 클라우드 서비스 품질 인증 여부 */
                  
                  ,AA.cloud_svc_cnfirm_at            AS cloudSvcCnfirmAt         /* 클라우드 서비스 확인제 여부 */
				  ,(
				  		SELECT AP.file_seq FROM op_file AP
				  		WHERE AP.file_seq = 
				  								(
											  		SELECT 
											  				CRTFC_SE_FILE_SEQ 
											  		FROM 
											  				TST_CTFC_ATCH_I
											  		WHERE crtfc_se_cd = 1001 AND GOODS_CODE = AA.GOODS_CODE
											  	)	
						AND AP.file_ordr_no = 	( SELECT MAX(AQ.file_ordr_no) from op_file AQ WHERE AP.file_seq = AQ.file_seq ) 
				  	)	 AS ccCrtfcAt    /* CC 인증 여부 */              
                  ,AA.gs_crtfc_at                    AS gsCrtfcAt                /* GS 인증 여부 */
                  ,decode(AA.sla_applc_at,'Y','YES','NO')                   AS slaApplcAt               /* SLA 적용 여부 */
                  ,AA.svc_useful                     AS svcUseful                /* 서비스 가용성 */
                  ,decode(AA.atmc_estn_sport_at,'Y','YES','NO')             AS atmcEstnSportAt          /* 자동 확장 지원 여부 */
                  ,decode(AA.clustering_sport_at,'Y','YES','NO')            AS clusteringSportAt        /* 클러스터링 지원 여부 */
                  ,decode(AA.sfsrv_provisioning_sport_at,'Y','YES','NO')    AS sfsrvProvisioningSportAt /* 셀프서비스 프로비저닝 지원 여부 */
                  ,AA.svc_provisioning_time          AS svcProvisioningTime      /* 서비스 프로비저닝 시간 */
                  ,AA.svc_provisioning_relis_time    AS svcProvisioningRelisTime /* 서비스 프로비저닝 해제 시간 */

                  /* 4. 서비스 및 데이터 관리 정보 */
                  ,(SELECT AK.indvdlz_cd_nm FROM op_code_indvdlz AK WHERE 1=1 AND AK.indvdlz_cd = AA.data_cnter_lc_info AND AK.group_cd = '2079') AS dataCnterLcInfoNm         /* 데이터센터 국내, 외 위치 정보명  */
                  ,AA.data_cnter_lc_info             AS dataCnterLcInfo           /* 데이터센터 국내, 외 위치 정보  */

                  ,AA.data_cnter_hbrd_lc_info        AS dataCnterHbrdLcInfo       /* 데이터센터 위치 정보  */
                  ,AA.dsstrrecovry_plan              AS dsstrrecovryPlan          /* 재해복구계획 */
                  ,AA.data_extrc_procss              AS dataExtrcProcss           /* 데이터 추출 절차 */
                  ,AA.unuse_data_prtc_policy         AS unuseDataPrtcPolicy       /* 미사용 데이터 보호 정책 */
                  ,AA.safe_data_delete_policy        AS safeDataDeletePolicy      /* 안전한 데이터 삭제 정책 */
                  ,decode(AA.svc_manage_sttus_info_suply,'Y','YES','NO')    AS svcManageSttusInfoSuply   /* 서비스 관리 및 현황 정보 제공 */
                  ,decode(AA.svc_use_log_suply_at,'Y','YES','NO')           AS svcUseLogSuplyAt          /* 서비스 이용 로그 제공 여부 */
                  ,AA.trobl_manage_reprt_policy      AS troblManageReprtPolicy    /* 장애관리 및 보고 정책 */
                  ,decode(AA.api_sport_at,'Y','YES','NO')                   AS apiSportAt                /* API 지원 여부 */
                  ,AA.api_sport_ty                   AS apiSportTy                /* API 지원 타입 */

                  /* 5. 서비스 지원 정보　 */
                  ,decode(AA.user_mnl_suply_at,'Y','YES','NO')              AS userMnlSuplyAt              /* 사용자 매뉴얼 제공 여부 */
                  ,decode(AA.user_mnl_info_at,'Y','YES','NO')               AS userMnlInfoAt               /* 사용자 매뉴얼 정보 유무  */
                  ,AA.user_mnl_info_input            AS userMnlInfoInput            /* 사용자 매뉴얼 정보  */
                  ,decode(AA.user_edc_sport_at,'Y','YES','NO')              AS userEdcSportAt              /* 사용자 교육 지원 여부 */
                  ,AA.user_edc_sport_input           AS userEdcSportInput           /* 사용자 교육 지원 기타 */
                  ,AA.user_edc_info                  AS userEdcInfo                 /* 사용자 교육 정보 */
                  ,decode(AA.visit_edc_sport_at,'Y','YES','NO')             AS visitEdcSportAt             /* 방문 교육 지원 여부 */
                  ,decode(AA.visit_tchnlgy_sport_at,'Y','YES','NO')         AS visitTchnlgySportAt         /* 방문 기술 지원 여부 */
                  ,decode(AA.visit_else_tchnlgy_sport_at,'Y','YES','NO')    AS visitElseTchnlgySportAt     /* 방문 외(온라인, 이메일, 전화 등) 기술 지원 여부 */
                  ,decode(AA.cstmr_cnter_oper_at,'Y','YES','NO')            AS cstmrCnterOperAt            /* 고객센터 운영 여부 */
                  ,AA.cstmr_cnter_oper_time          AS cstmrCnterOperTime          /* 고객센터 운영 시간 */
                  
                  /* Iaas */
                  ,AA.i_othbc_std_sport_doc          AS iOthbcStdSportDoc           /* 공개표준 지원 및 문서 */
                  ,AA.i_svc_direct_cnnc_ntwrk        AS iSvcDirectCnncNtwrk         /* 서비스에 직접 연결하는 네트워크 */
                  ,AA.i_virtl_ntwrk_sport            AS iVirtlNtwrkSport            /* 가상 네트워크 지원 */
                  ,decode(AA.i_synchrn_sport_at,'Y','YES','NO')             AS iSynchrnSportAt             /* 동기화 지원 여부 */
                  ,AA.i_sport_eqpmn_list             AS iSportEqpmnList             /* 지원 장비 목록 */
                  ,AA.i_server_computer_svc          AS iServerComputerSvc          /* 서버/컴퓨터 서비스 */
                  ,AA.i_strge_svc                    AS iStrgeSvc                   /* 스토리지 서비스 */
                  ,AA.i_ntwrk_svc                    AS iNtwrkSvc                   /* 네트워크 서비스 */
                  ,AA.i_scrty_svc                    AS iScrtySvc                   /* 보안 서비스 */
                  ,AA.i_manage_svc                   AS iManageSvc                  /* 관리 서비스 */
                  ,AA.i_etc_svc                      AS iEtcSvc                     /* 기타 서비스 */                  

                  /* Paas */
                  ,AA.p_secure_devlop                AS pSecureDevlop               /* Secure 개발 */
                  ,AA.p_secure_dct_wdtb              AS pSecureDctWdtb              /* Secure design, coding, testing 및 배포 */
                  ,AA.p_sport_lang                   AS pSportLang                  /* 지원 언어 */
                  ,AA.p_sport_pltfom                 AS pSportPltfom                /* 지원 플랫폼 */
                  ,AA.p_sport_container_ver          AS pSportContainerVer          /* 지원 Container 및 버전 */
                  ,AA.p_sport_data_storge            AS pSportDataStorge            /* 지원 데이터 저장소 */
                  ,decode(AA.p_sub_tenancy_sport_at,'Y','YES','NO')         AS pSubTenancySportAt          /* Sub-tenancy 지원 여부 */
                  ,AA.p_dvlpr_unt_info               AS pDvlprUntInfo               /* 개발자 도구 정보 */
                  ,decode(AA.p_sdk_api_suply_at,'Y','YES','NO')             AS pSdkApiSuplyAt              /* SDK/API 제공 여부 */
                  ,decode(AA.p_test_debuging_sport_at,'Y','YES','NO')       AS pTestDebugingSportAt        /* 테스트 및 디버깅 지원 여부 */
                  ,decode(AA.p_addon_svc_markplace_sport_at,'Y','YES','NO') AS pAddonSvcMarkplaceSportAt   /* Add-on 서비스 및 마켓플레이스 지원 여부 */
                  ,AA.p_cisport_sport                AS pCisportSport               /* CISPORT(Continuous Integration) 지원 */
                  ,AA.p_loging_mntrng_sport          AS pLogingMntrngSport          /* 로깅/모니터링 지원 */
                  ,AA.p_load_balancing_sport         AS pLoadBalancingSport         /* Load Balancing 지원 */

                  /* Saas */
                  ,AA.s_user_svc_suply_mthd          AS sUserSvcSuplyMthd           /* 사용자용 서비스 제공 방식 */
                  ,AA.s_manage_svc_suply_mthd        AS sManageSvcSuplyMthd         /* 관리용 서비스 제공 방식 */
                  ,AA.s_infrstrctr_suply_mthd        AS sInfrstrctrSuplyMthd        /* 인프라 제공 방식 */
                  ,AA.s_scrty_policy                 AS sScrtyPolicy                /* 보안 정책 */
                  ,AA.s_data_encpt_at_mthd           AS sDataEncptAtMthd            /* 데이터 암호화 여부 및 방식 */
                  ,AA.s_backup_recovry_policy        AS sBackupRecovryPolicy        /* 백업 및 복구 정책 */
                  ,AA.s_user_crtfc_scrty_prtc_policy AS sUserCrtfcScrtyPrtcPolicy   /* 사용자 인증 및 보안 보호 정책 */
                  ,decode(AA.s_multi_pltfom_sport_at,'Y','YES','NO')        AS sMultiPltfomSportAt         /* 다중 플랫폼 지원 여부 */
                  ,AA.s_sport_opersysm_list          AS sSportOpersysmList          /* 지원 운영체계 목록 */
                  ,AA.s_sport_wbsr_list              AS sSportWbsrList              /* 지원 웹브라우저 목록 */
                  ,AA.s_sport_mobile_pltfom_list     AS sSportMobilePltfomList      /* 지원 모바일 플랫폼 목록 */
                  ,decode(AA.s_open_std_sport_at,'Y','YES','NO')            AS sOpenStdSportAt             /* 개방형 표준 지원 여부 */
                  ,decode(AA.s_gvrn_frmwrk_sport_at,'Y','YES','NO')         AS sGvrnFrmwrkSportAt          /* 정부 프레임워크 지원 여부 */
                  ,decode(AA.s_open_sourc_sw_at,'Y','YES','NO')             AS sOpenSourcSwAt              /* 오픈소스 SW 호환 여부 */
                  ,decode(AA.s_paasta_at,'Y','YES','NO')                    AS sPaastaAt                   /* PaaS-Ta 호환 여부 */
                  ,decode(AA.s_sourc_othbc_at,'Y','YES','NO')               AS sSourcOthbcAt               /* 소스 공개 여부 */
                  ,decode(AA.s_api_access_sport_at,'Y','YES','NO')          AS sApiAccessSportAt           /* 외부 API ACCESS 지원 여부 */
                  ,decode(AA.s_db_migration_sport_at,'Y','YES','NO')        AS sDbMigrationSportAt         /* DB 마이그레이션 지원 여부 */
                  ,decode(AA.s_extrl_application_sport_at,'Y','YES','NO')   AS sExtrlApplicationSportAt    /* 외부 응용프로그램 통합 지원 여부 */
                  ,decode(AA.s_sub_tenancy_sport_at,'Y','YES','NO')         AS sSubTenancySportAt          /* Sub-tenancy 지원 여부 */
                  ,decode(AA.s_cstmzng_posbl_at,'Y','YES','NO')             AS sCstmzngPosblAt             /* 커스터마이징 가능 여부 */
                  ,AA.s_devlop_sport_etc             AS sDevlopSportEtc             /* 개발지원 조건 및 기타 사항            */

                  /* SCS */
                  ,AA.c_spclty_realm                 AS cSpcltyRealm                /* 전문 분야  */
                  ,AA.c_indc_whole                   AS cIndcWhole                  /* 도입전반  */
                  ,AA.c_setup_mgr                    AS cSetupMgr                   /* setup  migration */
                  ,AA.c_hold_qualf                   AS cHoldQualf                  /* 보유자격  */
                  ,AA.c_hold_tchnlgy                 AS cHoldTchnlgy                /* 보유기술 */
                  ,AA.c_infrstrctr                   AS cInfrstrctr                 /* 컨설팅가능 인프라 */
                  ,AA.c_infrstrctr_etc               AS cInfrstrctrEtc              /* 컨설팅가능 인프라 기타 */
                  ,AA.c_pltfom                       AS cPltfom                     /* 컨설팅가능 플랫폼 */
                  ,AA.c_pltfom_etc                   AS cPltfomEtc                  /* 컨설팅가능 플랫폼 기타 * */
                  ,AA.c_prjct_exprnc                 AS cPrjctExprnc                /* 프로젝트 경험 */
                  ,AA.c_cnsl_relm                    AS cCnslRelm                   /* 컨설팅 영역 */
                  ,AA.c_cnsl_relm_etc                AS cCnslRelmEtc                /* 컨설팅 영역 기타 * */
                  ,AA.c_cnsl_scope                   AS cCnslScope                  /* 컨설팅 범위 */
                  ,AA.c_detail_svc                   AS cDetailSvc                  /* 컨설팅 가능 상세 서비스 */
                  ,AA.c_exc_pd                       AS cExcPd                      /* 수행기간 */
                  ,AA.c_exc_pd_etc                   AS cExcPdEtc                   /* 수행기간 기타 * */
                  ,AA.c_exc_area                     AS cExcArea                    /* 수행가능지역 */
                  ,decode(AA.c_beffat_cnsl_at,'Y','YES','NO')               AS cBeffatCnslAt               /* 사전컨설팅 가능 여부 */
                  ,AA.c_cnsl_pc                      AS cCnslPc                     /* 컨설팅 가격 */


             FROM TST_GOOD_SPEC_DESCRIBE_I AA
             
        LEFT JOIN OP_CODE_INDVDLZ oc2075
               ON oc2075.LANG_CODE = '00'
              AND oc2075.GROUP_CD = 2075
              AND oc2075.INDVDLZ_CD = AA.entrprs_se             
             
        LEFT JOIN OP_CODE_INDVDLZ oc2076
               ON oc2076.LANG_CODE = '00'
              AND oc2076.GROUP_CD = 2076
              AND oc2076.INDVDLZ_CD = AA.svc_ty             
             
        LEFT JOIN OP_CODE_INDVDLZ oc2055
               ON oc2055.LANG_CODE = '00'
              AND oc2055.GROUP_CD = 2055
              AND oc2055.INDVDLZ_CD = AA.svc_entrprs_suply_ty
             
        LEFT JOIN OP_CODE_INDVDLZ oc2077
               ON oc2077.LANG_CODE = '00'
              AND oc2077.GROUP_CD = 2077
              AND oc2077.INDVDLZ_CD = AA.due_stdr_mumm
             
        LEFT JOIN OP_CODE_INDVDLZ oc2085
               ON oc2085.LANG_CODE = '00'
              AND oc2085.GROUP_CD = 2085
              AND oc2085.INDVDLZ_CD = AA.svc_pc_unt_cd
             
        LEFT JOIN OP_CODE_INDVDLZ oc2078
               ON oc2078.LANG_CODE = '00'
              AND oc2078.GROUP_CD = 2078
              AND oc2078.INDVDLZ_CD = AA.vat_incls_at
             
        LEFT JOIN OP_CODE_INDVDLZ oc2079
               ON oc2079.LANG_CODE = '00'
              AND oc2079.GROUP_CD = 2079
              AND oc2079.INDVDLZ_CD = AA.data_cnter_lc_info
             
        LEFT JOIN TST_GOOD_INFO_I A 
               ON A.GOODS_CODE = AA.GOODS_CODE
        LEFT JOIN (SELECT CNTR_NUM, 
                          GOODS_CODE 
                         FROM TCN_PPS_GOOD_INFO_L 
                      GROUP BY CNTR_NUM 
                  )B 
               ON AA.GOODS_CODE = B.GOODS_CODE 
        LEFT JOIN OP_USER_ENTRPRS_OPTION  C 
               ON A.USER_ID = C.USER_ID
        LEFT JOIN (     SELECT SUBSTR(MAX(SYS_CONNECT_BY_PATH( AA.LANG_CTGRY_NM, ' , ')),3) AS LANG_CTGRY_NM
                              ,GOODS_CODE
                          FROM ( SELECT B.LANG_CTGRY_NM AS LANG_CTGRY_NM, 
                                        A.GOODS_CODE,
                                        ROWNUM  RR
                                   FROM TST_GOOD_CATE_I A, 
                                        TST_CATE_MGMT_M B 
                                  WHERE A.CTGRY_CODE = B.CTGRY_CODE 
                                    AND A.GOODS_CODE = #{goodsCode} 
                               ) AA
                    START WITH RR = 1
                    CONNECT BY PRIOR RR = RR-1
                      GROUP BY GOODS_CODE
                  ) D ON AA.GOODS_CODE = D.GOODS_CODE
        LEFT JOIN TUM_SVC_STOR_I E 
               ON A.USER_ID = E.USER_ID
              AND A.LANG_CODE = E.LANG_CODE
        LEFT JOIN (
                    SELECT INDVDLZ_CD, 
                           INDVDLZ_CD_NM 
                      FROM OP_CODE_INDVDLZ 
                     WHERE GROUP_CD = '1005' 
                       AND LANG_CODE = '00'
                  ) F 
               ON F.INDVDLZ_CD = A.GOODS_KND_CD
            WHERE AA.GOODS_CODE = #{goodsCode} 
              AND AA.GOODS_NUM  = (SELECT NVL(MAX(GOODS_NUM),1) FROM TST_GOOD_SPEC_DESCRIBE_I WHERE goods_code =#{goodsCode} )

    </select>

    <select id="goodsSpecNum" parameterType="map" resultType="int">
    	/* _webGoods.goodsSpecNum */
    	  SELECT NVL(MAX(GOODS_NUM), 0) + 1 	as goodsNum
    		FROM TST_GOOD_SPEC_I
    	   WHERE GOODS_CODE = #{goodsCode}
    </select>

    <select id="goodsSpecDescribeNum" parameterType="map" resultType="int">
                	
    	/* _webGoods.goodsSpecDescribeNum */
    	
    	  SELECT NVL(MAX(GOODS_NUM), 0) + 1 AS goodsNum
    		FROM TST_GOOD_SPEC_DESCRIBE_I
    	   WHERE GOODS_CODE = #{goodsCode}
    	   
    </select>
     
    <insert id="inserGoodsSpecExcel" parameterType="map">
    	/* _webGoods.inserGoodsSpecExcel */    	
    	 INSERT INTO TST_GOOD_SPEC_I
            ( 	GOODS_CODE, 
				GOODS_NUM, 
				GOODS_SPEC1, 
				GOODS_SPEC2, 
				GOODS_SPEC3, 
				GOODS_SPEC4, 
				GOODS_SPEC5, 
				GOODS_SPEC6, 
				GOODS_SPEC7, 
				GOODS_SPEC8, 
				GOODS_SPEC9, 
				GOODS_SPEC10, 
				GOODS_SPEC11, 
				GOODS_SPEC12, 
				GOODS_SPEC13, 
				GOODS_SPEC14, 
				GOODS_SPEC15, 
				GOODS_SPEC16, 
				GOODS_SPEC17, 
				GOODS_SPEC18, 
				GOODS_SPEC19, 
				GOODS_SPEC20, 
				GOODS_SPEC21, 
				GOODS_SPEC22, 
				GOODS_SPEC23, 
				GOODS_SPEC24, 
				GOODS_SPEC25, 
				GOODS_SPEC26, 
				GOODS_SPEC27, 
				GOODS_SPEC28, 
				GOODS_SPEC29, 
				GOODS_SPEC30, 
				GOODS_SPEC31, 
				GOODS_SPEC32, 
				GOODS_SPEC33, 
				GOODS_SPEC34, 
				GOODS_SPEC35, 
				GOODS_SPEC36, 
				GOODS_SPEC37, 
				GOODS_SPEC38, 
				GOODS_SPEC39, 
				GOODS_SPEC40, 
				GOODS_SPEC41, 
				GOODS_SPEC42, 
				GOODS_SPEC43, 
				GOODS_SPEC44, 
				GOODS_SPEC45, 
				GOODS_SPEC46, 
				GOODS_SPEC47, 
				GOODS_SPEC48, 
				GOODS_SPEC49, 
				GOODS_SPEC50, 
				GOODS_SPEC51, 
				GOODS_SPEC52, 
				GOODS_SPEC53, 
				GOODS_SPEC54, 
				GOODS_SPEC55, 
				GOODS_SPEC56, 
				GOODS_SPEC57, 
				GOODS_SPEC58, 
				GOODS_SPEC59, 
				GOODS_SPEC60, 
				GOODS_SPEC61, 
				GOODS_SPEC62, 
				GOODS_SPEC63, 
				GOODS_SPEC64, 
				GOODS_SPEC65, 
				GOODS_SPEC66, 
				GOODS_SPEC67, 
				GOODS_SPEC68, 
				GOODS_SPEC69, 
				GOODS_SPEC70, 
				GOODS_SPEC71, 
				GOODS_SPEC72, 
				GOODS_SPEC73, 
				GOODS_SPEC74, 
				GOODS_SPEC75, 
				GOODS_SPEC76, 
				GOODS_SPEC77, 
				USER_ID,
				GOODS_ENTR_DATE 
              )
	  VALUES(	#{goodsCode}, 
				#{goodsNum}, 
				#{goodsSpec1}, 
				#{goodsSpec2}, 
				#{goodsSpec3}, 
				#{goodsSpec4}, 
				#{goodsSpec5}, 
				#{goodsSpec6}, 
				#{goodsSpec7}, 
				#{goodsSpec8}, 
				#{goodsSpec9}, 
				#{goodsSpec10}, 
				#{goodsSpec11}, 
				#{goodsSpec12}, 
				#{goodsSpec13}, 
				#{goodsSpec14}, 
				#{goodsSpec15}, 
				#{goodsSpec16}, 
				#{goodsSpec17}, 
				#{goodsSpec18}, 
				#{goodsSpec19}, 
				#{goodsSpec20}, 
				#{goodsSpec21}, 
				#{goodsSpec22}, 
				#{goodsSpec23}, 
				#{goodsSpec24}, 
				#{goodsSpec25}, 
				#{goodsSpec26}, 
				#{goodsSpec27}, 
				#{goodsSpec28}, 
				#{goodsSpec29}, 
				#{goodsSpec30}, 
				#{goodsSpec31}, 
				#{goodsSpec32}, 
				#{goodsSpec33}, 
				#{goodsSpec34}, 
				#{goodsSpec35}, 
				#{goodsSpec36}, 
				#{goodsSpec37}, 
				#{goodsSpec38}, 
				#{goodsSpec39}, 
				#{goodsSpec40}, 
				#{goodsSpec41}, 
				#{goodsSpec42}, 
				#{goodsSpec43}, 
				#{goodsSpec44}, 
				#{goodsSpec45}, 
				#{goodsSpec46}, 
				#{goodsSpec47}, 
				#{goodsSpec48}, 
				#{goodsSpec49}, 
				#{goodsSpec50}, 
				#{goodsSpec51}, 
				#{goodsSpec52}, 
				#{goodsSpec53}, 
				#{goodsSpec54}, 
				#{goodsSpec55}, 
				#{goodsSpec56}, 
				#{goodsSpec57}, 
				#{goodsSpec58}, 
				#{goodsSpec59}, 
				#{goodsSpec60}, 
				#{goodsSpec61}, 
				#{goodsSpec62}, 
				#{goodsSpec63}, 
				#{goodsSpec64}, 
				#{goodsSpec65}, 
				#{goodsSpec66}, 
				#{goodsSpec67}, 
				#{goodsSpec68}, 
				#{goodsSpec69}, 
				#{goodsSpec70}, 
				#{goodsSpec71}, 
				#{goodsSpec72}, 
				#{goodsSpec73}, 
				#{goodsSpec74}, 
				#{goodsSpec75}, 
				#{goodsSpec76}, 
				#{goodsSpec77}, 
				#{userId}, 
				SYSDATETIME	
         )
    </insert>
    
    
    
    <insert id="inserGoodsSpecDescribe" parameterType="GoodsSpecDescribeVO">
    	/* _webGoods.inserGoodsSpecDescribe */
        INSERT INTO tst_good_spec_describe_i
                SET   goods_code                      = #{goodsCode}                	/*상품코드*/
                	, goods_num                       = #{goodsNum}                 	/*상품순번*/
                	, svc_nm                          = #{svcNm}                    	/*서비스명*/
					, due_stdr_mumm                   = #{dueStdrMumm}              	/*과금 기준(최소)*/
					, svc_pc                          = #{svcPc}                    	/*서비스 가격*/
					, svc_pc_vat                      = #{svcPcVat}                 	/*서비스 가격 VAT포함여부*/
					, svc_pc_unt_cd                   = #{svcPcUntCd}               	/*서비스 가격 통화단위  (GROUP_CD = '2085')*/
					, mumm_cntrctpd                   = #{mummCntrctpd}             	/*최소 계약기간*/
					, cmpny_nm                        = #{cmpnyNm}                  	/*회사 명칭*/
					, cmpny_fond_year                 = #{cmpnyFondYear}            	/*회사 설립년도*/
					, entrprs_se                      = #{entrprsSe}                	/*기업 구분*/
					, cmpny_intrcn                    = #{cmpnyIntrcn}              	/*회사 소개*/
					, bsns_realm                      = #{bsnsRealm}                	/*사업 분야*/
					, main_refer                      = #{mainRefer}                	/*주요 레퍼런스 (등록 서비스 기준)*/
					, svc_dfn_sfe                     = #{svcDfnSfe}                	/*서비스 정의 및 특징*/
					, svc_expc_effect                 = #{svcExpcEffect}            	/*서비스 기대효과*/
					, svc_ty                          = #{svcTy}                    	/*서비스 구분*/
					, svc_entrprs_suply_ty            = #{svcEntrprsSuplyTy}        	/*서비스 제공 기업의 공급 유형*/
					, pc_table_atch_at                = #{pcTableAtchAt}            	/*가격테이블 첨부 여부*/
					, vat_incls_at                    = #{vatInclsAt}               	/*VAT포함여부*/
					, svc_begin_procss                = #{svcBeginProcss}           	/*서비스 시작 절차*/
					, svc_end_procss                  = #{svcEndProcss}             	/*서비스 종료 절차*/
					, at_svc_evl                      = #{atSvcEvl}                 	/*서비스 평가판 제공여부*/
					, svc_evl_suply_pd                = #{svcEvlSuplyPd}            	/*서비스 평가판 제공 기간*/
					, svc_charger_nm                  = #{svcChargerNm}             	/*서비스 담당자 이름*/
					, svc_charger_cttpc               = #{svcChargerCttpc}				/*국가번호*/
					, svc_charger_telno               = #{svcChargerTelno}          	/*서비스 담당자 전화번호*/
					, svc_charger_email               = #{svcChargerEmail}          	/*서비스 담당자 이메일*/
					, svc_charger_mbtl_num            = #{svcChargerMbtlNum}        	/*서비스 담당자 휴대폰*/
					, gnrlz_sopmal_regist_at          = #{gnrlzSopmalRegistAt}      	/*나라장터종합쇼핑몰 등록 여부*/
					, private_cloud_at                = #{privateCloudAt}           	/*Private cloud 구축 여부*/
					, public_cloud_at                 = #{publicCloudAt}            	/*Public cloud 구축 여부*/
					, hybrid_cloud_at                 = #{hybridCloudAt}            	/*Hybrid cloud 구축 여부*/
					, kisa_crtfc_at                   = #{kisaCrtfcAt}              	/*클라우드 보안 인증(KISA) 여부*/
					, cloud_svc_qlity_crtfc_at        = #{cloudSvcQlityCrtfcAt}     	/*클라우드 서비스 품질 인증 여부*/
					, cloud_svc_cnfirm_at             = #{cloudSvcCnfirmAt}         	/*클라우드 서비스 확인제 여부*/
					, cc_crtfc_at                     = #{ccCrtfcAt}                	/*CC 인증 여부*/
					, gs_crtfc_at                     = #{gsCrtfcAt}                	/*GS 인증 여부*/
					, sla_applc_at                    = #{slaApplcAt}               	/*SLA 적용 여부*/
					, svc_useful                      = #{svcUseful}                	/*서비스 가용성*/
					, atmc_estn_sport_at              = #{atmcEstnSportAt}          	/*자동 확장 지원 여부*/
					, clustering_sport_at             = #{clusteringSportAt}        	/*클러스터링 지원 여부*/
					, sfsrv_provisioning_sport_at     = #{sfsrvProvisioningSportAt} 	/*셀프서비스 프로비저닝 지원 여부*/
					, svc_provisioning_time           = #{svcProvisioningTime}      	/*서비스 프로비저닝 시간*/
					, svc_provisioning_relis_time     = #{svcProvisioningRelisTime} 	/*서비스 프로비저닝 해제 시간*/
					, data_cnter_lc_info              = #{dataCnterLcInfo}          	/*데이터센터 국내, 외 위치 정보*/
					, data_cnter_hbrd_lc_info         = #{dataCnterHbrdLcInfo}      	/*데이터센터 위치 정보*/
					, dsstrrecovry_plan               = #{dsstrrecovryPlan}         	/*재해복구계획*/
					, data_extrc_procss               = #{dataExtrcProcss}          	/*데이터 추출 절차*/
					, unuse_data_prtc_policy          = #{unuseDataPrtcPolicy}      	/*미사용 데이터 보호 정책*/
					, safe_data_delete_policy         = #{safeDataDeletePolicy}     	/*안전한 데이터 삭제 정책*/
					, svc_manage_sttus_info_suply     = #{svcManageSttusInfoSuply}  	/*서비스 관리 및 현황 정보 제공*/
					, svc_use_log_suply_at            = #{svcUseLogSuplyAt}         	/*서비스 이용 로그 제공 여부*/
					, trobl_manage_reprt_policy       = #{troblManageReprtPolicy}   	/*장애관리 및 보고 정책*/
					, api_sport_at                    = #{apiSportAt}               	/*API 지원 여부*/
					, api_sport_ty                    = #{apiSportTy}               	/*API 지원 타입*/
					, user_mnl_suply_at               = #{userMnlSuplyAt}           	/*사용자 매뉴얼 제공 여부*/
					, user_mnl_info_at                = #{userMnlInfoAt}            	/*사용자 매뉴얼 정보 유무*/
					, user_mnl_info_input             = #{userMnlInfoInput}         	/*사용자 매뉴얼 정보 입력*/
					, user_edc_sport_at               = #{userEdcSportAt}           	/*사용자 교육 지원 여부*/
					, user_edc_info                   = #{userEdcInfo}              	/*사용자 교육 정보*/
					, visit_edc_sport_at              = #{visitEdcSportAt}          	/*방문 교육 지원 여부*/
					, visit_tchnlgy_sport_at          = #{visitTchnlgySportAt}      	/*방문 기술 지원 여부*/
					, visit_else_tchnlgy_sport_at     = #{visitElseTchnlgySportAt}  	/*방문 외(온라인, 이메일, 전화 등) 기술 지원 여부*/
					, cstmr_cnter_oper_at             = #{cstmrCnterOperAt}         	/*고객센터 운영 여부*/
					, cstmr_cnter_oper_time           = #{cstmrCnterOperTime}       	/*고객센터 운영 시간*/
					, i_othbc_std_sport_doc           = #{iOthbcStdSportDoc}        	/*공개표준 지원 및 문서*/
					, i_svc_direct_cnnc_ntwrk         = #{iSvcDirectCnncNtwrk}      	/*서비스에 직접 연결하는 네트워크*/
					, i_virtl_ntwrk_sport             = #{iVirtlNtwrkSport}         	/*가상 네트워크 지원*/
					, i_synchrn_sport_at              = #{iSynchrnSportAt}          	/*동기화 지원 여부*/
					, i_sport_eqpmn_list              = #{iSportEqpmnList}          	/*지원 장비 목록*/
					, i_server_computer_svc           = #{iServerComputerSvc}       	/*서버/컴퓨터 서비스*/
					, i_strge_svc                     = #{iStrgeSvc}                	/*스토리지 서비스*/
					, i_ntwrk_svc                     = #{iNtwrkSvc}                	/*네트워크 서비스*/
					, i_scrty_svc                     = #{iScrtySvc}                	/*보안 서비스*/
					, i_manage_svc                    = #{iManageSvc}               	/*관리 서비스*/
					, i_etc_svc                       = #{iEtcSvc}                  	/*기타 서비스*/
					, p_secure_devlop                 = #{pSecureDevlop}            	/*Secure 개발*/
					, p_secure_dct_wdtb               = #{pSecureDctWdtb}           	/*Secure design, coding, testing 및 배포*/
					, p_sport_lang                    = #{pSportLang}               	/*지원 언어*/
					, p_sport_pltfom                  = #{pSportPltfom}             	/*지원 플랫폼*/
					, p_sport_container_ver           = #{pSportContainerVer}       	/*지원 Container 및 버전*/
					, p_sport_data_storge             = #{pSportDataStorge}         	/*지원 데이터 저장소*/
					, p_sub_tenancy_sport_at          = #{pSubTenancySportAt}       	/*Sub-tenancy 지원 여부*/
					, p_dvlpr_unt_info                = #{pDvlprUntInfo}            	/*개발자 도구 정보*/
					, p_sdk_api_suply_at              = #{pSdkApiSuplyAt}           	/*SDK/API 제공 여부*/
					, p_test_debuging_sport_at        = #{pTestDebugingSportAt}     	/*테스트 및 디버깅 지원 여부*/
					, p_addon_svc_markplace_sport_at  = #{pAddonSvcMarkplaceSportAt}	/*Add-on 서비스 및 마켓플레이스 지원 여부*/
					, p_cisport_sport                 = #{pCisportSport}            	/*CISPORT(Continuous Integration) 지원*/
					, p_loging_mntrng_sport           = #{pLogingMntrngSport}       	/*로깅/모니터링 지원*/
					, p_load_balancing_sport          = #{pLoadBalancingSport}      	/*Load Balancing 지원*/
					, s_user_svc_suply_mthd           = #{sUserSvcSuplyMthd}        	/*사용자용 서비스 제공 방식*/
					, s_manage_svc_suply_mthd         = #{sManageSvcSuplyMthd}      	/*관리용 서비스 제공 방식*/
					, s_infrstrctr_suply_mthd         = #{sInfrstrctrSuplyMthd}     	/*인프라 제공 방식*/
					, s_scrty_policy                  = #{sScrtyPolicy}             	/*보안 정책*/
					, s_data_encpt_at_mthd            = #{sDataEncptAtMthd}         	/*데이터 암호화 여부 및 방식*/
					, s_backup_recovry_policy         = #{sBackupRecovryPolicy}     	/*백업 및 복구 정책*/
					, s_user_crtfc_scrty_prtc_policy  = #{sUserCrtfcScrtyPrtcPolicy}	/*사용자 인증 및 보안 보호 정책*/
					, s_multi_pltfom_sport_at         = #{sMultiPltfomSportAt}      	/*다중 플랫폼 지원 여부*/
					, s_sport_opersysm_list           = #{sSportOpersysmList}       	/*지원 운영체계 목록*/
					, s_sport_wbsr_list               = #{sSportWbsrList}           	/*지원 웹브라우저 목록*/
					, s_sport_mobile_pltfom_list      = #{sSportMobilePltfomList}   	/*지원 모바일 플랫폼 목록*/
					, s_open_std_sport_at             = #{sOpenStdSportAt}          	/*개방형 표준 지원 여부*/
					, s_gvrn_frmwrk_sport_at          = #{sGvrnFrmwrkSportAt}       	/*정부 프레임워크 지원 여부*/
					, s_open_sourc_sw_at              = #{sOpenSourcSwAt}           	/*오픈소스 SW 호환 여부*/
					, s_paasta_at                     = #{sPaastaAt}                	/*PaaS-Ta 호환 여부*/
					, s_sourc_othbc_at                = #{sSourcOthbcAt}            	/*소스 공개 여부*/
					, s_api_access_sport_at           = #{sApiAccessSportAt}        	/*외부 API ACCESS 지원 여부*/
					, s_db_migration_sport_at         = #{sDbMigrationSportAt}      	/*DB 마이그레이션 지원 여부*/
					, s_extrl_application_sport_at    = #{sExtrlApplicationSportAt} 	/*외부 응용프로그램 통합 지원 여부*/
					, s_sub_tenancy_sport_at          = #{sSubTenancySportAt}       	/*Sub-tenancy 지원 여부*/
					, s_cstmzng_posbl_at              = #{sCstmzngPosblAt}          	/*커스터마이징 가능 여부*/
					, s_devlop_sport_etc              = #{sDevlopSportEtc}          	/*개발지원 조건 및 기타 사항*/
					, entr_date                       = SYSDATETIME                 	/*생성일시*/
					, user_id                         = #{userId}                   	/*로그인아이디*/
					, c_spclty_realm                  = #{cSpcltyRealm}             	/*전문 분야*/
					, c_indc_whole                    = #{cIndcWhole}               	/*도입전반*/
					, c_setup_mgr                     = #{cSetupMgr}                	/*setup N migration*/
					, c_hold_qualf                    = #{cHoldQualf}               	/*보유자격*/
					, c_hold_tchnlgy                  = #{cHoldTchnlgy}             	/*보유기술*/
					, c_infrstrctr                    = #{cInfrstrctr}              	/*컨설팅가능 인프라*/
					, c_infrstrctr_etc                = #{cInfrstrctrEtc}           	/*컨설팅가능 인프라 기타*/
					, c_pltfom                        = #{cPltfom}                  	/*컨설팅가는 플랫폼*/
					, c_prjct_exprnc                  = #{cPrjctExprnc}             	/*프로젝트 경험*/
					, c_cnsl_relm                     = #{cCnslRelm}                	/*컨설팅 영역*/
					, c_cnsl_scope                    = #{cCnslScope}               	/*컨설팅 범위*/
					, c_detail_svc                    = #{cDetailSvc}               	/*컨설팅 가능 상세 서비스*/
					, c_exc_pd                        = #{cExcPd}                   	/*수행기간*/
					, c_exc_area                      = #{cExcArea}                 	/*수행가능지역*/
					, c_beffat_cnsl_at                = #{cBeffatCnslAt}            	/*사전컨설팅 가능 여부*/
					, c_cnsl_pc                       = 0                  				/*컨설팅 가격*/
					, c_pltfom_etc                    = #{cPltfomEtc}               	/*컨설팅가는 플랫폼 기타*/
					, c_cnsl_relm_etc                 = #{cCnslRelmEtc}             	/*컨설팅 영역 기타*/
					, c_exc_pd_etc                    = #{cExcPdEtc}                	/*수행기간 기타*/
					, save_step                       = #{step}                     	/*저장단계(11:1단계/10: 1단계임시저장/21:2단계/20: 2단계임시저장/31:3단계/30: 3단계임시저장/41:4단계/40: 4단계임시저장)*/
					, goods_entr_date                 = SYSDATETIME						/*등록일*/
					, goods_use						  = 'Y'								/*사용여부*/
    </insert>
    
    <update id="updateExcelSeq" parameterType="GoodsSpecVO">
	/* _webGoods.updateExcelSeq */
		<![CDATA[
		 UPDATE TST_GOOD_SPEC_I SET
				file_seq 	= #{fileSeq}
		  WHERE GOODS_CODE 	= #{goodsCode} 
			AND GOODS_NUM 	= #{goodsNum} 
		]]>
	</update>
	
	
	<insert id="insertChangeAction" parameterType="goodsVO">
    /* _webGoods.reasonAction */
        <selectKey order="BEFORE" keyProperty="exmntConfmHistSn" resultType="int">
            SELECT NVL(MAX(EXMNT_CONFM_HIST_SN), 0) + 1 FROM TST_EXMN_CNFM_H WHERE GOODS_CODE = #{goodsCode}
        </selectKey>
        INSERT INTO TST_EXMN_CNFM_H
        (   GOODS_CODE
          , EXMNT_CONFM_HIST_SN
          , EXMNT_CONFM_CD
          , RETURN_RESN
          , GOODS_BEFORE_PC
          , GOODS_CHNG_PC
          , GOODS_CHNG_FILE
        ) VALUES(
            #{goodsCode}
          , #{exmntConfmHistSn}
          , #{exmntConfmCd}
          , #{returnResn}
          , #{goodsBeforPc}
          , #{goodsChngPc}
          , #{goodsChngSeq}
        )
    </insert>
    
    <insert id="insertSvcChangeRequstAction" parameterType="goodsVO">
    	/* _webGoods.insertSvcChangeRequstAction */
        <selectKey order="BEFORE" keyProperty="exmntConfmHistSn" resultType="int">
            SELECT NVL(MAX(EXMNT_CONFM_HIST_SN), 0) + 1 FROM TST_EXMN_CNFM_H WHERE GOODS_CODE = #{goodsCode}
        </selectKey>
        INSERT INTO TST_EXMN_CNFM_H
        (   GOODS_CODE 
          , EXMNT_CONFM_HIST_SN
          , EXMNT_CONFM_CD
          , RETURN_RESN
          , GOODS_BEFORE_PC
          , GOODS_CHNG_PC
          , GOODS_CHNG_FILE
          , REQU_ID
		  , REQU_DT
          , REQUST_SE
          , REQUST_RESN
          , REQUST_PROCESS_AT
          , DSPY_CNVRS_PREARNGE_DT
        ) VALUES(
            #{goodsCode}
          , #{exmntConfmHistSn}
          , #{exmntConfmCd}
          , #{returnResn}
          , #{goodsBeforPc}
          , #{goodsChngPc}
          , #{goodsChngSeq}
          , #{userId}
          , SYSDATETIME
          , #{requstSe}
          , #{requstResn}
          , 'N'
          , #{dspyCnvrsPrearngeDt}
        )
    </insert>
        
	<update id="updateChangeAction" parameterType="goodsVO">
     /* _webGoods.updateChangeAction */
         UPDATE  TST_EXMN_CNFM_H
           SET  GOODS_CHNG_FILE =  #{goodsChngSeq}, /*변경사유첨부문서*/
           	    GOODS_CHNG_PC	=  #{goodsChngPc},  /*변경가격*/
           	    GOODS_BEFORE_PC	=  #{goodsPc}       /*이전가격*/
         WHERE GOODS_CODE 		= #{goodsCode}
           AND EXMNT_CONFM_CD 	= #{exmntConfmCd}
    </update>

    <select id="getPassYn" parameterType="map" resultType="int">
      SELECT COUNT(*) AS CNT         
        FROM TST_GOOD_SPEC_DESCRIBE_I GSD 
       WHERE GSD.GOODS_CODE = #{GoodsCode}
       AND GSD.GOODS_NUM = (					
							SELECT MAX(GOODS_NUM)
							FROM TST_GOOD_SPEC_DESCRIBE_I 
    						WHERE GOODS_CODE = #{GoodsCode}
    					   )        
	</select>
    <select id="getPassYnUpdate" parameterType="map" resultType="int">
      SELECT COUNT(*) AS CNT         
        FROM TST_GOOD_SPEC_DESCRIBE_I_TMP GSD 
       WHERE GSD.GOODS_CODE = #{GoodsCode}
       AND GSD.GOODS_NUM = (					
							SELECT MAX(GOODS_NUM)
							FROM TST_GOOD_SPEC_DESCRIBE_I_TMP 
    						WHERE GOODS_CODE = #{GoodsCode}
    					   )        
	</select>

    <select id="goodsInfo" parameterType="map" resultType="map">
    
    /*_webGoods.goodsInfo*/

      SELECT GI.GOODS_CODE                       AS goodsCode
            ,GI.USER_ID                          AS userId
            ,GI.LANG_CODE                        AS langCode
            ,GI.GOODS_KND_CD                     AS goodsKndCd
            ,DECODE(GI.GOODS_KND_CD,'1001','Paas','1002','Saas','1003','Iaas','1004','SCS')                     AS goodsKndNm            
            ,GI.GOODS_NM                         AS goodsNm
            ,GI.GOODS_VER_INFO                   AS goodsVerInfo
            ,GI.GOODS_HMPG_URL                   AS goodsHmpgUrl
            ,GI.GOODS_SUMRY                      AS goodsSumry
            ,GI.GOODS_MAIN_FNCT                  AS goodsMainFnct
            ,GI.CNSL_EXPC_EFFECT                 AS cnslExpcEffect
            ,GI.GOODS_REFER                      AS goodsRefer
            ,GI.GOODS_DWLD_URL                   AS goodsDwldUrl
            ,GI.SLE_MTHD_CD                      AS sleMthdCd
            ,GI.GOODS_FILE_SEQ                   AS goodsFileSeq
            ,GI.DEMO_EXPRN_URL                   AS demoExprnUrl
            ,GI.SPCLTY_REALM                     AS spcltyRealm
            ,GI.CNSTNT_CO                        AS cnstntCo
            ,GI.GOODS_IMAGE_FILE_SEQ             AS goodsImageFileSeq
            ,(SELECT LIST((SELECT file_url FROM op_file WHERE file_seq =  GI.GOODS_IMAGE_FILE_SEQ) ORDER BY file_ordr_no)) AS goodsImageFileUrl
            ,GI.GOODS_MNL_FILE_SEQ               AS goodsMnlFileSeq
            ,GI.COMOU_DE                         AS comouDe
            ,GI.GOODS_MAKR                       AS goodsMakr
            ,GI.GOODS_PC                         AS goodsPc
            ,GI.GOODS_LICENCE_CD                 AS goodsLicenceCd
            ,GI.GOODS_LICENCE_CN                 AS goodsLicenceCn
            ,GI.ARCHTC_SE                        AS archtcSe
            ,GI.GOODS_CHARGER_NM                 AS goodsChargerNm
            ,GI.GOODS_CHARGER_EMAIL              AS goodsChargerEmail
            ,GI.GOODS_CHARGER_CTTPC              AS goodsChargerCttpc
            ,GI.GOODS_CHARGER_MBTLNUM            AS goodsChargerMbtlnum
            ,GI.GOODS_REGIST_STTUS               AS goodsRegistSttus
            ,GI.GOODS_ACTVTY_AT                  AS goodsActvtyAt
            ,GI.REGIST_ID                        AS registId
            ,GI.REGIST_DT                        AS registDt
            ,GI.UPDT_ID                          AS updtId
            ,GI.UPDT_DT                          AS updtDt
            ,GI.CONFM_DT                         AS confmDt
            ,GI.GOODS_RDCNT                      AS goodsRdcnt
            ,GI.MNGR_DELETE_AT                   AS mngrDeleteAt
            ,GI.DELETE_MNGR_DEPT_CODE            AS deleteMngrDeptCode
            ,GI.DELETE_MNGR_ID                   AS deleteMngrId
            ,GI.CNTC_INSTT_CD                    AS cntcInsttCd
            ,GI.CMPNY_NM                         AS cmpnyNm
            ,GI.UNIT_PRICE                       AS unitPrice
            ,GI.ORGPLCE                          AS orgplce
            ,GI.CNTRCT_NO                        AS cntrctNo
            ,GI.LOCPLC_HEDOFC                    AS locplcHedofc
            ,GI.PRICE_CHK                        AS priceChk
            ,GI.LOCPLC_IT                        AS locplcIt
            ,GI.ITEM_VOD_URL                     AS itemVodUrl
            ,GI.ITEM_DN_FILE_SEQ                 AS itemDnFileSeq                                                                                /* 기타 첨부파일 (5개) 파일 seq */
            ,(SELECT LIST((SELECT file_ordr_no    FROM OP_FILE WHERE file_seq = GI.ITEM_DN_FILE_SEQ) ORDER BY file_ordr_no)) AS itemDnFileOrdrNo /* 기타 첨부파일 (5개) 파일 ordrNo */
            ,(SELECT LIST((SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GI.ITEM_DN_FILE_SEQ) ORDER BY file_ordr_no)) AS itemDnFileNm     /* 기타 첨부파일 (5개) 파일 파일명 */
            ,GI.MNL_DN_FILE_SEQ                  AS mnlDnFileSeq
            ,(SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GI.MNL_DN_FILE_SEQ) AS mnlDnFileNm
            ,GI.FRAME_CHK                        AS frameChk
            ,GI.GTWOB_CHK                        AS gtwobChk
            ,GI.ITEM_SFE                         AS itemSfe
            ,GI.SMLPZ_CHK                        AS smlpzChk
            ,GI.DELNG_STOP_CHK                   AS delngStopChk
            ,GI.ORDER_INTRCP_CHK                 AS orderIntrcpChk
            ,GI.ITEM_IMG_URL                     AS itemImgUrl
            ,GI.GTWOB_NUMBER                     AS gtwobNumber
            ,GI.PRICE_DN_FILE_SEQ                AS priceDnFileSeq
            ,(SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GI.PRICE_DN_FILE_SEQ) AS priceDnFileNm
            ,(SELECT file_id FROM OP_FILE WHERE file_seq = GI.PRICE_DN_FILE_SEQ) AS priceDnFileId
            ,GI.GOODS_MONITOR_URL                AS goodsMonitorUrl
            ,GI.SERVICE_OFFER_METHOD             AS serviceOfferMethod
            ,GI.UPDT_STAT                        AS updtStat
            ,GI.UPDT_CHNG_FILE                   AS updtChngFile
            ,GI.CSTMR_INFO                       AS cstmrInfo
            ,GI.GOODS_EXPC_EFFECT                AS goodsExpcEffect
            ,GI.GS_CRTFC_NO                      AS gsCrtfcNo
            ,GI.NARA_CRTFC_NO                    AS naraCrtfcNo
            ,GI.IS_MARK				 			 AS isMark            
            
	        
            ,GI.SVC_PC				 		 	 AS svcPc
            ,GI.SVC_PC_VAT				 		 AS svcPcVat
            ,GI.SVC_PC_UNT_CD				 	 AS svcPcUntCd
            ,GI.MUMM_CNTRCTPD				 	 AS mummCntrctpd
            ,GI.DUE_STDR_MUMM				 	 AS dueStdrMumm
            
            
        FROM TST_GOOD_INFO_I GI 
       WHERE GI.GOODS_CODE = #{GoodsCode}   
    	
    </select>
    <select id="goodsInfoTmp" parameterType="map" resultType="map">
    
    /*_webGoods.goodsInfoTmp*/

      SELECT GI.GOODS_CODE                       AS goodsCode
            ,GI.USER_ID                          AS userId
            ,GI.LANG_CODE                        AS langCode
            ,GI.GOODS_KND_CD                     AS goodsKndCd
            ,DECODE(GI.GOODS_KND_CD,'1001','Paas','1002','Saas','1003','Iaas','1004','SCS')                     AS goodsKndNm            
            ,GI.GOODS_NM                         AS goodsNm
            ,GI.GOODS_VER_INFO                   AS goodsVerInfo
            ,GI.GOODS_HMPG_URL                   AS goodsHmpgUrl
            ,GI.GOODS_SUMRY                      AS goodsSumry
            ,GI.GOODS_MAIN_FNCT                  AS goodsMainFnct
            ,GI.CNSL_EXPC_EFFECT                 AS cnslExpcEffect
            ,GI.GOODS_REFER                      AS goodsRefer
            ,GI.GOODS_DWLD_URL                   AS goodsDwldUrl
            ,GI.SLE_MTHD_CD                      AS sleMthdCd
            ,GI.GOODS_FILE_SEQ                   AS goodsFileSeq
            ,GI.DEMO_EXPRN_URL                   AS demoExprnUrl
            ,GI.SPCLTY_REALM                     AS spcltyRealm
            ,GI.CNSTNT_CO                        AS cnstntCo
            ,GI.GOODS_IMAGE_FILE_SEQ             AS goodsImageFileSeq
            ,(SELECT LIST((SELECT file_url FROM op_file WHERE file_seq =  GI.GOODS_IMAGE_FILE_SEQ) ORDER BY file_ordr_no)) AS goodsImageFileUrl
            ,GI.GOODS_MNL_FILE_SEQ               AS goodsMnlFileSeq
            ,GI.COMOU_DE                         AS comouDe
            ,GI.GOODS_MAKR                       AS goodsMakr
            ,GI.GOODS_PC                         AS goodsPc
            ,GI.GOODS_LICENCE_CD                 AS goodsLicenceCd
            ,GI.GOODS_LICENCE_CN                 AS goodsLicenceCn
            ,GI.ARCHTC_SE                        AS archtcSe
            ,GI.GOODS_CHARGER_NM                 AS goodsChargerNm
            ,GI.GOODS_CHARGER_EMAIL              AS goodsChargerEmail
            ,GI.GOODS_CHARGER_CTTPC              AS goodsChargerCttpc
            ,GI.GOODS_CHARGER_MBTLNUM            AS goodsChargerMbtlnum
            ,GI.GOODS_REGIST_STTUS               AS goodsRegistSttus
            ,GI.GOODS_ACTVTY_AT                  AS goodsActvtyAt
            ,GI.REGIST_ID                        AS registId
            ,GI.REGIST_DT                        AS registDt
            ,GI.UPDT_ID                          AS updtId
            ,GI.UPDT_DT                          AS updtDt
            ,GI.CONFM_DT                         AS confmDt
            ,GI.GOODS_RDCNT                      AS goodsRdcnt
            ,GI.MNGR_DELETE_AT                   AS mngrDeleteAt
            ,GI.DELETE_MNGR_DEPT_CODE            AS deleteMngrDeptCode
            ,GI.DELETE_MNGR_ID                   AS deleteMngrId
            ,GI.CNTC_INSTT_CD                    AS cntcInsttCd
            ,GI.CMPNY_NM                         AS cmpnyNm
            ,GI.UNIT_PRICE                       AS unitPrice
            ,GI.ORGPLCE                          AS orgplce
            ,GI.CNTRCT_NO                        AS cntrctNo
            ,GI.LOCPLC_HEDOFC                    AS locplcHedofc
            ,GI.PRICE_CHK                        AS priceChk
            ,GI.LOCPLC_IT                        AS locplcIt
            ,GI.ITEM_VOD_URL                     AS itemVodUrl
            ,GI.ITEM_DN_FILE_SEQ                 AS itemDnFileSeq                                                                                /* 기타 첨부파일 (5개) 파일 seq */
            ,(SELECT LIST((SELECT file_ordr_no    FROM OP_FILE WHERE file_seq = GI.ITEM_DN_FILE_SEQ) ORDER BY file_ordr_no)) AS itemDnFileOrdrNo /* 기타 첨부파일 (5개) 파일 ordrNo */
            ,(SELECT LIST((SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GI.ITEM_DN_FILE_SEQ) ORDER BY file_ordr_no)) AS itemDnFileNm     /* 기타 첨부파일 (5개) 파일 파일명 */
            ,GI.MNL_DN_FILE_SEQ                  AS mnlDnFileSeq
            ,(SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GI.MNL_DN_FILE_SEQ) AS mnlDnFileNm
            ,GI.FRAME_CHK                        AS frameChk
            ,GI.GTWOB_CHK                        AS gtwobChk
            ,GI.ITEM_SFE                         AS itemSfe
            ,GI.SMLPZ_CHK                        AS smlpzChk
            ,GI.DELNG_STOP_CHK                   AS delngStopChk
            ,GI.ORDER_INTRCP_CHK                 AS orderIntrcpChk
            ,GI.ITEM_IMG_URL                     AS itemImgUrl
            ,GI.GTWOB_NUMBER                     AS gtwobNumber
            ,GI.PRICE_DN_FILE_SEQ                AS priceDnFileSeq
            ,(SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GI.PRICE_DN_FILE_SEQ) AS priceDnFileNm
            ,(SELECT file_id FROM OP_FILE WHERE file_seq = GI.PRICE_DN_FILE_SEQ) AS priceDnFileId
            ,GI.GOODS_MONITOR_URL                AS goodsMonitorUrl
            ,GI.SERVICE_OFFER_METHOD             AS serviceOfferMethod
            ,GI.UPDT_STAT                        AS updtStat
            ,GI.UPDT_CHNG_FILE                   AS updtChngFile
            ,GI.CSTMR_INFO                       AS cstmrInfo
            ,GI.GOODS_EXPC_EFFECT                AS goodsExpcEffect
            ,GI.GS_CRTFC_NO                      AS gsCrtfcNo
            ,GI.NARA_CRTFC_NO                    AS naraCrtfcNo
            ,GI.NARA_CRTFC_NO                    AS naraCrtfcNo
            ,GI.GOODS_STAT 						 AS goodsStat
            ,GI.CHG_ITEM_CONTENT				 AS chgItemContent
            ,GI.CFM_ITEM_CONTENT				 AS cfmItemContent            
            ,GI.IS_MARK				 			 AS isMark            
            
            ,GI.SVC_PC				 		 	 AS svcPc
            ,GI.SVC_PC_VAT				 		 AS svcPcVat
            ,GI.SVC_PC_UNT_CD				 	 AS svcPcUntCd
            ,GI.MUMM_CNTRCTPD				 	 AS mummCntrctpd
            ,GI.DUE_STDR_MUMM				 	 AS dueStdrMumm
                        
        FROM TST_GOOD_INFO_I_TMP GI 
       WHERE GI.GOODS_CODE = #{GoodsCode}   
    	
    </select>
    <select id="goodsInfo_2" parameterType="map" resultType="map">
    
    /*_webGoods.goodsInfo_2*/

      SELECT GI.GOODS_CODE                       AS goodsCode
            ,GI.USER_ID                          AS userId
            ,GI.LANG_CODE                        AS langCode
            ,GI.GOODS_KND_CD                     AS goodsKndCd
            ,DECODE(GI.GOODS_KND_CD,'1001','Paas','1002','Saas','1003','Iaas','1004','SCS')                     AS goodsKndNm            
            ,GI.GOODS_NM                         AS goodsNm
            ,GI.GOODS_VER_INFO                   AS goodsVerInfo
            ,GI.GOODS_HMPG_URL                   AS goodsHmpgUrl
            ,GI.GOODS_SUMRY                      AS goodsSumry
            ,GI.GOODS_MAIN_FNCT                  AS goodsMainFnct
            ,GI.CNSL_EXPC_EFFECT                 AS cnslExpcEffect
            ,GI.GOODS_REFER                      AS goodsRefer
            ,GI.GOODS_DWLD_URL                   AS goodsDwldUrl
            ,GI.SLE_MTHD_CD                      AS sleMthdCd
            ,GI.GOODS_FILE_SEQ                   AS goodsFileSeq
            ,GI.DEMO_EXPRN_URL                   AS demoExprnUrl
            ,GI.SPCLTY_REALM                     AS spcltyRealm
            ,GI.CNSTNT_CO                        AS cnstntCo
            ,GI.GOODS_IMAGE_FILE_SEQ             AS goodsImageFileSeq
            ,(SELECT LIST((SELECT file_url FROM op_file WHERE file_seq =  GI.GOODS_IMAGE_FILE_SEQ)  ORDER BY file_ordr_no)) AS goodsImageFileUrl
            ,GI.GOODS_MNL_FILE_SEQ               AS goodsMnlFileSeq
            ,GI.COMOU_DE                         AS comouDe
            ,GI.GOODS_MAKR                       AS goodsMakr
            ,GI.GOODS_PC                         AS goodsPc
            ,GI.GOODS_LICENCE_CD                 AS goodsLicenceCd
            ,GI.GOODS_LICENCE_CN                 AS goodsLicenceCn
            ,GI.ARCHTC_SE                        AS archtcSe
            ,GI.GOODS_CHARGER_NM                 AS goodsChargerNm
            ,GI.GOODS_CHARGER_EMAIL              AS goodsChargerEmail
            ,GI.GOODS_CHARGER_CTTPC              AS goodsChargerCttpc
            ,GI.GOODS_CHARGER_MBTLNUM            AS goodsChargerMbtlnum
            ,GI.GOODS_REGIST_STTUS               AS goodsRegistSttus
            ,GI.GOODS_ACTVTY_AT                  AS goodsActvtyAt
            ,GI.REGIST_ID                        AS registId
            ,GI.REGIST_DT                        AS registDt
            ,GI.UPDT_ID                          AS updtId
            ,GI.UPDT_DT                          AS updtDt
            ,GI.CONFM_DT                         AS confmDt
            ,GI.GOODS_RDCNT                      AS goodsRdcnt
            ,GI.MNGR_DELETE_AT                   AS mngrDeleteAt
            ,GI.DELETE_MNGR_DEPT_CODE            AS deleteMngrDeptCode
            ,GI.DELETE_MNGR_ID                   AS deleteMngrId
            ,GI.CNTC_INSTT_CD                    AS cntcInsttCd
            ,GI.CMPNY_NM                         AS cmpnyNm
            ,GI.UNIT_PRICE                       AS unitPrice
            ,GI.ORGPLCE                          AS orgplce
            ,GI.CNTRCT_NO                        AS cntrctNo
            ,GI.LOCPLC_HEDOFC                    AS locplcHedofc
            ,GI.PRICE_CHK                        AS priceChk
            ,GI.LOCPLC_IT                        AS locplcIt
            ,GI.ITEM_VOD_URL                     AS itemVodUrl
            ,GI.ITEM_DN_FILE_SEQ                 AS itemDnFileSeq                                                                                /* 기타 첨부파일 (5개) 파일 seq */
            ,(SELECT LIST((SELECT file_ordr_no    FROM OP_FILE WHERE file_seq = GI.ITEM_DN_FILE_SEQ) ORDER BY file_ordr_no)) AS itemDnFileOrdrNo /* 기타 첨부파일 (5개) 파일 ordrNo */
            ,(SELECT LIST((SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GI.ITEM_DN_FILE_SEQ) ORDER BY file_ordr_no)) AS itemDnFileNm     /* 기타 첨부파일 (5개) 파일 파일명 */
            ,GI.MNL_DN_FILE_SEQ                  AS mnlDnFileSeq
            ,(SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GI.MNL_DN_FILE_SEQ) AS mnlDnFileNm
            ,GI.FRAME_CHK                        AS frameChk
            ,GI.GTWOB_CHK                        AS gtwobChk
            ,GI.ITEM_SFE                         AS itemSfe
            ,GI.SMLPZ_CHK                        AS smlpzChk
            ,GI.DELNG_STOP_CHK                   AS delngStopChk
            ,GI.ORDER_INTRCP_CHK                 AS orderIntrcpChk
            ,GI.ITEM_IMG_URL                     AS itemImgUrl
            ,GI.GTWOB_NUMBER                     AS gtwobNumber
            ,GI.PRICE_DN_FILE_SEQ                AS priceDnFileSeq
            ,(SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GI.PRICE_DN_FILE_SEQ) AS priceDnFileNm
            ,(SELECT file_id FROM OP_FILE WHERE file_seq = GI.PRICE_DN_FILE_SEQ) AS priceDnFileId
            ,GI.GOODS_MONITOR_URL                AS goodsMonitorUrl
            ,GI.SERVICE_OFFER_METHOD             AS serviceOfferMethod
            ,GI.UPDT_STAT                        AS updtStat
            ,GI.UPDT_CHNG_FILE                   AS updtChngFile
            ,GI.CSTMR_INFO                       AS cstmrInfo
            ,GI.GOODS_EXPC_EFFECT                AS goodsExpcEffect
            ,GI.GS_CRTFC_NO                      AS gsCrtfcNo
            ,GI.NARA_CRTFC_NO                    AS naraCrtfcNo
            ,GI.SVC_PC							 AS svcPc
            ,GI.SVC_PC_VAT						 AS svcPcVat	
		    ,(SELECT R.indvdlz_cd_nm FROM op_code_indvdlz R WHERE R.indvdlz_cd = GI.svc_pc_unt_cd AND R.group_cd = '2085')  AS svcPcUntCd                /* 서비스 가격 통화단위 코드 _ 명*/	
            ,GI.MUMM_CNTRCTPD					 AS mummCntrctpd
            ,(SELECT Q.indvdlz_cd_nm FROM op_code_indvdlz Q WHERE GI.due_stdr_mumm = Q.indvdlz_cd AND Q.group_cd = '2077') AS dueStdrMumm            /* 과금 기준(최소) _ 명  */
            
        FROM TST_GOOD_INFO_I GI 
       WHERE GI.GOODS_CODE = #{GoodsCode}   
    	
    </select>
    <select id="goodsInfoTmp_2" parameterType="map" resultType="map">
    
    /*_webGoods.goodsInfoTmp_2*/

      SELECT GI.GOODS_CODE                       AS goodsCode
            ,GI.USER_ID                          AS userId
            ,GI.LANG_CODE                        AS langCode
            ,GI.GOODS_KND_CD                     AS goodsKndCd
            ,DECODE(GI.GOODS_KND_CD,'1001','Paas','1002','Saas','1003','Iaas','1004','SCS')                     AS goodsKndNm            
            ,GI.GOODS_NM                         AS goodsNm
            ,GI.GOODS_VER_INFO                   AS goodsVerInfo
            ,GI.GOODS_HMPG_URL                   AS goodsHmpgUrl
            ,GI.GOODS_SUMRY                      AS goodsSumry
            ,GI.GOODS_MAIN_FNCT                  AS goodsMainFnct
            ,GI.CNSL_EXPC_EFFECT                 AS cnslExpcEffect
            ,GI.GOODS_REFER                      AS goodsRefer
            ,GI.GOODS_DWLD_URL                   AS goodsDwldUrl
            ,GI.SLE_MTHD_CD                      AS sleMthdCd
            ,GI.GOODS_FILE_SEQ                   AS goodsFileSeq
            ,GI.DEMO_EXPRN_URL                   AS demoExprnUrl
            ,GI.SPCLTY_REALM                     AS spcltyRealm
            ,GI.CNSTNT_CO                        AS cnstntCo
            ,GI.GOODS_IMAGE_FILE_SEQ             AS goodsImageFileSeq
            ,(SELECT LIST((SELECT file_url FROM op_file WHERE file_seq =  GI.GOODS_IMAGE_FILE_SEQ) ORDER BY file_ordr_no)) AS goodsImageFileUrl
            ,GI.GOODS_MNL_FILE_SEQ               AS goodsMnlFileSeq
            ,GI.COMOU_DE                         AS comouDe
            ,GI.GOODS_MAKR                       AS goodsMakr
            ,GI.GOODS_PC                         AS goodsPc
            ,GI.GOODS_LICENCE_CD                 AS goodsLicenceCd
            ,GI.GOODS_LICENCE_CN                 AS goodsLicenceCn
            ,GI.ARCHTC_SE                        AS archtcSe
            ,GI.GOODS_CHARGER_NM                 AS goodsChargerNm
            ,GI.GOODS_CHARGER_EMAIL              AS goodsChargerEmail
            ,GI.GOODS_CHARGER_CTTPC              AS goodsChargerCttpc
            ,GI.GOODS_CHARGER_MBTLNUM            AS goodsChargerMbtlnum
            ,GI.GOODS_REGIST_STTUS               AS goodsRegistSttus
            ,GI.GOODS_ACTVTY_AT                  AS goodsActvtyAt
            ,GI.REGIST_ID                        AS registId
            ,GI.REGIST_DT                        AS registDt
            ,GI.UPDT_ID                          AS updtId
            ,GI.UPDT_DT                          AS updtDt
            ,GI.CONFM_DT                         AS confmDt
            ,GI.GOODS_RDCNT                      AS goodsRdcnt
            ,GI.MNGR_DELETE_AT                   AS mngrDeleteAt
            ,GI.DELETE_MNGR_DEPT_CODE            AS deleteMngrDeptCode
            ,GI.DELETE_MNGR_ID                   AS deleteMngrId
            ,GI.CNTC_INSTT_CD                    AS cntcInsttCd
            ,GI.CMPNY_NM                         AS cmpnyNm
            ,GI.UNIT_PRICE                       AS unitPrice
            ,GI.ORGPLCE                          AS orgplce
            ,GI.CNTRCT_NO                        AS cntrctNo
            ,GI.LOCPLC_HEDOFC                    AS locplcHedofc
            ,GI.PRICE_CHK                        AS priceChk
            ,GI.LOCPLC_IT                        AS locplcIt
            ,GI.ITEM_VOD_URL                     AS itemVodUrl
            ,GI.ITEM_DN_FILE_SEQ                 AS itemDnFileSeq                                                                                /* 기타 첨부파일 (5개) 파일 seq */
            ,(SELECT LIST((SELECT file_ordr_no    FROM OP_FILE WHERE file_seq = GI.ITEM_DN_FILE_SEQ) ORDER BY file_ordr_no)) AS itemDnFileOrdrNo /* 기타 첨부파일 (5개) 파일 ordrNo */
            ,(SELECT LIST((SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GI.ITEM_DN_FILE_SEQ) ORDER BY file_ordr_no)) AS itemDnFileNm     /* 기타 첨부파일 (5개) 파일 파일명 */
            ,GI.MNL_DN_FILE_SEQ                  AS mnlDnFileSeq
            ,(SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GI.MNL_DN_FILE_SEQ) AS mnlDnFileNm
            ,GI.FRAME_CHK                        AS frameChk
            ,GI.GTWOB_CHK                        AS gtwobChk
            ,GI.ITEM_SFE                         AS itemSfe
            ,GI.SMLPZ_CHK                        AS smlpzChk
            ,GI.DELNG_STOP_CHK                   AS delngStopChk
            ,GI.ORDER_INTRCP_CHK                 AS orderIntrcpChk
            ,GI.ITEM_IMG_URL                     AS itemImgUrl
            ,GI.GTWOB_NUMBER                     AS gtwobNumber
            ,GI.PRICE_DN_FILE_SEQ                AS priceDnFileSeq
            ,(SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GI.PRICE_DN_FILE_SEQ) AS priceDnFileNm
            ,(SELECT file_id FROM OP_FILE WHERE file_seq = GI.PRICE_DN_FILE_SEQ) AS priceDnFileId
            ,GI.GOODS_MONITOR_URL                AS goodsMonitorUrl
            ,GI.SERVICE_OFFER_METHOD             AS serviceOfferMethod
            ,GI.UPDT_STAT                        AS updtStat
            ,GI.UPDT_CHNG_FILE                   AS updtChngFile
            ,GI.CSTMR_INFO                       AS cstmrInfo
            ,GI.GOODS_EXPC_EFFECT                AS goodsExpcEffect
            ,GI.GS_CRTFC_NO                      AS gsCrtfcNo
            ,GI.NARA_CRTFC_NO                    AS naraCrtfcNo
            ,GI.NARA_CRTFC_NO                    AS naraCrtfcNo
            ,GI.GOODS_STAT 						 AS goodsStat
            ,GI.CHG_ITEM_CONTENT				 AS chgItemContent
			,GI.CFM_ITEM_CONTENT				 AS cfmItemContent
            ,GI.SVC_PC							 AS svcPc
            ,GI.SVC_PC_VAT						 AS svcPcVat	
		    ,(SELECT R.indvdlz_cd_nm FROM op_code_indvdlz R WHERE R.indvdlz_cd = GI.svc_pc_unt_cd AND R.group_cd = '2085')  AS svcPcUntCd                /* 서비스 가격 통화단위 코드 _ 명*/                              	
            ,GI.MUMM_CNTRCTPD					 AS mummCntrctpd
            ,(SELECT Q.indvdlz_cd_nm FROM op_code_indvdlz Q WHERE GI.due_stdr_mumm = Q.indvdlz_cd AND Q.group_cd = '2077') AS dueStdrMumm            /* 과금 기준(최소) _ 명  */
        FROM TST_GOOD_INFO_I_TMP GI 
       WHERE GI.GOODS_CODE = #{GoodsCode}   
    	
    </select>
   
    <select id="specInfo" parameterType="map" resultType="GoodsSpecDescribeVO">
    
    /*_webGoods.specInfo*/

      SELECT GSD.GOODS_CODE                      AS goodsCode
            ,GSD.GOODS_NUM                       AS goodsNum
			,(SELECT DISTINCT (	SELECT C.LANG_STORE_NM 	FROM tst_good_info_i B, TUM_SVC_STOR_I C WHERE GSD.goods_code = B.goods_code AND B.user_id = C.user_id) FROM TST_GOOD_SPEC_DESCRIBE_I GSD WHERE GSD.goods_code = #{GoodsCode} ) as cmpnyNm            
            ,GSD.CMPNY_FOND_YEAR                 AS cmpnyFondYear
            ,GSD.ENTRPRS_SE                      AS entrprsSe
            ,(SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE GROUP_CD=2075 AND LANG_CODE = '00' AND INDVDLZ_CD = GSD.ENTRPRS_SE) AS entrprsSeNm
            ,GSD.CMPNY_INTRCN                    AS cmpnyIntrcn
            ,GSD.BSNS_REALM                      AS bsnsRealm
            ,GSD.MAIN_REFER                      AS mainRefer
            ,GSD.SVC_NM                          AS svcNm
            ,GSD.SVC_DFN_SFE                     AS svcDfnSfe
            ,GSD.SVC_EXPC_EFFECT                 AS svcExpcEffect
            ,GSD.SVC_TY                          AS svcTy
            ,GSD.SVC_ENTRPRS_SUPLY_TY            AS svcEntrprsSuplyTy
            ,(SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE GROUP_CD=2055 AND LANG_CODE = '00' AND INDVDLZ_CD = GSD.SVC_ENTRPRS_SUPLY_TY) AS svcEntrprsSuplyTyNm
            ,GSD.DUE_STDR_MUMM                   AS dueStdrMumm
            ,GSD.SVC_PC                          AS svcPc
            ,GSD.SVC_PC_VAT                      AS svcPcVat
            ,GSD.SVC_PC_UNT_CD                   AS svcPcUntCd
            ,GSD.MUMM_CNTRCTPD                   AS mummCntrctpd
            ,GSD.PC_TABLE_ATCH_AT                AS pcTableAtchAt
            ,GSD.VAT_INCLS_AT                    AS vatInclsAt
            ,GSD.SVC_BEGIN_PROCSS                AS svcBeginProcss
            ,GSD.SVC_END_PROCSS                  AS svcEndProcss
            ,GSD.AT_SVC_EVL                      AS atSvcEvl
            ,GSD.SVC_EVL_SUPLY_PD                AS svcEvlSuplyPd
            ,GSD.SVC_CHARGER_NM                  AS svcChargerNm
            ,GSD.svc_charger_cttpc               AS svcChargerCttpc
            ,GSD.SVC_CHARGER_TELNO               AS svcChargerTelno
            ,GSD.SVC_CHARGER_EMAIL               AS svcChargerEmail
            ,GSD.SVC_CHARGER_MBTL_NUM			 AS svcChargerMbtlNum
            ,GSD.GNRLZ_SOPMAL_REGIST_AT          AS gnrlzSopmalRegistAt
            ,GSD.PRIVATE_CLOUD_AT                AS privateCloudAt
            ,GSD.PUBLIC_CLOUD_AT                 AS publicCloudAt
            ,GSD.HYBRID_CLOUD_AT                 AS hybridCloudAt
            ,GSD.KISA_CRTFC_AT                   AS kisaCrtfcAt
            ,GSD.CLOUD_SVC_QLITY_CRTFC_AT        AS cloudSvcQlityCrtfcAt
            ,GSD.CLOUD_SVC_CNFIRM_AT             AS cloudSvcCnfirmAt
            ,GSD.CC_CRTFC_AT                     AS ccCrtfcAt
            ,GSD.GS_CRTFC_AT                     AS gsCrtfcAt
            ,GSD.SLA_APPLC_AT                    AS slaApplcAt
            ,GSD.SVC_USEFUL                      AS svcUseful
            ,GSD.ATMC_ESTN_SPORT_AT              AS atmcEstnSportAt
            ,GSD.CLUSTERING_SPORT_AT             AS clusteringSportAt
            ,GSD.SFSRV_PROVISIONING_SPORT_AT     AS sfsrvProvisioningSportAt
            ,GSD.SVC_PROVISIONING_TIME           AS svcProvisioningTime
            ,GSD.SVC_PROVISIONING_RELIS_TIME     AS svcProvisioningRelisTime
            ,GSD.DATA_CNTER_LC_INFO              AS dataCnterLcInfo
            ,GSD.DATA_CNTER_HBRD_LC_INFO         AS dataCnterHbrdLcInfo
            ,GSD.DSSTRRECOVRY_PLAN               AS dsstrrecovryPlan
            ,GSD.DATA_EXTRC_PROCSS               AS dataExtrcProcss
            ,GSD.UNUSE_DATA_PRTC_POLICY          AS unuseDataPrtcPolicy
            ,GSD.SAFE_DATA_DELETE_POLICY         AS safeDataDeletePolicy
            ,GSD.SVC_MANAGE_STTUS_INFO_SUPLY     AS svcManageSttusInfoSuply
            ,GSD.SVC_USE_LOG_SUPLY_AT            AS svcUseLogSuplyAt
            ,GSD.TROBL_MANAGE_REPRT_POLICY       AS troblManageReprtPolicy
            ,GSD.API_SPORT_AT                    AS apiSportAt
            ,GSD.API_SPORT_TY                    AS apiSportTy
            ,GSD.USER_MNL_SUPLY_AT               AS userMnlSuplyAt
            ,GSD.USER_MNL_INFO_AT                AS userMnlInfoAt
            ,GSD.USER_MNL_INFO_INPUT             AS userMnlInfoInput
            ,GSD.USER_EDC_SPORT_AT               AS userEdcSportAt
            ,GSD.USER_EDC_SPORT_INPUT            AS userEdcSportInput
            ,GSD.USER_EDC_INFO                   AS userEdcInfo
            ,GSD.VISIT_EDC_SPORT_AT              AS visitEdcSportAt
            ,GSD.VISIT_TCHNLGY_SPORT_AT          AS visitTchnlgySportAt
            ,GSD.VISIT_ELSE_TCHNLGY_SPORT_AT     AS visitElseTchnlgySportAt
            ,GSD.CSTMR_CNTER_OPER_AT             AS cstmrCnterOperAt
            ,GSD.CSTMR_CNTER_OPER_TIME           AS cstmrCnterOperTime
            ,GSD.I_OTHBC_STD_SPORT_DOC           AS iOthbcStdSportDoc
            ,GSD.I_SVC_DIRECT_CNNC_NTWRK         AS iSvcDirectCnncNtwrk
            ,GSD.I_VIRTL_NTWRK_SPORT             AS iVirtlNtwrkSport
            ,GSD.I_SYNCHRN_SPORT_AT              AS iSynchrnSportAt
            ,GSD.I_SPORT_EQPMN_LIST              AS iSportEqpmnList
            ,GSD.I_SERVER_COMPUTER_SVC           AS iServerComputerSvc
            ,GSD.I_STRGE_SVC                     AS iStrgeSvc
            ,GSD.I_NTWRK_SVC                     AS iNtwrkSvc
            ,GSD.I_SCRTY_SVC                     AS iScrtySvc
            ,GSD.I_MANAGE_SVC                    AS iManageSvc
            ,GSD.I_ETC_SVC                       AS iEtcSvc
            ,GSD.P_SECURE_DEVLOP                 AS pSecureDevlop
            ,GSD.P_SECURE_DCT_WDTB               AS pSecureDctWdtb
            ,GSD.P_SPORT_LANG                    AS pSportLang
            ,GSD.P_SPORT_PLTFOM                  AS pSportPltfom
            ,GSD.P_SPORT_CONTAINER_VER           AS pSportContainerVer
            ,GSD.P_SPORT_DATA_STORGE             AS pSportDataStorge
            ,GSD.P_SUB_TENANCY_SPORT_AT          AS pSubTenancySportAt
            ,GSD.P_DVLPR_UNT_INFO                AS pDvlprUntInfo
            ,GSD.P_SDK_API_SUPLY_AT              AS pSdkApiSuplyAt
            ,GSD.P_TEST_DEBUGING_SPORT_AT        AS pTestDebugingSportAt
            ,GSD.P_ADDON_SVC_MARKPLACE_SPORT_AT  AS pAddonSvcMarkplaceSportAt
            ,GSD.P_CISPORT_SPORT                 AS pCisportSport
            ,GSD.P_LOGING_MNTRNG_SPORT           AS pLogingMntrngSport
            ,GSD.P_LOAD_BALANCING_SPORT          AS pLoadBalancingSport
            ,GSD.S_USER_SVC_SUPLY_MTHD           AS sUserSvcSuplyMthd
            ,GSD.S_MANAGE_SVC_SUPLY_MTHD         AS sManageSvcSuplyMthd
            ,GSD.S_INFRSTRCTR_SUPLY_MTHD         AS sInfrstrctrSuplyMthd
            ,GSD.S_SCRTY_POLICY                  AS sScrtyPolicy
            ,GSD.S_DATA_ENCPT_AT_MTHD            AS sDataEncptAtMthd
            ,GSD.S_BACKUP_RECOVRY_POLICY         AS sBackupRecovryPolicy
            ,GSD.S_USER_CRTFC_SCRTY_PRTC_POLICY  AS sUserCrtfcScrtyPrtcPolicy
            ,GSD.S_MULTI_PLTFOM_SPORT_AT         AS sMultiPltfomSportAt
            ,GSD.S_SPORT_OPERSYSM_LIST           AS sSportOpersysmList
            ,GSD.S_SPORT_WBSR_LIST               AS sSportWbsrList
            ,GSD.S_SPORT_MOBILE_PLTFOM_LIST      AS sSportMobilePltfomList
            ,GSD.S_OPEN_STD_SPORT_AT             AS sOpenStdSportAt
            ,GSD.S_GVRN_FRMWRK_SPORT_AT          AS sGvrnFrmwrkSportAt
            ,GSD.S_OPEN_SOURC_SW_AT              AS sOpenSourcSwAt
            ,GSD.S_PAASTA_AT                     AS sPaastaAt
            ,GSD.S_SOURC_OTHBC_AT                AS sSourcOthbcAt
            ,GSD.S_API_ACCESS_SPORT_AT           AS sApiAccessSportAt
            ,GSD.S_DB_MIGRATION_SPORT_AT         AS sDbMigrationSportAt
            ,GSD.S_EXTRL_APPLICATION_SPORT_AT    AS sExtrlApplicationSportAt
            ,GSD.S_SUB_TENANCY_SPORT_AT          AS sSubTenancySportAt
            ,GSD.S_CSTMZNG_POSBL_AT              AS sCstmzngPosblAt
            ,GSD.S_DEVLOP_SPORT_ETC              AS sDevlopSportEtc
            ,GSD.C_SPCLTY_REALM                  AS cSpcltyRealm
            ,GSD.C_INDC_WHOLE                    AS cIndcWhole
            ,GSD.C_SETUP_MGR                     AS cSetupMgr
            ,GSD.C_HOLD_QUALF                    AS cHoldQualf
            ,GSD.C_HOLD_TCHNLGY                  AS cHoldTchnlgy
            ,GSD.C_INFRSTRCTR                    AS cInfrstrctr
            ,GSD.C_INFRSTRCTR_ETC                AS cInfrstrctrEtc
            ,GSD.C_PLTFOM                        AS cPltfom
            ,GSD.C_PLTFOM_ETC                    AS cPltfomEtc
            ,GSD.C_PRJCT_EXPRNC                  AS cPrjctExprnc
            ,GSD.C_CNSL_RELM                     AS cCnslRelm
            ,GSD.C_CNSL_RELM_ETC                 AS cCnslRelmEtc
            ,GSD.C_CNSL_SCOPE                    AS cCnslScope
            ,NVL(TRIM(DECODE( GSD.C_DETAIL_SVC, '', NULL, ' ', NULL, GSD.C_DETAIL_SVC )),'') AS cDetailSvc
            ,GSD.C_EXC_PD                        AS cExcPd
            ,GSD.C_EXC_PD_ETC                    AS cExcPdEtc
            ,GSD.C_EXC_AREA                      AS cExcArea
            ,GSD.C_BEFFAT_CNSL_AT                AS cBeffatCnslAt
            ,GSD.C_CNSL_PC                       AS cCnslPc
            ,GSD.ENTR_DATE                       AS entrDate
            ,GSD.USER_ID                         AS userId
            ,''                         		 AS chgItemContent    
			,GSD.ITEM_DN_FILE_SEQ                 AS itemDnFileSeq                                                                                /* 기타 첨부파일 (5개) 파일 seq */			
			,(SELECT LIST((SELECT file_ordr_no    FROM OP_FILE WHERE file_seq = GSD.ITEM_DN_FILE_SEQ) ORDER BY file_ordr_no)) AS itemDnFileOrdrNo /* 기타 첨부파일 (5개) 파일 ordrNo */
            ,(SELECT LIST((SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GSD.ITEM_DN_FILE_SEQ) ORDER BY file_ordr_no)) AS itemDnFileNm     /* 기타 첨부파일 (5개) 파일 파일명 */
            ,GSD.MNL_DN_FILE_SEQ                  AS mnlDnFileSeq
            ,(SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GSD.MNL_DN_FILE_SEQ) AS mnlDnFileNm
            ,GSD.PRICE_DN_FILE_SEQ                AS priceDnFileSeq
            ,(SELECT local_orginl_nm FROM OP_FILE WHERE file_seq = GSD.PRICE_DN_FILE_SEQ) AS priceDnFileNm
            ,(SELECT file_id FROM OP_FILE WHERE file_seq = GSD.PRICE_DN_FILE_SEQ) AS priceDnFileId
			
						
        FROM TST_GOOD_SPEC_DESCRIBE_I GSD 
       WHERE GSD.GOODS_CODE = #{GoodsCode}   
       AND GSD.GOODS_NUM = (					
							SELECT MAX(GOODS_NUM)
							FROM TST_GOOD_SPEC_DESCRIBE_I 
    						WHERE GOODS_CODE = #{GoodsCode} 
    					   )    	
    </select>
    <select id="specInfoUpdate" parameterType="map" resultType="GoodsSpecDescribeVO">
    
    /*_webGoods.specInfoUpdate*/

        SELECT NVL(TRIM(GSD.GOODS_CODE),'')                      AS goodsCode
            ,NVL(TRIM(GSD.GOODS_NUM),'')                       AS goodsNum
            ,NVL(TRIM(GSD.CMPNY_NM),'')                        AS cmpnyNm
            ,NVL(TRIM(GSD.CMPNY_FOND_YEAR),'')                 AS cmpnyFondYear
            ,NVL(TRIM(GSD.ENTRPRS_SE),'')                      AS entrprsSe
            ,(SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE GROUP_CD=2075 AND LANG_CODE = '00' AND INDVDLZ_CD = NVL(TRIM(GSD.ENTRPRS_SE),'')) AS entrprsSeNm
            ,NVL(TRIM(GSD.CMPNY_INTRCN),'')                    AS cmpnyIntrcn
            ,NVL(TRIM(GSD.BSNS_REALM),'')                      AS bsnsRealm
            ,NVL(TRIM(GSD.MAIN_REFER),'')                      AS mainRefer
            ,NVL(TRIM(GSD.SVC_NM),'')                          AS svcNm
            ,NVL(TRIM(GSD.SVC_DFN_SFE),'')                     AS svcDfnSfe
            ,NVL(TRIM(GSD.SVC_EXPC_EFFECT),'')                 AS svcExpcEffect
            ,NVL(TRIM(GSD.SVC_TY),'')                          AS svcTy
            ,NVL(TRIM(GSD.SVC_ENTRPRS_SUPLY_TY),'')            AS svcEntrprsSuplyTy
            ,(SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE GROUP_CD=2055 AND LANG_CODE = '00' AND INDVDLZ_CD = NVL(TRIM(GSD.SVC_ENTRPRS_SUPLY_TY),'')) AS svcEntrprsSuplyTyNm
            ,NVL(TRIM(GSD.DUE_STDR_MUMM),'')                   AS dueStdrMumm
            ,NVL(TRIM(GSD.SVC_PC),'')                          AS svcPc
            ,NVL(TRIM(GSD.SVC_PC_VAT),'')                      AS svcPcVat
            ,NVL(TRIM(GSD.SVC_PC_UNT_CD),'')                   AS svcPcUntCd
            ,NVL(TRIM(GSD.MUMM_CNTRCTPD),'')                   AS mummCntrctpd
            ,NVL(TRIM(GSD.PC_TABLE_ATCH_AT),'')                AS pcTableAtchAt
            ,NVL(TRIM(GSD.VAT_INCLS_AT),'')                    AS vatInclsAt
            ,NVL(TRIM(GSD.SVC_BEGIN_PROCSS),'')                AS svcBeginProcss
            ,NVL(TRIM(GSD.SVC_END_PROCSS),'')                  AS svcEndProcss
            ,NVL(TRIM(GSD.AT_SVC_EVL),'')                      AS atSvcEvl
            ,NVL(TRIM(GSD.SVC_EVL_SUPLY_PD),'')                AS svcEvlSuplyPd
            ,NVL(TRIM(GSD.SVC_CHARGER_NM),'')                  AS svcChargerNm
            ,NVL(TRIM(GSD.svc_charger_cttpc),'')               AS svcChargerCttpc
            ,NVL(TRIM(GSD.SVC_CHARGER_TELNO),'')               AS svcChargerTelno
            ,NVL(TRIM(GSD.SVC_CHARGER_EMAIL),'')               AS svcChargerEmail
            ,NVL(TRIM(GSD.SVC_CHARGER_MBTL_NUM),'')		 			  AS svcChargerMbtlNum
            ,NVL(TRIM(GSD.GNRLZ_SOPMAL_REGIST_AT),'')          AS gnrlzSopmalRegistAt
            ,NVL(TRIM(GSD.PRIVATE_CLOUD_AT),'')                AS privateCloudAt
            ,NVL(TRIM(GSD.PUBLIC_CLOUD_AT),'')                 AS publicCloudAt
            ,NVL(TRIM(GSD.HYBRID_CLOUD_AT),'')                 AS hybridCloudAt
            ,NVL(TRIM(GSD.KISA_CRTFC_AT),'')                   AS kisaCrtfcAt
            ,NVL(TRIM(GSD.CLOUD_SVC_QLITY_CRTFC_AT),'')        AS cloudSvcQlityCrtfcAt
            ,NVL(TRIM(GSD.CLOUD_SVC_CNFIRM_AT),'')             AS cloudSvcCnfirmAt
            ,NVL(TRIM(GSD.CC_CRTFC_AT),'')                     AS ccCrtfcAt
            ,NVL(TRIM(GSD.GS_CRTFC_AT),'')                     AS gsCrtfcAt
            ,NVL(TRIM(GSD.SLA_APPLC_AT),'')                    AS slaApplcAt
            ,NVL(TRIM(GSD.SVC_USEFUL),'')                      AS svcUseful
            ,NVL(TRIM(GSD.ATMC_ESTN_SPORT_AT),'')              AS atmcEstnSportAt
            ,NVL(TRIM(GSD.CLUSTERING_SPORT_AT),'')             AS clusteringSportAt
            ,NVL(TRIM(GSD.SFSRV_PROVISIONING_SPORT_AT),'')     AS sfsrvProvisioningSportAt
            ,NVL(TRIM(GSD.SVC_PROVISIONING_TIME),'')           AS svcProvisioningTime
            ,NVL(TRIM(GSD.SVC_PROVISIONING_RELIS_TIME),'')     AS svcProvisioningRelisTime
            ,NVL(TRIM(GSD.DATA_CNTER_LC_INFO),'')              AS dataCnterLcInfo
            ,NVL(TRIM(GSD.DATA_CNTER_HBRD_LC_INFO),'')         AS dataCnterHbrdLcInfo
            ,NVL(TRIM(GSD.DSSTRRECOVRY_PLAN),'')               AS dsstrrecovryPlan
            ,NVL(TRIM(GSD.DATA_EXTRC_PROCSS),'')               AS dataExtrcProcss
            ,NVL(TRIM(GSD.UNUSE_DATA_PRTC_POLICY),'')          AS unuseDataPrtcPolicy
            ,NVL(TRIM(GSD.SAFE_DATA_DELETE_POLICY),'')         AS safeDataDeletePolicy
            ,NVL(TRIM(GSD.SVC_MANAGE_STTUS_INFO_SUPLY),'')     AS svcManageSttusInfoSuply
            ,NVL(TRIM(GSD.SVC_USE_LOG_SUPLY_AT),'')            AS svcUseLogSuplyAt
            ,NVL(TRIM(GSD.TROBL_MANAGE_REPRT_POLICY),'')       AS troblManageReprtPolicy
            ,NVL(TRIM(GSD.API_SPORT_AT),'')                    AS apiSportAt
            ,NVL(TRIM(GSD.API_SPORT_TY),'')                    AS apiSportTy
            ,NVL(TRIM(GSD.USER_MNL_SUPLY_AT),'')               AS userMnlSuplyAt
            ,NVL(TRIM(GSD.USER_MNL_INFO_AT),'')               AS userMnlInfoAt
            ,NVL(TRIM(GSD.USER_MNL_INFO_INPUT),'')             AS userMnlInfoInput
            ,NVL(TRIM(GSD.USER_EDC_SPORT_AT),'')               AS userEdcSportAt
            ,NVL(TRIM(GSD.USER_EDC_SPORT_INPUT),'')            AS userEdcSportInput
            ,NVL(TRIM(GSD.USER_EDC_INFO),'')                   AS userEdcInfo
            ,NVL(TRIM(GSD.VISIT_EDC_SPORT_AT),'')              AS visitEdcSportAt
            ,NVL(TRIM(GSD.VISIT_TCHNLGY_SPORT_AT),'')          AS visitTchnlgySportAt
            ,NVL(TRIM(GSD.VISIT_ELSE_TCHNLGY_SPORT_AT),'')     AS visitElseTchnlgySportAt
            ,NVL(TRIM(GSD.CSTMR_CNTER_OPER_AT),'')             AS cstmrCnterOperAt
            ,NVL(TRIM(GSD.CSTMR_CNTER_OPER_TIME),'')           AS cstmrCnterOperTime
            ,NVL(TRIM(GSD.I_OTHBC_STD_SPORT_DOC),'')           AS iOthbcStdSportDoc
            ,NVL(TRIM(GSD.I_SVC_DIRECT_CNNC_NTWRK),'')         AS iSvcDirectCnncNtwrk
            ,NVL(TRIM(GSD.I_VIRTL_NTWRK_SPORT),'')             AS iVirtlNtwrkSport
            ,NVL(TRIM(GSD.I_SYNCHRN_SPORT_AT),'')              AS iSynchrnSportAt
            ,NVL(TRIM(GSD.I_SPORT_EQPMN_LIST),'')              AS iSportEqpmnList
            ,NVL(TRIM(GSD.I_SERVER_COMPUTER_SVC),'')           AS iServerComputerSvc
            ,NVL(TRIM(GSD.I_STRGE_SVC),'')                     AS iStrgeSvc
            ,NVL(TRIM(GSD.I_NTWRK_SVC),'')                     AS iNtwrkSvc
            ,NVL(TRIM(GSD.I_SCRTY_SVC),'')                     AS iScrtySvc
            ,NVL(TRIM(GSD.I_MANAGE_SVC),'')                    AS iManageSvc
            ,NVL(TRIM(GSD.I_ETC_SVC),'')                       AS iEtcSvc
            ,NVL(TRIM(GSD.P_SECURE_DEVLOP),'')                 AS pSecureDevlop
            ,NVL(TRIM(GSD.P_SECURE_DCT_WDTB),'')               AS pSecureDctWdtb
            ,NVL(TRIM(GSD.P_SPORT_LANG),'')                    AS pSportLang
            ,NVL(TRIM(GSD.P_SPORT_PLTFOM),'')                  AS pSportPltfom
            ,NVL(TRIM(GSD.P_SPORT_CONTAINER_VER),'')           AS pSportContainerVer
            ,NVL(TRIM(GSD.P_SPORT_DATA_STORGE),'')             AS pSportDataStorge
            ,NVL(TRIM(GSD.P_SUB_TENANCY_SPORT_AT),'')          AS pSubTenancySportAt
            ,NVL(TRIM(GSD.P_DVLPR_UNT_INFO),'')                AS pDvlprUntInfo
            ,NVL(TRIM(GSD.P_SDK_API_SUPLY_AT),'')              AS pSdkApiSuplyAt
            ,NVL(TRIM(GSD.P_TEST_DEBUGING_SPORT_AT),'')        AS pTestDebugingSportAt
            ,NVL(TRIM(GSD.P_ADDON_SVC_MARKPLACE_SPORT_AT),'')  AS pAddonSvcMarkplaceSportAt
            ,NVL(TRIM(GSD.P_CISPORT_SPORT),'')                 AS pCisportSport
            ,NVL(TRIM(GSD.P_LOGING_MNTRNG_SPORT),'')           AS pLogingMntrngSport
            ,NVL(TRIM(GSD.P_LOAD_BALANCING_SPORT),'')          AS pLoadBalancingSport
            ,NVL(TRIM(GSD.S_USER_SVC_SUPLY_MTHD),'')           AS sUserSvcSuplyMthd
            ,NVL(TRIM(GSD.S_MANAGE_SVC_SUPLY_MTHD),'')         AS sManageSvcSuplyMthd
            ,NVL(TRIM(GSD.S_INFRSTRCTR_SUPLY_MTHD),'')         AS sInfrstrctrSuplyMthd
            ,NVL(TRIM(GSD.S_SCRTY_POLICY),'')                  AS sScrtyPolicy
            ,NVL(TRIM(GSD.S_DATA_ENCPT_AT_MTHD),'')            AS sDataEncptAtMthd
            ,NVL(TRIM(GSD.S_BACKUP_RECOVRY_POLICY),'')         AS sBackupRecovryPolicy
            ,NVL(TRIM(GSD.S_USER_CRTFC_SCRTY_PRTC_POLICY),'')  AS sUserCrtfcScrtyPrtcPolicy
            ,NVL(TRIM(GSD.S_MULTI_PLTFOM_SPORT_AT),'')         AS sMultiPltfomSportAt
            ,NVL(TRIM(GSD.S_SPORT_OPERSYSM_LIST),'')           AS sSportOpersysmList
            ,NVL(TRIM(GSD.S_SPORT_WBSR_LIST),'')               AS sSportWbsrList
            ,NVL(TRIM(GSD.S_SPORT_MOBILE_PLTFOM_LIST),'')      AS sSportMobilePltfomList
            ,NVL(TRIM(GSD.S_OPEN_STD_SPORT_AT),'')             AS sOpenStdSportAt
            ,NVL(TRIM(GSD.S_GVRN_FRMWRK_SPORT_AT),'')          AS sGvrnFrmwrkSportAt
            ,NVL(TRIM(GSD.S_OPEN_SOURC_SW_AT),'')              AS sOpenSourcSwAt
            ,NVL(TRIM(GSD.S_PAASTA_AT),'')                     AS sPaastaAt
            ,NVL(TRIM(GSD.S_SOURC_OTHBC_AT),'')                AS sSourcOthbcAt
            ,NVL(TRIM(GSD.S_API_ACCESS_SPORT_AT),'')           AS sApiAccessSportAt
            ,NVL(TRIM(GSD.S_DB_MIGRATION_SPORT_AT),'')         AS sDbMigrationSportAt
            ,NVL(TRIM(GSD.S_EXTRL_APPLICATION_SPORT_AT),'')    AS sExtrlApplicationSportAt
            ,NVL(TRIM(GSD.S_SUB_TENANCY_SPORT_AT),'')          AS sSubTenancySportAt
            ,NVL(TRIM(GSD.S_CSTMZNG_POSBL_AT),'')              AS sCstmzngPosblAt
            ,NVL(TRIM(GSD.S_DEVLOP_SPORT_ETC),'')              AS sDevlopSportEtc
            ,NVL(TRIM(GSD.C_SPCLTY_REALM),'')                  AS cSpcltyRealm
            ,NVL(TRIM(GSD.C_INDC_WHOLE),'')                    AS cIndcWhole
            ,NVL(TRIM(GSD.C_SETUP_MGR),'')                     AS cSetupMgr
            ,NVL(TRIM(GSD.C_HOLD_QUALF),'')                    AS cHoldQualf
            ,NVL(TRIM(GSD.C_HOLD_TCHNLGY),'')                  AS cHoldTchnlgy
            ,NVL(TRIM(GSD.C_INFRSTRCTR),'')                     AS cInfrstrctr
            ,NVL(TRIM(GSD.C_INFRSTRCTR_ETC),'')                AS cInfrstrctrEtc
            ,NVL(TRIM(GSD.C_PLTFOM),'')                        AS cPltfom
            ,NVL(TRIM(GSD.C_PLTFOM_ETC),'')                    AS cPltfomEtc
            ,NVL(TRIM(GSD.C_PRJCT_EXPRNC),'')                  AS cPrjctExprnc
            ,NVL(TRIM(GSD.C_CNSL_RELM),'')                     AS cCnslRelm
            ,NVL(TRIM(GSD.C_CNSL_RELM_ETC),'')                 AS cCnslRelmEtc
            ,NVL(TRIM(GSD.C_CNSL_SCOPE),'')                    AS cCnslScope
            ,DECODE(GSD.C_DETAIL_SVC,NULL,'',GSD.C_DETAIL_SVC) AS cDetailSvc
            ,NVL(TRIM(GSD.C_EXC_PD),'')                        AS cExcPd
            ,NVL(TRIM(GSD.C_EXC_PD_ETC),'')                    AS cExcPdEtc
            ,NVL(TRIM(GSD.C_EXC_AREA),'')                      AS cExcArea
            ,NVL(TRIM(GSD.C_BEFFAT_CNSL_AT),'')                AS cBeffatCnslAt
            ,NVL(TRIM(GSD.C_CNSL_PC),'')                       AS cCnslPc
            ,NVL(TRIM(GSD.ENTR_DATE),'')                       AS entrDate
            ,NVL(TRIM(GSD.USER_ID),'')                         AS userId
            ,NVL(TRIM(GSD.CHG_ITEM_CONTENT),'')            	 AS chgItemContent                  
        FROM TST_GOOD_SPEC_DESCRIBE_I_TMP GSD 
       WHERE GSD.GOODS_CODE = #{GoodsCode}   
       AND GSD.GOODS_NUM = (					
							SELECT MAX(GOODS_NUM)
							FROM TST_GOOD_SPEC_DESCRIBE_I_TMP 
    						WHERE GOODS_CODE = #{GoodsCode} 
    					   )    	
    </select>
    <select id="specInfo_2" parameterType="map" resultType="GoodsSpecDescribeVO">
    
    /*_webGoods.specInfo_2*/

      SELECT nvl(trim(GSD.GOODS_CODE),'')                      AS goodsCode
            ,nvl(trim(GSD.GOODS_NUM),'')                       AS goodsNum
            ,nvl(trim(GSD.CMPNY_NM),'')                        AS cmpnyNm
            ,nvl(trim(GSD.CMPNY_FOND_YEAR),'')                 AS cmpnyFondYear
            ,nvl(trim(GSD.ENTRPRS_SE),'')                      AS entrprsSe
            ,(SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE GROUP_CD=2075 AND LANG_CODE = '00' AND INDVDLZ_CD = nvl(trim(GSD.ENTRPRS_SE),'') ) AS entrprsSeNm
            ,nvl(trim(GSD.CMPNY_INTRCN),'')                    AS cmpnyIntrcn
            ,nvl(trim(GSD.BSNS_REALM),'')                      AS bsnsRealm
            ,nvl(trim(GSD.MAIN_REFER),'')                      AS mainRefer
            ,nvl(trim(GSD.SVC_NM),'')                          AS svcNm
            ,nvl(trim(GSD.SVC_DFN_SFE),'')                     AS svcDfnSfe
            ,nvl(trim(GSD.SVC_EXPC_EFFECT),'')                 AS svcExpcEffect
            ,nvl(trim(GSD.SVC_TY),'')                          AS svcTy
            ,nvl(trim(GSD.SVC_ENTRPRS_SUPLY_TY),'')            AS svcEntrprsSuplyTy
            ,(SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE GROUP_CD=2055 AND LANG_CODE = '00' AND INDVDLZ_CD = nvl(trim(GSD.SVC_ENTRPRS_SUPLY_TY),'') ) AS svcEntrprsSuplyTyNm
						,(SELECT INDVDLZ_CD_NM AS dueStdrMumm FROM OP_CODE_INDVDLZ WHERE 1=1 AND LANG_CODE = '00' AND GROUP_CD = '2077' AND INDVDLZ_CD = nvl(trim(GSD.DUE_STDR_MUMM),'')) AS dueStdrMumm            
            ,nvl(trim(GSD.SVC_PC),'')                          AS svcPc
            ,DECODE(nvl(trim(GSD.SVC_PC_VAT),''),'Y','예','아니오') AS svcPcVat
						,(SELECT INDVDLZ_CD_NM AS svcPcUntCd FROM OP_CODE_INDVDLZ WHERE 1=1 AND LANG_CODE = '00' AND GROUP_CD = '2085' AND INDVDLZ_CD = nvl(trim(GSD.SVC_PC_UNT_CD),'')) AS svcPcUntCd            
            ,nvl(trim(GSD.MUMM_CNTRCTPD),'')                   AS mummCntrctpd
            ,nvl(trim(GSD.PC_TABLE_ATCH_AT),'')                AS pcTableAtchAt
            ,nvl(trim(GSD.VAT_INCLS_AT),'')                    AS vatInclsAt
            ,nvl(trim(GSD.SVC_BEGIN_PROCSS),'')                AS svcBeginProcss
            ,nvl(trim(GSD.SVC_END_PROCSS),'')                  AS svcEndProcss
            ,nvl(trim(GSD.AT_SVC_EVL),'')                      AS atSvcEvl
            ,nvl(trim(GSD.SVC_EVL_SUPLY_PD),'')                AS svcEvlSuplyPd
            ,nvl(trim(GSD.SVC_CHARGER_NM),'')                  AS svcChargerNm
            ,nvl(trim(GSD.svc_charger_cttpc),'')               AS svcChargerCttpc
            ,nvl(trim(GSD.SVC_CHARGER_TELNO),'')               AS svcChargerTelno
            ,nvl(trim(GSD.SVC_CHARGER_EMAIL),'')               AS svcChargerEmail
            ,nvl(trim(GSD.SVC_CHARGER_MBTL_NUM),'')			 AS svcChargerMbtlNum
            ,nvl(trim(GSD.GNRLZ_SOPMAL_REGIST_AT),'')          AS gnrlzSopmalRegistAt
            ,nvl(trim(GSD.PRIVATE_CLOUD_AT),'')                AS privateCloudAt
            ,nvl(trim(GSD.PUBLIC_CLOUD_AT),'')                 AS publicCloudAt
            ,nvl(trim(GSD.HYBRID_CLOUD_AT),'')                 AS hybridCloudAt
            ,nvl(trim(GSD.KISA_CRTFC_AT),'')                   AS kisaCrtfcAt
            ,nvl(trim(GSD.CLOUD_SVC_QLITY_CRTFC_AT),'')        AS cloudSvcQlityCrtfcAt
            ,nvl(trim(GSD.CLOUD_SVC_CNFIRM_AT),'')             AS cloudSvcCnfirmAt
            ,nvl(trim(GSD.CC_CRTFC_AT),'')                     AS ccCrtfcAt
            ,nvl(trim(GSD.GS_CRTFC_AT),'')                     AS gsCrtfcAt
            
            ,Decode(GSD.SLA_APPLC_AT,'Y','예','아니오')        AS slaApplcAt
            ,nvl(trim(GSD.SVC_USEFUL),'')                      AS svcUseful

            ,Decode(GSD.ATMC_ESTN_SPORT_AT,'Y','예','아니오')              AS atmcEstnSportAt
            ,Decode(GSD.CLUSTERING_SPORT_AT,'Y','예','아니오')             AS clusteringSportAt
            ,Decode(GSD.SFSRV_PROVISIONING_SPORT_AT,'Y','예','아니오')     AS sfsrvProvisioningSportAt

            ,nvl(trim(GSD.SVC_PROVISIONING_TIME),'')           AS svcProvisioningTime
            ,nvl(trim(GSD.SVC_PROVISIONING_RELIS_TIME),'')     AS svcProvisioningRelisTime
            ,(SELECT AK.indvdlz_cd_nm FROM op_code_indvdlz AK WHERE 1=1 AND AK.indvdlz_cd = GSD.DATA_CNTER_LC_INFO AND AK.group_cd = '2079') AS dataCnterLcInfo         /* 데이터센터 국내, 외 위치 정보명  */
            ,nvl(trim(GSD.DATA_CNTER_HBRD_LC_INFO),'')         AS dataCnterHbrdLcInfo
            ,nvl(trim(GSD.DSSTRRECOVRY_PLAN),'')               AS dsstrrecovryPlan
            ,nvl(trim(GSD.DATA_EXTRC_PROCSS),'')               AS dataExtrcProcss
            ,nvl(trim(GSD.UNUSE_DATA_PRTC_POLICY),'')          AS unuseDataPrtcPolicy
            ,nvl(trim(GSD.SAFE_DATA_DELETE_POLICY),'')         AS safeDataDeletePolicy
            
            ,decode(GSD.SVC_MANAGE_STTUS_INFO_SUPLY,'Y','예','아니오')     AS svcManageSttusInfoSuply
            ,decode(GSD.SVC_USE_LOG_SUPLY_AT,'Y','예','아니오')            AS svcUseLogSuplyAt
            ,nvl(trim(GSD.TROBL_MANAGE_REPRT_POLICY),'')       AS troblManageReprtPolicy
            ,decode(GSD.API_SPORT_AT,'Y','예','아니오')                    AS apiSportAt
            ,nvl(trim(GSD.API_SPORT_TY),'')                    AS apiSportTy
            ,decode(GSD.USER_MNL_SUPLY_AT,'Y','예','아니오')               AS userMnlSuplyAt
            
            ,decode(GSD.USER_MNL_INFO_AT,'Y','예','아니오') || '/' || nvl(trim(GSD.USER_MNL_INFO_INPUT),'')                AS userMnlInfoAt
            ,nvl(trim(GSD.USER_MNL_INFO_INPUT),'')             AS userMnlInfoInput

            ,decode(GSD.USER_EDC_SPORT_AT,'Y','예','아니오') || nvl(trim(GSD.USER_EDC_SPORT_INPUT),'')              AS userEdcSportAt
            ,nvl(trim(GSD.USER_EDC_SPORT_INPUT),'')            AS userEdcSportInput

            ,nvl(trim(GSD.USER_EDC_INFO),'')                   AS userEdcInfo
            
            ,decode(GSD.VISIT_EDC_SPORT_AT,'Y','예','아니오')              AS visitEdcSportAt
            ,decode(GSD.VISIT_TCHNLGY_SPORT_AT,'Y','예','아니오')          AS visitTchnlgySportAt
            ,decode(GSD.VISIT_ELSE_TCHNLGY_SPORT_AT,'Y','예','아니오')     AS visitElseTchnlgySportAt
            
            ,decode(GSD.CSTMR_CNTER_OPER_AT,'Y','예','아니오') || '/' || nvl(trim(GSD.CSTMR_CNTER_OPER_TIME),'')          AS cstmrCnterOperAt
            ,nvl(trim(GSD.CSTMR_CNTER_OPER_TIME),'')           AS cstmrCnterOperTime            
            
            ,nvl(trim(GSD.I_OTHBC_STD_SPORT_DOC),'')           AS iOthbcStdSportDoc
            ,nvl(trim(GSD.I_SVC_DIRECT_CNNC_NTWRK),'')         AS iSvcDirectCnncNtwrk
            ,nvl(trim(GSD.I_VIRTL_NTWRK_SPORT),'')             AS iVirtlNtwrkSport
            ,nvl(trim(GSD.I_SYNCHRN_SPORT_AT),'')              AS iSynchrnSportAt
            ,nvl(trim(GSD.I_SPORT_EQPMN_LIST),'')              AS iSportEqpmnList
            ,nvl(trim(GSD.I_SERVER_COMPUTER_SVC),'')           AS iServerComputerSvc
            ,nvl(trim(GSD.I_STRGE_SVC),'')                     AS iStrgeSvc
            ,nvl(trim(GSD.I_NTWRK_SVC),'')                     AS iNtwrkSvc
            ,nvl(trim(GSD.I_SCRTY_SVC),'')                     AS iScrtySvc
            ,nvl(trim(GSD.I_MANAGE_SVC),'')                    AS iManageSvc
            ,nvl(trim(GSD.I_ETC_SVC),'')                       AS iEtcSvc
            ,nvl(trim(GSD.P_SECURE_DEVLOP),'')                 AS pSecureDevlop
            ,nvl(trim(GSD.P_SECURE_DCT_WDTB),'')               AS pSecureDctWdtb
            ,nvl(trim(GSD.P_SPORT_LANG),'')                    AS pSportLang
            ,nvl(trim(GSD.P_SPORT_PLTFOM),'')                  AS pSportPltfom
            ,nvl(trim(GSD.P_SPORT_CONTAINER_VER),'')           AS pSportContainerVer
            ,nvl(trim(GSD.P_SPORT_DATA_STORGE),'')             AS pSportDataStorge
            ,nvl(trim(GSD.P_SUB_TENANCY_SPORT_AT),'')          AS pSubTenancySportAt
            ,nvl(trim(GSD.P_DVLPR_UNT_INFO),'')                AS pDvlprUntInfo
            ,nvl(trim(GSD.P_SDK_API_SUPLY_AT),'')              AS pSdkApiSuplyAt
            ,nvl(trim(GSD.P_TEST_DEBUGING_SPORT_AT),'')        AS pTestDebugingSportAt
            ,nvl(trim(GSD.P_ADDON_SVC_MARKPLACE_SPORT_AT),'')  AS pAddonSvcMarkplaceSportAt
            ,nvl(trim(GSD.P_CISPORT_SPORT),'')                 AS pCisportSport
            ,nvl(trim(GSD.P_LOGING_MNTRNG_SPORT),'')           AS pLogingMntrngSport
            ,nvl(trim(GSD.P_LOAD_BALANCING_SPORT),'')          AS pLoadBalancingSport
            ,nvl(trim(GSD.S_USER_SVC_SUPLY_MTHD),'')           AS sUserSvcSuplyMthd
            ,nvl(trim(GSD.S_MANAGE_SVC_SUPLY_MTHD),'')         AS sManageSvcSuplyMthd
            ,nvl(trim(GSD.S_INFRSTRCTR_SUPLY_MTHD),'')         AS sInfrstrctrSuplyMthd
            ,nvl(trim(GSD.S_SCRTY_POLICY),'')                  AS sScrtyPolicy
            ,nvl(trim(GSD.S_DATA_ENCPT_AT_MTHD),'')            AS sDataEncptAtMthd
            ,nvl(trim(GSD.S_BACKUP_RECOVRY_POLICY),'')         AS sBackupRecovryPolicy
            ,nvl(trim(GSD.S_USER_CRTFC_SCRTY_PRTC_POLICY),'')  AS sUserCrtfcScrtyPrtcPolicy
            ,nvl(trim(GSD.S_MULTI_PLTFOM_SPORT_AT),'')         AS sMultiPltfomSportAt
            ,nvl(trim(GSD.S_SPORT_OPERSYSM_LIST),'')           AS sSportOpersysmList
            ,nvl(trim(GSD.S_SPORT_WBSR_LIST),'')               AS sSportWbsrList
            ,nvl(trim(GSD.S_SPORT_MOBILE_PLTFOM_LIST),'')      AS sSportMobilePltfomList
            ,nvl(trim(GSD.S_OPEN_STD_SPORT_AT),'')             AS sOpenStdSportAt
            ,nvl(trim(GSD.S_GVRN_FRMWRK_SPORT_AT),'')          AS sGvrnFrmwrkSportAt
            ,nvl(trim(GSD.S_OPEN_SOURC_SW_AT),'')              AS sOpenSourcSwAt
            ,nvl(trim(GSD.S_PAASTA_AT),'')                     AS sPaastaAt
            ,nvl(trim(GSD.S_SOURC_OTHBC_AT),'')                AS sSourcOthbcAt
            ,nvl(trim(GSD.S_API_ACCESS_SPORT_AT),'')           AS sApiAccessSportAt
            ,nvl(trim(GSD.S_DB_MIGRATION_SPORT_AT),'')         AS sDbMigrationSportAt
            ,nvl(trim(GSD.S_EXTRL_APPLICATION_SPORT_AT),'')    AS sExtrlApplicationSportAt
            ,nvl(trim(GSD.S_SUB_TENANCY_SPORT_AT),'')          AS sSubTenancySportAt
            ,nvl(trim(GSD.S_CSTMZNG_POSBL_AT),'')              AS sCstmzngPosblAt
            ,nvl(trim(GSD.S_DEVLOP_SPORT_ETC),'')              AS sDevlopSportEtc
            ,nvl(trim(GSD.C_SPCLTY_REALM),'')                  AS cSpcltyRealm
            ,nvl(trim(GSD.C_INDC_WHOLE),'')                    AS cIndcWhole
            ,nvl(trim(GSD.C_SETUP_MGR),'')                     AS cSetupMgr
            ,nvl(trim(GSD.C_HOLD_QUALF),'')                    AS cHoldQualf
            ,nvl(trim(GSD.C_HOLD_TCHNLGY),'')                  AS cHoldTchnlgy
            ,nvl(trim(GSD.C_INFRSTRCTR),'')                    AS cInfrstrctr
            ,nvl(trim(GSD.C_INFRSTRCTR_ETC),'')                AS cInfrstrctrEtc
            ,nvl(trim(GSD.C_PLTFOM),'')                        AS cPltfom
            ,nvl(trim(GSD.C_PLTFOM_ETC),'')                    AS cPltfomEtc
            ,nvl(trim(GSD.C_PRJCT_EXPRNC),'')                  AS cPrjctExprnc
            ,nvl(trim(GSD.C_CNSL_RELM),'')                     AS cCnslRelm
            ,nvl(trim(GSD.C_CNSL_RELM_ETC),'')                 AS cCnslRelmEtc
            ,nvl(trim(GSD.C_CNSL_SCOPE),'')                    AS cCnslScope
            ,DECODE(GSD.C_DETAIL_SVC,NULL,'',GSD.C_DETAIL_SVC) AS cDetailSvc
            ,nvl(trim(GSD.C_EXC_PD),'')                        AS cExcPd
            ,nvl(trim(GSD.C_EXC_PD_ETC),'')                    AS cExcPdEtc
            ,nvl(trim(GSD.C_EXC_AREA),'')                      AS cExcArea
            ,nvl(trim(GSD.C_BEFFAT_CNSL_AT),'')                AS cBeffatCnslAt
            ,nvl(trim(GSD.C_CNSL_PC),'')                       AS cCnslPc
            ,nvl(trim(GSD.ENTR_DATE),'')                       AS entrDate
            ,nvl(trim(GSD.USER_ID),'')                         AS userId
            ,''                         		 AS chgItemContent    
        FROM TST_GOOD_SPEC_DESCRIBE_I GSD 
       WHERE GSD.GOODS_CODE = #{GoodsCode}   
       AND GSD.GOODS_NUM = (					
							SELECT MAX(GOODS_NUM)
							FROM TST_GOOD_SPEC_DESCRIBE_I 
    						WHERE GOODS_CODE = #{GoodsCode} 
    					   )    	
    </select>
    <select id="specInfoUpdate_2" parameterType="map" resultType="GoodsSpecDescribeVO">
    
    /*_webGoods.specInfoUpdate_2*/

    SELECT nvl(trim(GSD.GOODS_CODE),'')                      AS goodsCode
            ,nvl(trim(GSD.GOODS_NUM),'')                       AS goodsNum
            ,nvl(trim(GSD.CMPNY_NM),'')                        AS cmpnyNm
            ,nvl(trim(GSD.CMPNY_FOND_YEAR),'')                 AS cmpnyFondYear
            ,nvl(trim(GSD.ENTRPRS_SE),'')                      AS entrprsSe
            ,(SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE GROUP_CD=2075 AND LANG_CODE = '00' AND INDVDLZ_CD = nvl(trim(GSD.ENTRPRS_SE),'')) AS entrprsSeNm
            ,nvl(trim(GSD.CMPNY_INTRCN),'')                    AS cmpnyIntrcn
            ,nvl(trim(GSD.BSNS_REALM),'')                      AS bsnsRealm
            ,nvl(trim(GSD.MAIN_REFER),'')                      AS mainRefer
            ,nvl(trim(GSD.SVC_NM),'')                          AS svcNm
            ,nvl(trim(GSD.SVC_DFN_SFE),'')                     AS svcDfnSfe
            ,nvl(trim(GSD.SVC_EXPC_EFFECT),'')                 AS svcExpcEffect
            ,nvl(trim(GSD.SVC_TY),'')                          AS svcTy
            ,nvl(trim(GSD.SVC_ENTRPRS_SUPLY_TY),'')            AS svcEntrprsSuplyTy
            ,(SELECT INDVDLZ_CD_NM FROM OP_CODE_INDVDLZ WHERE GROUP_CD=2055 AND LANG_CODE = '00' AND INDVDLZ_CD = nvl(trim(GSD.SVC_ENTRPRS_SUPLY_TY),'')) AS svcEntrprsSuplyTyNm
			      ,(SELECT INDVDLZ_CD_NM AS dueStdrMumm FROM OP_CODE_INDVDLZ WHERE 1=1 AND LANG_CODE = '00' AND GROUP_CD = '2077' AND INDVDLZ_CD = nvl(trim(GSD.DUE_STDR_MUMM),'')) AS dueStdrMumm            
            ,nvl(trim(GSD.SVC_PC),'')                          AS svcPc
            ,DECODE(nvl(trim(GSD.SVC_PC_VAT),''),'Y','예','아니오') AS svcPcVat
			      ,(SELECT INDVDLZ_CD_NM AS svcPcUntCd FROM OP_CODE_INDVDLZ WHERE 1=1 AND LANG_CODE = '00' AND GROUP_CD = '2085' AND INDVDLZ_CD = nvl(trim(GSD.SVC_PC_UNT_CD),'')) AS svcPcUntCd            
            ,nvl(trim(GSD.MUMM_CNTRCTPD),'')                   AS mummCntrctpd
            ,nvl(trim(GSD.PC_TABLE_ATCH_AT),'')                AS pcTableAtchAt
            ,nvl(trim(GSD.VAT_INCLS_AT),'')                    AS vatInclsAt
            ,nvl(trim(GSD.SVC_BEGIN_PROCSS),'')                AS svcBeginProcss
            ,nvl(trim(GSD.SVC_END_PROCSS),'')                  AS svcEndProcss
            ,nvl(trim(GSD.AT_SVC_EVL),'')                      AS atSvcEvl
            ,nvl(trim(GSD.SVC_EVL_SUPLY_PD),'')                AS svcEvlSuplyPd
            ,nvl(trim(GSD.SVC_CHARGER_NM),'')                  AS svcChargerNm
            ,nvl(trim(GSD.svc_charger_cttpc),'')               AS svcChargerCttpc
            ,nvl(trim(GSD.SVC_CHARGER_TELNO),'')               AS svcChargerTelno
            ,nvl(trim(GSD.SVC_CHARGER_EMAIL),'')               AS svcChargerEmail
            ,nvl(trim(GSD.SVC_CHARGER_MBTL_NUM	),'')		 AS svcChargerMbtlNum
            ,nvl(trim(GSD.GNRLZ_SOPMAL_REGIST_AT),'')          AS gnrlzSopmalRegistAt
            ,nvl(trim(GSD.PRIVATE_CLOUD_AT),'')                AS privateCloudAt
            ,nvl(trim(GSD.PUBLIC_CLOUD_AT),'')                 AS publicCloudAt
            ,nvl(trim(GSD.HYBRID_CLOUD_AT),'')                 AS hybridCloudAt
            ,nvl(trim(GSD.KISA_CRTFC_AT),'')                   AS kisaCrtfcAt
            ,nvl(trim(GSD.CLOUD_SVC_QLITY_CRTFC_AT),'')        AS cloudSvcQlityCrtfcAt
            ,nvl(trim(GSD.CLOUD_SVC_CNFIRM_AT),'')             AS cloudSvcCnfirmAt
            ,nvl(trim(GSD.CC_CRTFC_AT),'')                     AS ccCrtfcAt
            ,nvl(trim(GSD.GS_CRTFC_AT),'')                     AS gsCrtfcAt

            ,Decode(GSD.SLA_APPLC_AT,'Y','예','아니오')        AS slaApplcAt
            ,nvl(trim(GSD.SVC_USEFUL),'')                      AS svcUseful

            ,Decode(GSD.ATMC_ESTN_SPORT_AT,'Y','예','아니오')              AS atmcEstnSportAt
            ,Decode(GSD.CLUSTERING_SPORT_AT,'Y','예','아니오')             AS clusteringSportAt
            ,Decode(GSD.SFSRV_PROVISIONING_SPORT_AT,'Y','예','아니오')     AS sfsrvProvisioningSportAt

            ,nvl(trim(GSD.SVC_PROVISIONING_TIME),'')           AS svcProvisioningTime
            ,nvl(trim(GSD.SVC_PROVISIONING_RELIS_TIME),'')     AS svcProvisioningRelisTime

			,(SELECT AK.indvdlz_cd_nm FROM op_code_indvdlz AK WHERE 1=1 AND AK.indvdlz_cd = GSD.DATA_CNTER_LC_INFO AND AK.group_cd = '2079') AS dataCnterLcInfo         /* 데이터센터 국내, 외 위치 정보명  */            

            ,nvl(trim(GSD.DATA_CNTER_HBRD_LC_INFO),'')         AS dataCnterHbrdLcInfo
            ,nvl(trim(GSD.DSSTRRECOVRY_PLAN),'')               AS dsstrrecovryPlan
            ,nvl(trim(GSD.DATA_EXTRC_PROCSS),'')               AS dataExtrcProcss
            ,nvl(trim(GSD.UNUSE_DATA_PRTC_POLICY),'')          AS unuseDataPrtcPolicy
            ,nvl(trim(GSD.SAFE_DATA_DELETE_POLICY),'')         AS safeDataDeletePolicy
            ,decode(GSD.SVC_MANAGE_STTUS_INFO_SUPLY,'Y','예','아니오')     AS svcManageSttusInfoSuply
            ,decode(GSD.SVC_USE_LOG_SUPLY_AT,'Y','예','아니오')            AS svcUseLogSuplyAt
            ,nvl(trim(GSD.TROBL_MANAGE_REPRT_POLICY),'')       AS troblManageReprtPolicy
            ,decode(GSD.API_SPORT_AT,'Y','예','아니오')                    AS apiSportAt
            ,nvl(trim(GSD.API_SPORT_TY),'')                    AS apiSportTy

            ,decode(GSD.USER_MNL_SUPLY_AT,'Y','예','아니오')               AS userMnlSuplyAt
            
            ,decode(GSD.USER_MNL_INFO_AT,'Y','예','아니오') || '/' || nvl(trim(GSD.USER_MNL_INFO_INPUT),'')                AS userMnlInfoAt
            ,nvl(trim(GSD.USER_MNL_INFO_INPUT),'')             AS userMnlInfoInput

            ,decode(GSD.USER_EDC_SPORT_AT,'Y','예','아니오') || '/' || nvl(trim(GSD.USER_EDC_SPORT_INPUT),'')              AS userEdcSportAt
            ,nvl(trim(GSD.USER_EDC_SPORT_INPUT),'')            AS userEdcSportInput

            ,nvl(trim(GSD.USER_EDC_INFO),'')                   AS userEdcInfo
            
            ,decode(GSD.VISIT_EDC_SPORT_AT,'Y','예','아니오')              AS visitEdcSportAt
            ,decode(GSD.VISIT_TCHNLGY_SPORT_AT,'Y','예','아니오')          AS visitTchnlgySportAt
            ,decode(GSD.VISIT_ELSE_TCHNLGY_SPORT_AT,'Y','예','아니오')     AS visitElseTchnlgySportAt
            
            ,decode(GSD.CSTMR_CNTER_OPER_AT,'Y','예','아니오') || '/' || nvl(trim(GSD.CSTMR_CNTER_OPER_TIME),'')          AS cstmrCnterOperAt
            ,nvl(trim(GSD.CSTMR_CNTER_OPER_TIME),'')           AS cstmrCnterOperTime
            
            ,nvl(trim(GSD.I_OTHBC_STD_SPORT_DOC),'')           AS iOthbcStdSportDoc
            ,nvl(trim(GSD.I_SVC_DIRECT_CNNC_NTWRK),'')         AS iSvcDirectCnncNtwrk
            ,nvl(trim(GSD.I_VIRTL_NTWRK_SPORT),'')             AS iVirtlNtwrkSport
            ,nvl(trim(GSD.I_SYNCHRN_SPORT_AT),'')              AS iSynchrnSportAt
            ,nvl(trim(GSD.I_SPORT_EQPMN_LIST),'')              AS iSportEqpmnList
            ,nvl(trim(GSD.I_SERVER_COMPUTER_SVC),'')           AS iServerComputerSvc
            ,nvl(trim(GSD.I_STRGE_SVC),'')                     AS iStrgeSvc
            ,nvl(trim(GSD.I_NTWRK_SVC),'')                     AS iNtwrkSvc
            ,nvl(trim(GSD.I_SCRTY_SVC),'')                     AS iScrtySvc
            ,nvl(trim(GSD.I_MANAGE_SVC),'')                    AS iManageSvc
            ,nvl(trim(GSD.I_ETC_SVC),'')                       AS iEtcSvc
            ,nvl(trim(GSD.P_SECURE_DEVLOP),'')                 AS pSecureDevlop
            ,nvl(trim(GSD.P_SECURE_DCT_WDTB),'')               AS pSecureDctWdtb
            ,nvl(trim(GSD.P_SPORT_LANG),'')                    AS pSportLang
            ,nvl(trim(GSD.P_SPORT_PLTFOM),'')                  AS pSportPltfom
            ,nvl(trim(GSD.P_SPORT_CONTAINER_VER),'')           AS pSportContainerVer
            ,nvl(trim(GSD.P_SPORT_DATA_STORGE),'')             AS pSportDataStorge
            ,nvl(trim(GSD.P_SUB_TENANCY_SPORT_AT),'')          AS pSubTenancySportAt
            ,nvl(trim(GSD.P_DVLPR_UNT_INFO),'')                AS pDvlprUntInfo
            ,nvl(trim(GSD.P_SDK_API_SUPLY_AT),'')              AS pSdkApiSuplyAt
            ,nvl(trim(GSD.P_TEST_DEBUGING_SPORT_AT),'')        AS pTestDebugingSportAt
            ,nvl(trim(GSD.P_ADDON_SVC_MARKPLACE_SPORT_AT),'')  AS pAddonSvcMarkplaceSportAt
            ,nvl(trim(GSD.P_CISPORT_SPORT),'')                 AS pCisportSport
            ,nvl(trim(GSD.P_LOGING_MNTRNG_SPORT),'')           AS pLogingMntrngSport
            ,nvl(trim(GSD.P_LOAD_BALANCING_SPORT),'')          AS pLoadBalancingSport
            ,nvl(trim(GSD.S_USER_SVC_SUPLY_MTHD),'')           AS sUserSvcSuplyMthd
            ,nvl(trim(GSD.S_MANAGE_SVC_SUPLY_MTHD),'')         AS sManageSvcSuplyMthd
            ,nvl(trim(GSD.S_INFRSTRCTR_SUPLY_MTHD),'')         AS sInfrstrctrSuplyMthd
            ,nvl(trim(GSD.S_SCRTY_POLICY),'')                  AS sScrtyPolicy
            ,nvl(trim(GSD.S_DATA_ENCPT_AT_MTHD),'')            AS sDataEncptAtMthd
            ,nvl(trim(GSD.S_BACKUP_RECOVRY_POLICY),'')         AS sBackupRecovryPolicy
            ,nvl(trim(GSD.S_USER_CRTFC_SCRTY_PRTC_POLICY),'')  AS sUserCrtfcScrtyPrtcPolicy
            ,nvl(trim(GSD.S_MULTI_PLTFOM_SPORT_AT),'')         AS sMultiPltfomSportAt
            ,nvl(trim(GSD.S_SPORT_OPERSYSM_LIST),'')           AS sSportOpersysmList
            ,nvl(trim(GSD.S_SPORT_WBSR_LIST),'')               AS sSportWbsrList
            ,nvl(trim(GSD.S_SPORT_MOBILE_PLTFOM_LIST),'')      AS sSportMobilePltfomList
            ,nvl(trim(GSD.S_OPEN_STD_SPORT_AT),'')             AS sOpenStdSportAt
            ,nvl(trim(GSD.S_GVRN_FRMWRK_SPORT_AT),'')          AS sGvrnFrmwrkSportAt
            ,nvl(trim(GSD.S_OPEN_SOURC_SW_AT),'')              AS sOpenSourcSwAt
            ,nvl(trim(GSD.S_PAASTA_AT),'')                     AS sPaastaAt
            ,nvl(trim(GSD.S_SOURC_OTHBC_AT),'')                AS sSourcOthbcAt
            ,nvl(trim(GSD.S_API_ACCESS_SPORT_AT),'')           AS sApiAccessSportAt
            ,nvl(trim(GSD.S_DB_MIGRATION_SPORT_AT),'')         AS sDbMigrationSportAt
            ,nvl(trim(GSD.S_EXTRL_APPLICATION_SPORT_AT),'')    AS sExtrlApplicationSportAt
            ,nvl(trim(GSD.S_SUB_TENANCY_SPORT_AT),'')          AS sSubTenancySportAt
            ,nvl(trim(GSD.S_CSTMZNG_POSBL_AT),'')              AS sCstmzngPosblAt
            ,nvl(trim(GSD.S_DEVLOP_SPORT_ETC),'')              AS sDevlopSportEtc
            ,nvl(trim(GSD.C_SPCLTY_REALM),'')                  AS cSpcltyRealm
            ,nvl(trim(GSD.C_INDC_WHOLE),'')                    AS cIndcWhole
            ,nvl(trim(GSD.C_SETUP_MGR),'')                     AS cSetupMgr
            ,nvl(trim(GSD.C_HOLD_QUALF),'')                    AS cHoldQualf
            ,nvl(trim(GSD.C_HOLD_TCHNLGY),'')                  AS cHoldTchnlgy
            ,nvl(trim(GSD.C_INFRSTRCTR),'')                    AS cInfrstrctr
            ,nvl(trim(GSD.C_INFRSTRCTR_ETC),'')                AS cInfrstrctrEtc
            ,nvl(trim(GSD.C_PLTFOM),'')                        AS cPltfom
            ,nvl(trim(GSD.C_PLTFOM_ETC),'')                    AS cPltfomEtc
            ,nvl(trim(GSD.C_PRJCT_EXPRNC),'')                  AS cPrjctExprnc
            ,nvl(trim(GSD.C_CNSL_RELM),'')                     AS cCnslRelm
            ,nvl(trim(GSD.C_CNSL_RELM_ETC),'')                 AS cCnslRelmEtc
            ,nvl(trim(GSD.C_CNSL_SCOPE),'')                    AS cCnslScope
            ,DECODE(GSD.C_DETAIL_SVC,NULL,'',GSD.C_DETAIL_SVC) AS cDetailSvc
            ,nvl(trim(GSD.C_EXC_PD),'')                        AS cExcPd
            ,nvl(trim(GSD.C_EXC_PD_ETC),'')                    AS cExcPdEtc
            ,nvl(trim(GSD.C_EXC_AREA),'')                      AS cExcArea
            ,nvl(trim(GSD.C_BEFFAT_CNSL_AT),'')                AS cBeffatCnslAt
            ,nvl(trim(GSD.C_CNSL_PC),'')                       AS cCnslPc
            ,nvl(trim(GSD.ENTR_DATE),'')                       AS entrDate
            ,nvl(trim(GSD.USER_ID),'')                         AS userId
            ,nvl(trim(GSD.CHG_ITEM_CONTENT),'')            	 AS chgItemContent                 
        FROM TST_GOOD_SPEC_DESCRIBE_I_TMP GSD 
       WHERE GSD.GOODS_CODE = #{GoodsCode}   
       AND GSD.GOODS_NUM = (					
							SELECT MAX(GOODS_NUM)
							FROM TST_GOOD_SPEC_DESCRIBE_I_TMP 
    						WHERE GOODS_CODE = #{GoodsCode} 
    					   )    	
    </select>
    
    <update id="mergeGoodsManage1">
    /*_webGoods.mergeGoodsManage1*/
    
	    MERGE INTO TST_GOOD_INFO_I A
	             USING DB_ROOT
	                ON A.GOODS_CODE = #{goodsCode} 
	 	WHEN MATCHED THEN
             UPDATE SET A.GOODS_NM          = #{goodsNm}
                      , A.GOODS_KND_CD      = #{goodsKndCd}
                      , A.ITEM_VOD_URL      = #{itemVodUrl}
                      , A.GOODS_DWLD_URL    = #{goodsDwldUrl}
                      , A.GOODS_MONITOR_URL = #{goodsMonitorUrl}
 		WHEN NOT MATCHED THEN
                       INSERT ( A.GOODS_CODE
                              , A.GOODS_NM 
                              , A.GOODS_KND_CD
                              , A.ITEM_VOD_URL
                              , A.GOODS_DWLD_URL 
                              , A.GOODS_MONITOR_URL
                              , A.REGIST_ID
                              , A.GOODS_REGIST_STTUS
                              , A.LANG_CODE
                              , A.USER_ID
                              )
                       VALUES ( #{goodsCode}
                              , #{goodsNm}
                              , #{goodsKndCd}
                              , #{itemVodUrl}
                              , #{goodsDwldUrl}
                              , #{goodsMonitorUrl}
                              , #{registId}
                              , #{goodsRegistSttus}
                              , #{langCode}
                              , #{userId}
                              )

    </update>
    <update id="mergeGoodsManageTmp1">
    /*_webGoods.mergeGoodsManageTmp1*/
    
	    MERGE INTO TST_GOOD_INFO_I_TMP A
	             USING DB_ROOT
	                ON A.GOODS_CODE = #{goodsCode} 
	 	WHEN MATCHED THEN
             UPDATE SET A.GOODS_NM          = #{goodsNm}
                      , A.GOODS_KND_CD      = #{goodsKndCd}
                      , A.ITEM_VOD_URL      = #{itemVodUrl}
                      , A.GOODS_DWLD_URL    = #{goodsDwldUrl}
                      , A.GOODS_MONITOR_URL = #{goodsMonitorUrl}
                      , A.GOODS_REGIST_STTUS = 1001              
                      , A.GOODS_STAT 	     = 1001                      
                      , A.UPDT_ID			= #{updtId}
                      , A.UPDT_DT           = SYSDATETIME             
 		WHEN NOT MATCHED THEN
                       INSERT ( A.GOODS_CODE
                              , A.GOODS_NM 
                              , A.GOODS_KND_CD
                              , A.ITEM_VOD_URL
                              , A.GOODS_DWLD_URL 
                              , A.GOODS_MONITOR_URL
                              , A.REGIST_ID
                              , A.GOODS_REGIST_STTUS
                              , A.LANG_CODE
                              , A.USER_ID
                              )
                       VALUES ( #{goodsCode}
                              , #{goodsNm}
                              , #{goodsKndCd}
                              , #{itemVodUrl}
                              , #{goodsDwldUrl}
                              , #{goodsMonitorUrl}
                              , #{registId}
                              , #{goodsRegistSttus}
                              , #{langCode}
                              , #{userId}
                              )

    </update>
    
    <update id="mergeGoodsSpecDescribe1">
    
    /*_webGoods.mergeGoodsSpecDescribe1*/
    
	        MERGE INTO TST_GOOD_SPEC_DESCRIBE_I A
	             USING DB_ROOT
	                ON A.GOODS_CODE = #{goodsCode}
	               AND A.GOODS_NUM =  1  
	 WHEN MATCHED THEN
	                   UPDATE SET A.DUE_STDR_MUMM = #{dueStdrMumm}
	                            , A.SVC_PC        = #{svcPc}        /*서비스가격*/
	                            , A.SVC_PC_UNT_CD = #{svcPcUntCd}   /*서비스가격 통화단위*/   
	                            , A.SVC_PC_VAT    = #{svcPcVat}   /*서비스가격 통화단위*/   
	                            , A.MUMM_CNTRCTPD = #{mummCntrctpd} 
 WHEN NOT MATCHED THEN
                       INSERT ( A.GOODS_CODE
                              , A.GOODS_NUM 
                              , A.DUE_STDR_MUMM
                              , A.SVC_PC               /*서비스가격*/
                              , A.SVC_PC_UNT_CD        /*서비스가격 통화단위*/
							  , A.SVC_PC_VAT
                              , A.MUMM_CNTRCTPD 
                              )
                       VALUES ( #{goodsCode}
                              , 1
                              , #{dueStdrMumm}
                              , #{svcPc}              /*서비스가격*/
                              , #{svcPcUntCd}         /*서비스가격 통화단위*/
                              , #{svcPcVat}
                              , #{mummCntrctpd}
                              )
                       
    </update>
    <update id="mergeGoodsSpecDescribeTmp1">
    
    /*_webGoods.mergeGoodsSpecDescribeTmp1*/
    
	        MERGE INTO TST_GOOD_SPEC_DESCRIBE_I_TMP A
	             USING DB_ROOT
	                ON A.GOODS_CODE = #{goodsCode}
	               AND A.GOODS_NUM =   (SELECT MAX(distinct Z.goods_num) AS goods_num FROM TST_GOOD_SPEC_DESCRIBE_I_TMP Z WHERE Z.goods_code = #{goodsCode} and A.goods_code = Z.goods_code)  
	 WHEN MATCHED THEN
	                   UPDATE SET A.DUE_STDR_MUMM = #{dueStdrMumm}
	                            , A.SVC_PC        = #{svcPc}        /*서비스가격*/
	                            , A.SVC_PC_UNT_CD = #{svcPcUntCd}   /*서비스가격 통화단위*/
								, A.SVC_PC_VAT    = #{svcPcVat}   /*서비스가격 통화단위*/
	                            , A.MUMM_CNTRCTPD = #{mummCntrctpd} 
	                            , A.UPDT_ID 	  = #{updtId}	                            
	                            , A.UPDT_DT 	  = SYSDATETIME	                            
 WHEN NOT MATCHED THEN
                       INSERT ( A.GOODS_CODE
                              , A.GOODS_NUM 
                              , A.DUE_STDR_MUMM
                              , A.SVC_PC               /*서비스가격*/
                              , A.SVC_PC_UNT_CD        /*서비스가격 통화단위*/
							  , A.SVC_PC_VAT                              
                              , A.MUMM_CNTRCTPD 
                              )
                       VALUES ( #{goodsCode}
                              , 1
                              , #{dueStdrMumm}
                              , #{svcPc}              /*서비스가격*/
                              , #{svcPcUntCd}         /*서비스가격 통화단위*/
                              , #{svcPcVat}                              
                              , #{mummCntrctpd}
                              )
                       
    </update>
    
        
    <update id="mergeGoodsManage2">
    
    /*_webGoods.mergeGoodsManage2*/
    
        UPDATE TST_GOOD_INFO_I A
           SET A.GOODS_SUMRY        = #{goodsSumry}  /* 서비스개요 */
             , A.ITEM_SFE           = #{itemSfe}     /*특장점*/
             , A.GOODS_REFER        = #{goodsRefer}  /*대상고객*/
             , A.GOODS_MAIN_FNCT    = #{goodsMainFnct} /*주요기능*/
             
             
             , A.GOODS_MAKR         = #{goodsMakr} /*제조사*/
             , A.COMOU_DE           = #{comouDe}   /*출시일*/
       		 
         WHERE A.GOODS_CODE = #{goodsCode}       

    </update>
     <update id="mergeGoodsManageTmp2">
    
    /*_webGoods.mergeGoodsManageTmp2*/
    
        UPDATE TST_GOOD_INFO_I_TMP A
           SET A.GOODS_SUMRY        = #{goodsSumry}  /* 서비스개요 */
             , A.ITEM_SFE           = #{itemSfe}     /*특장점*/
             , A.GOODS_REFER        = #{goodsRefer}  /*대상고객*/
             , A.GOODS_MAIN_FNCT    = #{goodsMainFnct} /*주요기능*/
             , A.GOODS_MAKR         = #{goodsMakr} /*제조사*/
             , A.COMOU_DE           = #{comouDe}   /*출시일*/
             , A.GOODS_REGIST_STTUS = 1001              
             , A.GOODS_STAT 	    = 1001                      
             , A.UPDT_ID			= #{updtId}
             , A.UPDT_DT           = SYSDATETIME             
         WHERE A.GOODS_CODE = #{goodsCode}         

    </update>
    
    <update id="mergeGoodsSpecDescribe2">
    
    /*_webGoods.mergeGoodsSpecDescribe2*/
    
      UPDATE TST_GOOD_SPEC_DESCRIBE_I A
         SET A.MAIN_REFER         = #{mainRefer}       /*주요 레퍼런스 (등록 서비스 기준)*/
           , A.SVC_DFN_SFE        = #{svcDfnSfe}       /*서비스 정의 및 특징*/
           , A.SVC_EXPC_EFFECT    = #{svcExpcEffect}   /*서비스 기대효과*/
           , A.DATA_CNTER_LC_INFO = #{dataCnterLcInfo} 
       	   , A.DSSTRRECOVRY_PLAN  = #{dsstrrecovryPlan}
       	   , A.DATA_EXTRC_PROCSS  = #{dataExtrcProcss}
      WHERE A.GOODS_CODE = #{goodsCode} 
        AND A.GOODS_NUM =  1        
                       
    </update>
    <update id="mergeGoodsSpecDescribeTmp2">
    
    /*_webGoods.mergeGoodsSpecDescribeTmp2*/
    
      UPDATE TST_GOOD_SPEC_DESCRIBE_I_TMP A
         SET A.MAIN_REFER         = #{mainRefer}       /*주요 레퍼런스 (등록 서비스 기준)*/
           , A.SVC_DFN_SFE        = #{svcDfnSfe}       /*서비스 정의 및 특징*/
           , A.SVC_EXPC_EFFECT    = #{svcExpcEffect}   /*서비스 기대효과*/
           , A.DATA_CNTER_LC_INFO = #{dataCnterLcInfo} 
       	   , A.DSSTRRECOVRY_PLAN  = #{dsstrrecovryPlan}
       	   , A.DATA_EXTRC_PROCSS  = #{dataExtrcProcss}
           , A.UPDT_ID           = #{updtId} /*수정자*/        
           , A.UPDT_DT           = SYSDATETIME             
      WHERE A.GOODS_CODE = #{goodsCode} 
        AND A.GOODS_NUM =  (SELECT MAX(distinct Z.goods_num) AS goods_num FROM TST_GOOD_SPEC_DESCRIBE_I_TMP Z WHERE Z.goods_code = #{goodsCode} and A.goods_code = Z.goods_code)       
                       
    </update>
    
        
    <update id="mergeGoodsManage3">
    
    /*_webGoods.mergeGoodsManage3*/
    
        UPDATE TST_GOOD_INFO_I A
           SET A.sla_Applc_At = #{slaApplcAt}
         WHERE A.GOODS_CODE = #{goodsCode}       

    </update>
    <update id="mergeGoodsManageTmp3">
    
    /*_webGoods.mergeGoodsManageTmp3*/
    
        UPDATE TST_GOOD_INFO_I_TMP A
           SET A.sla_Applc_At = #{slaApplcAt}
             , A.UPDT_ID	  = #{updtId}
             , A.UPDT_DT      = SYSDATETIME             
         WHERE A.GOODS_CODE = #{goodsCode}       

    </update>
	<insert id="insertGoodsSpecDescribe3" parameterType="goodsManageVO">
	/*_webGoods.insertGoodsSpecDescribe3*/
        INSERT INTO tst_good_spec_describe_i
                SET   goods_code                      = #{goodsCode}
                	, goods_num                       = 1
                	, goods_entr_date                 = SYSDATETIME
					, goods_use                       = 'Y'
	</insert>    
	<insert id="insertGoodsSpecDescribeTmp3" parameterType="goodsManageVO">
	/*_webGoods.insertGoodsSpecDescribeTmp3*/
        INSERT INTO tst_good_spec_describe_i_tmp
                SET   goods_code                      = #{goodsCode}
                	, goods_num                       = 1
                	, goods_entr_date                 = SYSDATETIME
					, goods_use                       = 'Y'
	</insert>    
    
    
    <update id="mergeGoodsSpecDescribe3">
    
    /*_webGoods.mergeGoodsSpecDescribe3*/
    
      UPDATE TST_GOOD_SPEC_DESCRIBE_I A
         SET
                    
           /* 3-1. 서비스 기술정보 */
    
             A.SVC_BEGIN_PROCSS                    = #{svcBeginProcss}            /*서비스 시작 절차 */
           , A.SVC_END_PROCSS                      = #{svcEndProcss}              /*서비스 종료 절차 */
           , A.AT_SVC_EVL                          = #{atSvcEvl}                  /*서비스 평가판 제공여부  */
           , A.SVC_EVL_SUPLY_PD                    = #{svcEvlSuplyPd}             /*서비스 평가판 제공기간   */
           , A.SLA_APPLC_AT                        = #{slaApplcAt}                /*SLA 적용 여부 */
           , A.SVC_USEFUL                          = #{svcUseful}                 /*서비스 가용성 */
           , A.ATMC_ESTN_SPORT_AT                  = #{atmcEstnSportAt}           /*자동 확장 지원 여부 */
           , A.CLUSTERING_SPORT_AT                 = #{clusteringSportAt}         /*클러스터링 지원 여부 */
           , A.SFSRV_PROVISIONING_SPORT_AT         = #{sfsrvProvisioningSportAt}  /*셀프서비스 프로비저닝 지원 여부 */
           , A.SVC_PROVISIONING_TIME               = #{svcProvisioningTime}       /*서비스 프로비저닝 시간  */
           , A.SVC_PROVISIONING_RELIS_TIME         = #{svcProvisioningRelisTime}  /*서비스 프로비저닝 해제 시간 */           

           /* 3-2. 서비스 및 데이터 관리 정보 */
             
           , A.DATA_CNTER_LC_INFO                  = #{dataCnterLcInfo}          /* 데이터센터 국내, 외 위치 정보 */
           , A.DATA_CNTER_HBRD_LC_INFO             = #{dataCnterHbrdLcInfo}      /* 데이터센터 위치 정보  */
           , A.DSSTRRECOVRY_PLAN                   = #{dsstrrecovryPlan}         /* 재해복구계획   */
           , A.DATA_EXTRC_PROCSS                   = #{dataExtrcProcss}          /* 데이터 추출 절차  */
           , A.UNUSE_DATA_PRTC_POLICY              = #{unuseDataPrtcPolicy}      /* 미사용 데이터 보호 정책  */
           , A.SAFE_DATA_DELETE_POLICY             = #{safeDataDeletePolicy}     /* 안전한 데이터 삭제 정책  */
           , A.SVC_MANAGE_STTUS_INFO_SUPLY         = #{svcManageSttusInfoSuply}  /* 서비스 관리 및 현황 정보 제공  */
           , A.SVC_USE_LOG_SUPLY_AT                = #{svcUseLogSuplyAt}         /* 서비스 이용 로그 제공 여부  */
           , A.TROBL_MANAGE_REPRT_POLICY           = #{troblManageReprtPolicy}   /* 장애관리 및 보고 정책   */
           , A.API_SPORT_AT                        = #{apiSportAt}               /* API 지원 여부     */
           , A.API_SPORT_TY                        = #{apiSportTy}               /* API 지원 타입     */
    
           /* 3-3. 서비스 지원 정보 */

           , A.USER_MNL_SUPLY_AT                   = #{userMnlSuplyAt}            /* 사용자 매뉴얼 제공 여부  */
           , A.USER_EDC_SPORT_AT                   = #{userEdcSportAt}            /* 사용자 교육 지원 여부  */
           , A.USER_EDC_SPORT_INPUT                = #{userEdcSportInput}         /* 사용자 교육 지원 정보    */
           , A.VISIT_EDC_SPORT_AT                  = #{visitEdcSportAt}           /* 방문 교육 지원 여부  */
           , A.VISIT_TCHNLGY_SPORT_AT              = #{visitTchnlgySportAt}       /* 방문 기술 지원 여부  */
           , A.VISIT_ELSE_TCHNLGY_SPORT_AT         = #{visitElseTchnlgySportAt}   /* 방문 외 기술 지원 여부  */
           , A.CSTMR_CNTER_OPER_AT                 = #{cstmrCnterOperAt}          /* 고객센터 운영 여부 */
           , A.CSTMR_CNTER_OPER_TIME               = #{cstmrCnterOperTime}        /* 고객센터 운영 시간     */

           
           /* 3-4. 서비스형 소프트웨어(Saas) 관련 규격 정보 */

           , A.S_USER_SVC_SUPLY_MTHD               = #{sUserSvcSuplyMthd}          /* 사용자용 서비스 제공 방식  */
           , A.S_MANAGE_SVC_SUPLY_MTHD             = #{sManageSvcSuplyMthd}        /* 관리용 서비스 제공 방식 */
           , A.S_INFRSTRCTR_SUPLY_MTHD             = #{sInfrstrctrSuplyMthd}       /* 인프라 제공 방식 */
           , A.S_SCRTY_POLICY                      = #{sScrtyPolicy}               /* 보안 정책 */
           , A.S_DATA_ENCPT_AT_MTHD                = #{sDataEncptAtMthd}           /* 데이터 암호화 여부 및 방식 */
           , A.S_BACKUP_RECOVRY_POLICY             = #{sBackupRecovryPolicy}       /* 백업 및 복구 정책  */
           , A.S_USER_CRTFC_SCRTY_PRTC_POLICY      = #{sUserCrtfcScrtyPrtcPolicy}  /* 사용자 인증 및 보안 보호 정책 */
           , A.S_MULTI_PLTFOM_SPORT_AT             = #{sMultiPltfomSportAt}        /* 다중 플랫폼 지원 여부  */
           , A.S_SPORT_OPERSYSM_LIST               = #{sSportOpersysmList}         /* 지원 운영체계 목록  */
           , A.S_SPORT_WBSR_LIST                   = #{sSportWbsrList}             /* 지원 웹브라우저 목록 */
           , A.S_SPORT_MOBILE_PLTFOM_LIST          = #{sSportMobilePltfomList}     /* 지원 모바일 플랫폼 목록 */
           , A.S_OPEN_STD_SPORT_AT                 = #{sOpenStdSportAt}            /* 개방형 표준 지원 여부  */
           , A.S_GVRN_FRMWRK_SPORT_AT              = #{sGvrnFrmwrkSportAt}         /* 정부 프레임워크 지원 여부  */
           , A.S_OPEN_SOURC_SW_AT                  = #{sOpenSourcSwAt}             /* 오픈소스 SW 호환 여부 */
           , A.S_PAASTA_AT                         = #{sPaastaAt}                  /* PaaS-Ta 호환 여부 */
           , A.S_SOURC_OTHBC_AT                    = #{sSourcOthbcAt}              /* 소스 공개 여부  */
           , A.S_API_ACCESS_SPORT_AT               = #{sApiAccessSportAt}          /* 외부 API ACCESS 지원 여부 */
           , A.S_DB_MIGRATION_SPORT_AT             = #{sDbMigrationSportAt}        /* DB 마이그레이션 지원 여부 */
           , A.S_EXTRL_APPLICATION_SPORT_AT        = #{sExtrlApplicationSportAt}   /* 외부 응용프로그램 통합 지원 여부  */
           , A.S_SUB_TENANCY_SPORT_AT              = #{sSubTenancySportAt}         /* Sub-tenancy 지원 여부 */
           , A.S_CSTMZNG_POSBL_AT                  = #{sCstmzngPosblAt}            /* 커스터마이징 가능 여부  */
           , A.S_DEVLOP_SPORT_ETC                  = #{sDevlopSportEtc}            /* 개발지원 조건 및 기타 사항 */

           /* 3-4. 서비스형 소프트웨어(Paas) 관련 규격 정보 */
           
           , A.P_SECURE_DEVLOP                     = #{pSecureDevlop}              /* Secure 개발 */
           , A.P_SECURE_DCT_WDTB                   = #{pSecureDctWdtb}             /* Secure design, coding, testing 및 배포 */
           , A.P_SPORT_LANG                        = #{pSportLang}                 /* 지원 언어 */
           , A.P_SPORT_PLTFOM                      = #{pSportPltfom}               /* 지원 플랫폼  */
           , A.P_SPORT_CONTAINER_VER               = #{pSportContainerVer}         /* 지원 Container 및 버전 */
           , A.P_SPORT_DATA_STORGE                 = #{pSportDataStorge}           /* 지원 데이터 저장소  */
           , A.P_SUB_TENANCY_SPORT_AT              = #{pSubTenancySportAt}         /* Sub-tenancy 지원 여부 */
           , A.P_DVLPR_UNT_INFO                    = #{pDvlprUntInfo}              /* 개발자 도구 정보 */
           , A.P_SDK_API_SUPLY_AT                  = #{pSdkApiSuplyAt}             /* SDK/API 제공 여부 */
           , A.P_TEST_DEBUGING_SPORT_AT            = #{pTestDebugingSportAt}       /* 테스트 및 디버깅 지원 여부 */
           , A.P_ADDON_SVC_MARKPLACE_SPORT_AT      = #{pAddonSvcMarkplaceSportAt}  /* Add-on 서비스 및 마켓플레이스 지원 여부 */
           , A.P_CISPORT_SPORT                     = #{pCisportSport}              /* CI(Continuous Integration) 지원 */
           , A.P_LOGING_MNTRNG_SPORT               = #{pLogingMntrngSport}         /* 로깅/모니터링 지원  */
           , A.P_LOAD_BALANCING_SPORT              = #{pLoadBalancingSport}        /* Load Balancing 지원 */

           /* 3-4. 서비스형 소프트웨어(Iaas) 관련 규격 정보 */

           , A.I_OTHBC_STD_SPORT_DOC               = #{iOthbcStdSportDoc}    /* 공개표준 지원 및 문서   */
           , A.I_SVC_DIRECT_CNNC_NTWRK             = #{iSvcDirectCnncNtwrk}  /* 서비스에 직접 연결하는 네트워크  */
           , A.I_VIRTL_NTWRK_SPORT                 = #{iVirtlNtwrkSport}     /* 가상 네트워크 지원   */
           , A.I_SYNCHRN_SPORT_AT                  = #{iSynchrnSportAt}      /* 동기화 지원 여부  */
           , A.I_SPORT_EQPMN_LIST                  = #{iSportEqpmnList}      /* 지원 장비 목록   */
           , A.I_SERVER_COMPUTER_SVC               = #{iServerComputerSvc}   /* 서버/컴퓨터 서비스   */
           , A.I_STRGE_SVC                         = #{iStrgeSvc}            /* 스토리지 서비스   */
           , A.I_NTWRK_SVC                         = #{iNtwrkSvc}            /* 네트워크 서비스   */
           , A.I_SCRTY_SVC                         = #{iScrtySvc}            /* 보안 서비스   */
           , A.I_MANAGE_SVC                        = #{iManageSvc}           /* 관리 서비스   */
           , A.I_ETC_SVC                           = #{iEtcSvc}              /* 기타 서비스   */
    
           /* 3-1. 서비스형 소프트웨어(SCS) 관련 규격 정보 */
           
           , A.C_SPCLTY_REALM                      = #{cSpcltyRealm}    /* 전문분야  */
           , A.C_INDC_WHOLE                        = #{cIndcWhole}      /* 도입전반  */
           , A.C_SETUP_MGR                         = #{cSetupMgr}       /* Setup  Migration */
           , A.C_HOLD_QUALF                        = #{cHoldQualf}      /* 보유자격  */
           , A.C_HOLD_TCHNLGY                      = #{cHoldTchnlgy}    /* 보유기술  */
           , A.C_INFRSTRCTR                        = #{cInfrstrctr}     /* 컨설팅 가능 인프라 */
           , A.C_INFRSTRCTR_ETC                    = #{cInfrstrctrEtc}  /* 컨설팅 가능 인프라 기타*/
           , A.C_PLTFOM                            = #{cPltfom}         /* 컨설팅 가능 플랫폼 */
           , A.C_PLTFOM_ETC                        = #{cPltfomEtc}      /* 컨설팅 가능 플랫폼 기타*/
           , A.C_PRJCT_EXPRNC                      = #{cPrjctExprnc}    /* 프로젝트 경험 */
           , A.C_CNSL_RELM                         = #{cCnslRelm}       /* 컨설팅 영역 */
           , A.C_CNSL_RELM_ETC                     = #{cCnslRelmEtc}    /* 컨설팅 영역 기타*/
           , A.C_CNSL_SCOPE                        = #{cCnslScope}      /* 컨설팅 범위 */
           , A.C_DETAIL_SVC                        = #{cDetailSvc}      /* 컨설팅 가능 상세 서비스 */
           , A.C_EXC_PD                            = #{cExcPd}          /* 컨설팅 수행기간  */
           , A.C_EXC_PD_ETC                        = #{cExcPdEtc}       /* 컨설팅 수행기간 기타 */
           , A.C_EXC_AREA                          = #{cExcArea}        /* 컨설팅 수행 가능 지역  */
           , A.C_BEFFAT_CNSL_AT                    = #{cBeffatCnslAt}   /* 사전 컨설팅 가능 여부  */
           , A.C_CNSL_PC                           = 0         			/* 컨설팅 금액*/
                      
      WHERE A.GOODS_CODE = #{goodsCode} 
        AND A.GOODS_NUM =  1          
                       
    </update>
    <update id="mergeGoodsSpecDescribeTmp3">
    
    /*_webGoods.mergeGoodsSpecDescribeTmp3*/
    
      UPDATE TST_GOOD_SPEC_DESCRIBE_I_TMP A
         SET
                    
           /* 3-1. 서비스 기술정보 */
    
             A.SVC_BEGIN_PROCSS                    = #{svcBeginProcss}            /*서비스 시작 절차 */
           , A.SVC_END_PROCSS                      = #{svcEndProcss}              /*서비스 종료 절차 */
           , A.AT_SVC_EVL                          = #{atSvcEvl}                  /*서비스 평가판 제공여부  */
           , A.SVC_EVL_SUPLY_PD                    = #{svcEvlSuplyPd}             /*서비스 평가판 제공기간   */
           , A.SLA_APPLC_AT                        = #{slaApplcAt}                /*SLA 적용 여부 */
           , A.SVC_USEFUL                          = #{svcUseful}                 /*서비스 가용성 */
           , A.ATMC_ESTN_SPORT_AT                  = #{atmcEstnSportAt}           /*자동 확장 지원 여부 */
           , A.CLUSTERING_SPORT_AT                 = #{clusteringSportAt}         /*클러스터링 지원 여부 */
           , A.SFSRV_PROVISIONING_SPORT_AT         = #{sfsrvProvisioningSportAt}  /*셀프서비스 프로비저닝 지원 여부 */
           , A.SVC_PROVISIONING_TIME               = #{svcProvisioningTime}       /*서비스 프로비저닝 시간  */
           , A.SVC_PROVISIONING_RELIS_TIME         = #{svcProvisioningRelisTime}  /*서비스 프로비저닝 해제 시간 */           

           /* 3-2. 서비스 및 데이터 관리 정보 */
             
           , A.DATA_CNTER_LC_INFO                  = #{dataCnterLcInfo}          /* 데이터센터 국내, 외 위치 정보 */
           , A.DATA_CNTER_HBRD_LC_INFO             = #{dataCnterHbrdLcInfo}      /* 데이터센터 위치 정보  */
           , A.DSSTRRECOVRY_PLAN                   = #{dsstrrecovryPlan}         /* 재해복구계획   */
           , A.DATA_EXTRC_PROCSS                   = #{dataExtrcProcss}          /* 데이터 추출 절차  */
           , A.UNUSE_DATA_PRTC_POLICY              = #{unuseDataPrtcPolicy}      /* 미사용 데이터 보호 정책  */
           , A.SAFE_DATA_DELETE_POLICY             = #{safeDataDeletePolicy}     /* 안전한 데이터 삭제 정책  */
           , A.SVC_MANAGE_STTUS_INFO_SUPLY         = #{svcManageSttusInfoSuply}  /* 서비스 관리 및 현황 정보 제공  */
           , A.SVC_USE_LOG_SUPLY_AT                = #{svcUseLogSuplyAt}         /* 서비스 이용 로그 제공 여부  */
           , A.TROBL_MANAGE_REPRT_POLICY           = #{troblManageReprtPolicy}   /* 장애관리 및 보고 정책   */
           , A.API_SPORT_AT                        = #{apiSportAt}               /* API 지원 여부     */
           , A.API_SPORT_TY                        = #{apiSportTy}               /* API 지원 타입     */
    
           /* 3-3. 서비스 지원 정보 */

           , A.USER_MNL_SUPLY_AT                   = #{userMnlSuplyAt}            /* 사용자 매뉴얼 제공 여부  */
           , A.USER_EDC_SPORT_AT                   = #{userEdcSportAt}            /* 사용자 교육 지원 여부  */
           , A.USER_EDC_SPORT_INPUT                = #{userEdcSportInput}         /* 사용자 교육 지원 정보    */
           , A.VISIT_EDC_SPORT_AT                  = #{visitEdcSportAt}           /* 방문 교육 지원 여부  */
           , A.VISIT_TCHNLGY_SPORT_AT              = #{visitTchnlgySportAt}       /* 방문 기술 지원 여부  */
           , A.VISIT_ELSE_TCHNLGY_SPORT_AT         = #{visitElseTchnlgySportAt}   /* 방문 외 기술 지원 여부  */
           , A.CSTMR_CNTER_OPER_AT                 = #{cstmrCnterOperAt}          /* 고객센터 운영 여부 */
           , A.CSTMR_CNTER_OPER_TIME               = #{cstmrCnterOperTime}        /* 고객센터 운영 시간     */

           
           /* 3-4. 서비스형 소프트웨어(Saas) 관련 규격 정보 */

           , A.S_USER_SVC_SUPLY_MTHD               = #{sUserSvcSuplyMthd}          /* 사용자용 서비스 제공 방식  */
           , A.S_MANAGE_SVC_SUPLY_MTHD             = #{sManageSvcSuplyMthd}        /* 관리용 서비스 제공 방식 */
           , A.S_INFRSTRCTR_SUPLY_MTHD             = #{sInfrstrctrSuplyMthd}       /* 인프라 제공 방식 */
           , A.S_SCRTY_POLICY                      = #{sScrtyPolicy}               /* 보안 정책 */
           , A.S_DATA_ENCPT_AT_MTHD                = #{sDataEncptAtMthd}           /* 데이터 암호화 여부 및 방식 */
           , A.S_BACKUP_RECOVRY_POLICY             = #{sBackupRecovryPolicy}       /* 백업 및 복구 정책  */
           , A.S_USER_CRTFC_SCRTY_PRTC_POLICY      = #{sUserCrtfcScrtyPrtcPolicy}  /* 사용자 인증 및 보안 보호 정책 */
           , A.S_MULTI_PLTFOM_SPORT_AT             = #{sMultiPltfomSportAt}        /* 다중 플랫폼 지원 여부  */
           , A.S_SPORT_OPERSYSM_LIST               = #{sSportOpersysmList}         /* 지원 운영체계 목록  */
           , A.S_SPORT_WBSR_LIST                   = #{sSportWbsrList}             /* 지원 웹브라우저 목록 */
           , A.S_SPORT_MOBILE_PLTFOM_LIST          = #{sSportMobilePltfomList}     /* 지원 모바일 플랫폼 목록 */
           , A.S_OPEN_STD_SPORT_AT                 = #{sOpenStdSportAt}            /* 개방형 표준 지원 여부  */
           , A.S_GVRN_FRMWRK_SPORT_AT              = #{sGvrnFrmwrkSportAt}         /* 정부 프레임워크 지원 여부  */
           , A.S_OPEN_SOURC_SW_AT                  = #{sOpenSourcSwAt}             /* 오픈소스 SW 호환 여부 */
           , A.S_PAASTA_AT                         = #{sPaastaAt}                  /* PaaS-Ta 호환 여부 */
           , A.S_SOURC_OTHBC_AT                    = #{sSourcOthbcAt}              /* 소스 공개 여부  */
           , A.S_API_ACCESS_SPORT_AT               = #{sApiAccessSportAt}          /* 외부 API ACCESS 지원 여부 */
           , A.S_DB_MIGRATION_SPORT_AT             = #{sDbMigrationSportAt}        /* DB 마이그레이션 지원 여부 */
           , A.S_EXTRL_APPLICATION_SPORT_AT        = #{sExtrlApplicationSportAt}   /* 외부 응용프로그램 통합 지원 여부  */
           , A.S_SUB_TENANCY_SPORT_AT              = #{sSubTenancySportAt}         /* Sub-tenancy 지원 여부 */
           , A.S_CSTMZNG_POSBL_AT                  = #{sCstmzngPosblAt}            /* 커스터마이징 가능 여부  */
           , A.S_DEVLOP_SPORT_ETC                  = #{sDevlopSportEtc}            /* 개발지원 조건 및 기타 사항 */

           /* 3-4. 서비스형 소프트웨어(Paas) 관련 규격 정보 */
           
           , A.P_SECURE_DEVLOP                     = #{pSecureDevlop}              /* Secure 개발 */
           , A.P_SECURE_DCT_WDTB                   = #{pSecureDctWdtb}             /* Secure design, coding, testing 및 배포 */
           , A.P_SPORT_LANG                        = #{pSportLang}                 /* 지원 언어 */
           , A.P_SPORT_PLTFOM                      = #{pSportPltfom}               /* 지원 플랫폼  */
           , A.P_SPORT_CONTAINER_VER               = #{pSportContainerVer}         /* 지원 Container 및 버전 */
           , A.P_SPORT_DATA_STORGE                 = #{pSportDataStorge}           /* 지원 데이터 저장소  */
           , A.P_SUB_TENANCY_SPORT_AT              = #{pSubTenancySportAt}         /* Sub-tenancy 지원 여부 */
           , A.P_DVLPR_UNT_INFO                    = #{pDvlprUntInfo}              /* 개발자 도구 정보 */
           , A.P_SDK_API_SUPLY_AT                  = #{pSdkApiSuplyAt}             /* SDK/API 제공 여부 */
           , A.P_TEST_DEBUGING_SPORT_AT            = #{pTestDebugingSportAt}       /* 테스트 및 디버깅 지원 여부 */
           , A.P_ADDON_SVC_MARKPLACE_SPORT_AT      = #{pAddonSvcMarkplaceSportAt}  /* Add-on 서비스 및 마켓플레이스 지원 여부 */
           , A.P_CISPORT_SPORT                     = #{pCisportSport}              /* CI(Continuous Integration) 지원 */
           , A.P_LOGING_MNTRNG_SPORT               = #{pLogingMntrngSport}         /* 로깅/모니터링 지원  */
           , A.P_LOAD_BALANCING_SPORT              = #{pLoadBalancingSport}        /* Load Balancing 지원 */

           /* 3-4. 서비스형 소프트웨어(Iaas) 관련 규격 정보 */

           , A.I_OTHBC_STD_SPORT_DOC               = #{iOthbcStdSportDoc}    /* 공개표준 지원 및 문서   */
           , A.I_SVC_DIRECT_CNNC_NTWRK             = #{iSvcDirectCnncNtwrk}  /* 서비스에 직접 연결하는 네트워크  */
           , A.I_VIRTL_NTWRK_SPORT                 = #{iVirtlNtwrkSport}     /* 가상 네트워크 지원   */
           , A.I_SYNCHRN_SPORT_AT                  = #{iSynchrnSportAt}      /* 동기화 지원 여부  */
           , A.I_SPORT_EQPMN_LIST                  = #{iSportEqpmnList}      /* 지원 장비 목록   */
           , A.I_SERVER_COMPUTER_SVC               = #{iServerComputerSvc}   /* 서버/컴퓨터 서비스   */
           , A.I_STRGE_SVC                         = #{iStrgeSvc}            /* 스토리지 서비스   */
           , A.I_NTWRK_SVC                         = #{iNtwrkSvc}            /* 네트워크 서비스   */
           , A.I_SCRTY_SVC                         = #{iScrtySvc}            /* 보안 서비스   */
           , A.I_MANAGE_SVC                        = #{iManageSvc}           /* 관리 서비스   */
           , A.I_ETC_SVC                           = #{iEtcSvc}              /* 기타 서비스   */
    
           /* 3-1. 서비스형 소프트웨어(SCS) 관련 규격 정보 */
           
           , A.C_SPCLTY_REALM                      = #{cSpcltyRealm}    /* 전문분야  */
           , A.C_INDC_WHOLE                        = #{cIndcWhole}      /* 도입전반  */
           , A.C_SETUP_MGR                         = #{cSetupMgr}       /* Setup  Migration */
           , A.C_HOLD_QUALF                        = #{cHoldQualf}      /* 보유자격  */
           , A.C_HOLD_TCHNLGY                      = #{cHoldTchnlgy}    /* 보유기술  */
           , A.C_INFRSTRCTR                        = #{cInfrstrctr}     /* 컨설팅 가능 인프라 */
           , A.C_INFRSTRCTR_ETC                    = #{cInfrstrctrEtc}  /* 컨설팅 가능 인프라 기타*/
           , A.C_PLTFOM                            = #{cPltfom}         /* 컨설팅 가능 플랫폼 */
           , A.C_PLTFOM_ETC                        = #{cPltfomEtc}      /* 컨설팅 가능 플랫폼 기타*/
           , A.C_PRJCT_EXPRNC                      = #{cPrjctExprnc}    /* 프로젝트 경험 */
           , A.C_CNSL_RELM                         = #{cCnslRelm}       /* 컨설팅 영역 */
           , A.C_CNSL_RELM_ETC                     = #{cCnslRelmEtc}    /* 컨설팅 영역 기타*/
           , A.C_CNSL_SCOPE                        = #{cCnslScope}      /* 컨설팅 범위 */
           , A.C_DETAIL_SVC                        = #{cDetailSvc}      /* 컨설팅 가능 상세 서비스 */
           , A.C_EXC_PD                            = #{cExcPd}          /* 컨설팅 수행기간  */
           , A.C_EXC_PD_ETC                        = #{cExcPdEtc}       /* 컨설팅 수행기간 기타 */
           , A.C_EXC_AREA                          = #{cExcArea}        /* 컨설팅 수행 가능 지역  */
           , A.C_BEFFAT_CNSL_AT                    = #{cBeffatCnslAt}   /* 사전 컨설팅 가능 여부  */
           , A.C_CNSL_PC                           = 0         			/* 컨설팅 금액*/
           , A.UPDT_ID	  = #{updtId}
           , A.UPDT_DT      = SYSDATETIME             
           
                      
      WHERE A.GOODS_CODE = #{goodsCode} 
        AND A.GOODS_NUM =  (SELECT MAX(distinct Z.goods_num) AS goods_num FROM TST_GOOD_SPEC_DESCRIBE_I_TMP Z WHERE Z.goods_code = #{goodsCode} and A.goods_code = Z.goods_code)             
    </update>
    
    
    
        
    <update id="mergeGoodsManage4">
    
    /*_webGoods.mergeGoodsManage4*/
    
        UPDATE TST_GOOD_INFO_I A
           SET A.GOODS_SUMRY = #{goodsSumry}
             , A.ITEM_SFE = #{itemSfe}
             , A.GOODS_REFER = #{goodsRefer}
             , A.GOODS_MAIN_FNCT = #{goodsMainFnct}
         WHERE A.GOODS_CODE = #{goodsCode}       

    </update>
    <update id="mergeGoodsManageTmp4">
    
    /*_webGoods.mergeGoodsManageTmp4*/
    
        UPDATE TST_GOOD_INFO_I_TMP A
           SET A.GOODS_SUMRY = #{goodsSumry}
             , A.ITEM_SFE = #{itemSfe}
             , A.GOODS_REFER = #{goodsRefer}
             , A.GOODS_MAIN_FNCT = #{goodsMainFnct}
             , A.UPDT_ID	  = #{updtId}
             , A.UPDT_DT      = SYSDATETIME             
         WHERE A.GOODS_CODE = #{goodsCode}       

    </update>
    
    <update id="mergeGoodsSpecDescribe4">
    
    /*_webGoods.mergeGoodsSpecDescribe4*/
    
      UPDATE TST_GOOD_SPEC_DESCRIBE_I A
         SET A.MAIN_REFER           	= #{mainRefer}     /*주요 레퍼런스 (등록 서비스 기준)*/
           , A.SVC_DFN_SFE          	= #{svcDfnSfe}     /*서비스 정의 및 특징*/
           , A.SVC_EXPC_EFFECT      	= #{svcExpcEffect} /*서비스 기대효과*/
           
           /*4-1 제공정보*/
           , A.CMPNY_FOND_YEAR      	= #{cmpnyFondYear}     /*회사설립년도*/
           , A.CMPNY_INTRCN         	= #{cmpnyIntrcn}       /*회사소개*/
           , A.BSNS_REALM           	= #{bsnsRealm}         /*사업분야*/
           , A.SVC_ENTRPRS_SUPLY_TY 	= #{svcEntrprsSuplyTy} /*공급유형(라디오)*/
           , A.ENTRPRS_SE           	= #{entrprsSe}         /*기업구분(라디오)*/
           
           /*4-2. 서비스 담당자 정보*/
           , A.SVC_CHARGER_NM           = #{svcChargerNm}      /*담당자*/
           , A.SVC_CHARGER_CTTPC        = #{svcChargerCttpc}   /*국가선택*/
           , A.SVC_CHARGER_TELNO        = #{svcChargerTelno}   /*전화번호*/
           , A.SVC_CHARGER_EMAIL        = #{svcChargerEmail}   /*이메일*/
           , A.SVC_CHARGER_MBTL_NUM     = #{svcChargerMbtlNum} /*휴대폰*/

      WHERE A.GOODS_CODE = #{goodsCode} 
        AND A.GOODS_NUM =  1        
                       
    </update>
    <update id="mergeGoodsSpecDescribeTmp4">
    
    /*_webGoods.mergeGoodsSpecDescribeTmp4*/
    
      UPDATE TST_GOOD_SPEC_DESCRIBE_I_TMP A
         SET A.MAIN_REFER           	= #{mainRefer}     /*주요 레퍼런스 (등록 서비스 기준)*/
           , A.SVC_DFN_SFE          	= #{svcDfnSfe}     /*서비스 정의 및 특징*/
           , A.SVC_EXPC_EFFECT      	= #{svcExpcEffect} /*서비스 기대효과*/
           
           /*4-1 제공정보*/
           , A.CMPNY_FOND_YEAR      	= #{cmpnyFondYear}     /*회사설립년도*/
           , A.CMPNY_INTRCN         	= #{cmpnyIntrcn}       /*회사소개*/
           , A.BSNS_REALM           	= #{bsnsRealm}         /*사업분야*/
           , A.SVC_ENTRPRS_SUPLY_TY 	= #{svcEntrprsSuplyTy} /*공급유형(라디오)*/
           , A.ENTRPRS_SE           	= #{entrprsSe}         /*기업구분(라디오)*/
           
           /*4-2. 서비스 담당자 정보*/
           , A.SVC_CHARGER_NM           = #{svcChargerNm}      /*담당자*/
           , A.SVC_CHARGER_CTTPC        = #{svcChargerCttpc}   /*국가선택*/
           , A.SVC_CHARGER_TELNO        = #{svcChargerTelno}   /*전화번호*/
           , A.SVC_CHARGER_EMAIL        = #{svcChargerEmail}   /*이메일*/
           , A.SVC_CHARGER_MBTL_NUM     = #{svcChargerMbtlNum} /*휴대폰*/
           , A.UPDT_ID	  = #{updtId}
           , A.UPDT_DT      = SYSDATETIME             
      WHERE A.GOODS_CODE = #{goodsCode} 
        AND A.GOODS_NUM =  (SELECT MAX(distinct Z.goods_num) AS goods_num FROM TST_GOOD_SPEC_DESCRIBE_I_TMP Z WHERE Z.goods_code = #{goodsCode} and A.goods_code = Z.goods_code)   
                       
    </update>
    
    <update id="mergeGoodsManage5">
    /*_webGoods.mergeGoodsManage5*/
    
        UPDATE TST_GOOD_INFO_I A
           SET A.GOODS_REGIST_STTUS = #{goodsRegistSttus}
         WHERE A.GOODS_CODE = #{goodsCode}       

    </update>
    <update id="mergeGoodsManage5_1">
    /*_webGoods.mergeGoodsManage5_1*/
    
        UPDATE TST_GOOD_INFO_I A
           SET A.GOODS_REGIST_STTUS = 1007
         WHERE A.GOODS_CODE = #{goodsCode}       

    </update>
    
    <update id="mergeGoodsManage5_2">
    /*_webGoods.mergeGoodsManage5_2*/
		UPDATE TST_EXMN_CNFM_H
		SET requst_process_at = 'N'
		   ,requst_se = 1001
		   ,requ_id = #{updtId}
		   ,requ_dt = SYSDATETIME		   
		WHERE GOODS_CODE = #{goodsCode}
		AND exmnt_confm_hist_sn = (SELECT MAX(B.exmnt_confm_hist_sn) FROM TST_EXMN_CNFM_H B WHERE 1=1 AND B.GOODS_CODE=#{goodsCode})
    </update>
    <update id="mergeGoodsManageTmp5">
    /*_webGoods.mergeGoodsManageTmp5*/
    
        UPDATE TST_GOOD_INFO_I_TMP A
           SET A.GOODS_REGIST_STTUS = #{goodsRegistSttus}
             , A.CHG_ITEM_CONTENT = #{chgItemContent}
             , A.GOODS_STAT   = 1002
             , A.UPDT_ID	  = #{updtId}
             , A.UPDT_DT      = SYSDATETIME             
         WHERE A.GOODS_CODE = #{goodsCode}       

    </update>

    <select id="goodsCateList" resultType="map">
    /* _webGoods.goodsCateList*/    
    SELECT  A.CTGRY_CODE AS ctgryCode
          , B.LANG_CTGRY_NM AS ctgryName
      FROM  TST_GOOD_CATE_I A
          , TST_CATE_MGMT_M B
     WHERE  A.GOODS_CODE = #{goodsCode}
       AND  A.CTGRY_CODE = B.CTGRY_CODE
     <!-- GROUP  BY  B.CTGRY_CL_CD -->
     ORDER  BY  B.CTGRY_CL_CD
    </select>
    <select id="goodsCateListTmp" resultType="map">
    /* _webGoods.goodsCateListTmp*/    
    SELECT  A.CTGRY_CODE AS ctgryCode
          , B.LANG_CTGRY_NM AS ctgryName
      FROM  TST_GOOD_CATE_I_TMP A
          , TST_CATE_MGMT_M B
     WHERE  A.GOODS_CODE = #{goodsCode}
       AND  A.CTGRY_CODE = B.CTGRY_CODE
     <!-- GROUP  BY  B.CTGRY_CL_CD -->
     ORDER  BY  B.CTGRY_CL_CD
    </select>
    
    <select id="goodsMetaList" resultType="map">
    
    /* _webGoods.goodsMetaList*/
        	
         SELECT A.GOODS_CODE AS goodsCode 
    	      , A.LANG_CD    AS langCd 
    	      , A.GROUP_CD   AS groupCd 
    	      , A.INDVDLZ_CD AS indvdlzCd 
    	      , (
    	         SELECT indvdlz_cd_nm /* 코드의 내용 */ 
    	           FROM op_code_indvdlz 
    	          WHERE goods_code = A.goods_code 
    	            AND lang_code  = A.lang_cd
    	            AND group_cd   = A.group_cd 
    	            AND indvdlz_cd = A.indvdlz_cd 
    	        ) AS indvdlzNm
    	      , A.META_ETC_CN AS metaEtcCn 
     	   FROM TST_GOOD_META_I A
       	  WHERE A.GOODS_CODE = #{goodsCode}
     	    AND A.LANG_CD    = #{langCode}

    </select>
    <select id="goodsMetaListTmp" resultType="map">
    
    /* _webGoods.goodsMetaListTmp*/
        	
         SELECT A.GOODS_CODE AS goodsCode 
    	      , A.LANG_CD    AS langCd 
    	      , A.GROUP_CD   AS groupCd 
    	      , A.INDVDLZ_CD AS indvdlzCd 
    	      , (
    	         SELECT indvdlz_cd_nm /* 코드의 내용 */ 
    	           FROM op_code_indvdlz 
    	          WHERE goods_code = A.goods_code 
    	            AND lang_code  = A.lang_cd
    	            AND group_cd   = A.group_cd 
    	            AND indvdlz_cd = A.indvdlz_cd 
    	        ) AS indvdlzNm
    	      , A.META_ETC_CN AS metaEtcCn 
     	   FROM TST_GOOD_META_I_TMP A
       	  WHERE A.GOODS_CODE = #{goodsCode}
     	    AND A.LANG_CD    = #{langCode}

    </select>
     
    <select id="tstCateMgmtInfo" resultType="map">
    	/*_webGoods.tstCateMgmtInfo*/
	    SELECT lang_ctgry_nm  AS indvdlzNm
	      FROM TST_CATE_MGMT_M
	     WHERE ctgry_code = #{cDetailStr}
    </select>
    
	<select id="currentGoods" parameterType="map" resultType="int">
    /*_webGoods.currentGoods*/
         SELECT COUNT(*) as cnt
          FROM tst_good_spec_describe_i_tmp A
         WHERE A.GOODS_CODE = #{goodscode}
         AND A.GOODS_NUM = (SELECT MAX(B.GOODS_NUM) FROM tst_good_spec_describe_i_tmp B WHERE 1=1 AND B.GOODS_CODE=#{goodscode})         
    </select>
	<select id="currentGoodsSn" parameterType="map" resultType="int">
    /*_webGoods.currentGoodsSn*/
         SELECT COUNT(*) as cnt
          FROM TST_EXMN_CNFM_H A
         WHERE A.GOODS_CODE = #{goodscode}      
    </select>
    
	<delete id="tstGoodInfoiTmpDelete" parameterType="map">
    /*_webGoods.tstGoodInfoiTmpDelete*/
        DELETE FROM tst_good_info_i_tmp
        WHERE GOODS_CODE = #{goodscode}
    </delete>
	<delete id="toChgItemContentDelete" parameterType="map">
    /*_webGoods.toChgItemContentDelete*/
        DELETE FROM tst_good_spec_describe_i_tmp
        WHERE GOODS_CODE = #{goodscode}
        AND   GOODS_NUM = (SELECT MAX(B.GOODS_NUM) FROM tst_good_spec_describe_i_tmp B WHERE 1=1 AND B.GOODS_CODE=#{goodscode})
    </delete>

	<delete id="tstGoodMarkIDelete" parameterType="map">
    /*_webGoods.tstGoodMarkIDelete*/
        DELETE FROM TST_GOOD_MARK_I_TMP
        WHERE GOODS_CODE = #{goodscode}
    </delete>
	<delete id="tstGoodMetaIDelete" parameterType="map">
    /*_webGoods.tstGoodMetaIDelete*/
        DELETE FROM TST_GOOD_META_I_TMP
        WHERE GOODS_CODE = #{goodscode}
    </delete>

	<delete id="tstCtfcAtchIDelete" parameterType="map">
    /*_webGoods.tstCtfcAtchIDelete*/
        DELETE FROM TST_CTFC_ATCH_I_TMP
        WHERE GOODS_CODE = #{goodscode}
    </delete>
	<delete id="tstGoodCateIDelete" parameterType="map">
    /*_webGoods.tstGoodCateIDelete*/
        DELETE FROM TST_GOOD_CATE_I_TMP
        WHERE GOODS_CODE = #{goodscode}
    </delete>
	<delete id="tstGoodTagIDelete" parameterType="map">
    /*_webGoods.tstGoodTagIDelete*/
        DELETE FROM TST_GOOD_TAG_I_TMP
        WHERE GOODS_CODE = #{goodscode}
    </delete>

    <insert id="tstGoodInfoiTmpInsert" parameterType="goodsVO">
    	/* _webGoods.tstGoodInfoiTmpInsert */
		insert into TST_GOOD_INFO_I_TMP(
					goods_code
					,user_id	
					,lang_code	
					,goods_knd_cd	
					,goods_nm	
					,goods_ver_info	
					,goods_hmpg_url	
					,goods_sumry	
					,goods_main_fnct	
					,cnsl_expc_effect	
					,goods_refer	
					,cstmr_info	
					,goods_dwld_url	
					,sle_mthd_cd	
					,goods_file_seq	
					,demo_exprn_url	
					,spclty_realm	
					,cnstnt_co	
					,goods_image_file_seq	
					,goods_mnl_file_seq	
					,comou_de	
					,goods_makr	
					,goods_pc	
					,goods_licence_cd	
					,goods_licence_cn	
					,archtc_se	
					,goods_charger_nm	
					,goods_charger_email	
					,goods_charger_cttpc	
					,goods_charger_mbtlnum	
					,goods_regist_sttus	
					,goods_actvty_at	
					,regist_id	
					,regist_dt	
					,updt_id	
					,updt_dt	
					,confm_dt	
					,goods_rdcnt	
					,mngr_delete_at	
					,delete_mngr_dept_code	
					,delete_mngr_id	
					,cntc_instt_cd	
					,cmpny_nm	
					,unit_price	
					,orgplce	
					,cntrct_no	
					,locplc_hedofc	
					,price_chk	
					,locplc_it	
					,item_vod_url	
					,item_dn_file_seq	
					,mnl_dn_file_seq	
					,frame_chk	
					,gtwob_chk	
					,item_sfe	
					,smlpz_chk	
					,delng_stop_chk	
					,order_intrcp_chk	
					,item_img_url	
					,gtwob_number	
					,price_dn_file_seq	
					,price_dn_file_id	
					,goods_monitor_url	
					,service_offer_method	
					,updt_stat	
					,updt_chng_file	
					,goods_expc_effect	
					,gs_crtfc_no	
					,nara_crtfc_no
					,is_mark
					,svc_pc	
					,svc_pc_vat	
					,svc_pc_unt_cd	
					,mumm_cntrctpd	
					,due_stdr_mumm
				)
				select 
						goods_code
						,user_id	
						,lang_code	
						,goods_knd_cd	
						,goods_nm	
						,goods_ver_info	
						,goods_hmpg_url	
						,goods_sumry	
						,goods_main_fnct	
						,cnsl_expc_effect	
						,goods_refer	
						,cstmr_info	
						,goods_dwld_url	
						,sle_mthd_cd	
						,goods_file_seq	
						,demo_exprn_url	
						,spclty_realm	
						,cnstnt_co	
						,goods_image_file_seq	
						,goods_mnl_file_seq	
						,comou_de	
						,goods_makr	
						,goods_pc	
						,goods_licence_cd	
						,goods_licence_cn	
						,archtc_se	
						,goods_charger_nm	
						,goods_charger_email	
						,goods_charger_cttpc	
						,goods_charger_mbtlnum	
						,goods_regist_sttus	
						,goods_actvty_at	
						,regist_id	
						,regist_dt	
						,updt_id	
						,updt_dt	
						,confm_dt	
						,goods_rdcnt	
						,mngr_delete_at	
						,delete_mngr_dept_code	
						,delete_mngr_id	
						,cntc_instt_cd	
						,cmpny_nm	
						,unit_price	
						,orgplce	
						,cntrct_no	
						,locplc_hedofc	
						,price_chk	
						,locplc_it	
						,item_vod_url	
						,item_dn_file_seq	
						,mnl_dn_file_seq	
						,frame_chk	
						,gtwob_chk	
						,item_sfe	
						,smlpz_chk	
						,delng_stop_chk	
						,order_intrcp_chk	
						,item_img_url	
						,gtwob_number	
						,price_dn_file_seq	
						,price_dn_file_id	
						,goods_monitor_url	
						,service_offer_method	
						,updt_stat	
						,updt_chng_file	
						,goods_expc_effect	
						,gs_crtfc_no	
						,nara_crtfc_no
						,is_mark
						,svc_pc	
						,svc_pc_vat	
						,svc_pc_unt_cd	
						,mumm_cntrctpd	
						,due_stdr_mumm						
				from TST_GOOD_INFO_I
				where goods_code = #{goodsCode} 	
    </insert>
    <insert id="tstExmnCnfmHInsert" parameterType="goodsVO">
    	/* _webGoods.tstExmnCnfmHInsert */
			INSERT INTO TST_EXMN_CNFM_H(GOODS_CODE, EXMNT_CONFM_HIST_SN, EXMNT_CONFM_CD,MNGR_ID,  EXMNT_CONFM_DT, REQUST_PROCESS_AT, REQUST_SE) 
			VALUES(#{goodsCode},1,1002,'ceartmanager01',SYSDATETIME,'N',1001)  		
    </insert>
    <insert id="toChgItemContentInsert" parameterType="goodsVO">    
    	/* _webGoods.toChgItemContentInsert */
		insert into tst_good_spec_describe_i_tmp
		(
			goods_code,
			goods_num,
			cmpny_nm,
			cmpny_fond_year,
			entrprs_se,
			cmpny_intrcn,
			bsns_realm,
			main_refer,
			svc_nm,
			svc_dfn_sfe,
			svc_expc_effect,
			svc_ty,
			svc_entrprs_suply_ty,
			due_stdr_mumm,
			svc_pc,
			svc_pc_vat,
			svc_pc_unt_cd,
			mumm_cntrctpd,
			pc_table_atch_at,
			vat_incls_at,
			svc_begin_procss,
			svc_end_procss,
			at_svc_evl,
			svc_evl_suply_pd,
			svc_charger_nm,
			svc_charger_telno,
			svc_charger_email,
			gnrlz_sopmal_regist_at,
			private_cloud_at,
			public_cloud_at,
			hybrid_cloud_at,
			kisa_crtfc_at,
			cloud_svc_qlity_crtfc_at,
			cloud_svc_cnfirm_at,
			cc_crtfc_at,
			gs_crtfc_at,
			sla_applc_at,
			svc_useful,
			atmc_estn_sport_at,
			clustering_sport_at,
			sfsrv_provisioning_sport_at,
			svc_provisioning_time,
			svc_provisioning_relis_time,
			data_cnter_hbrd_lc_info,
			data_cnter_lc_info,
			dsstrrecovry_plan,
			data_extrc_procss,
			unuse_data_prtc_policy,
			safe_data_delete_policy,
			svc_manage_sttus_info_suply,
			svc_use_log_suply_at,
			trobl_manage_reprt_policy,
			api_sport_at,
			api_sport_ty,
			user_mnl_suply_at,
			user_mnl_info_at,
			user_mnl_info_input,
			user_edc_sport_at,
			user_edc_sport_input,
			user_edc_info,
			visit_edc_sport_at,
			visit_tchnlgy_sport_at,
			visit_else_tchnlgy_sport_at,
			cstmr_cnter_oper_at,
			cstmr_cnter_oper_time,
			i_othbc_std_sport_doc,
			i_svc_direct_cnnc_ntwrk,
			i_virtl_ntwrk_sport,
			i_synchrn_sport_at,
			i_sport_eqpmn_list,
			i_server_computer_svc,
			i_strge_svc,
			i_ntwrk_svc,
			i_scrty_svc,
			i_manage_svc,
			i_etc_svc,
			p_secure_devlop,
			p_secure_dct_wdtb,
			p_sport_lang,
			p_sport_pltfom,
			p_sport_container_ver,
			p_sport_data_storge,
			p_sub_tenancy_sport_at,
			p_dvlpr_unt_info,
			p_sdk_api_suply_at,
			p_test_debuging_sport_at,
			p_addon_svc_markplace_sport_at,
			p_cisport_sport,
			p_loging_mntrng_sport,
			p_load_balancing_sport,
			s_user_svc_suply_mthd,
			s_manage_svc_suply_mthd,
			s_infrstrctr_suply_mthd,
			s_scrty_policy,
			s_data_encpt_at_mthd,
			s_backup_recovry_policy,
			s_user_crtfc_scrty_prtc_policy,
			s_multi_pltfom_sport_at,
			s_sport_opersysm_list,
			s_sport_wbsr_list,
			s_sport_mobile_pltfom_list,
			s_open_std_sport_at,
			s_gvrn_frmwrk_sport_at,
			s_open_sourc_sw_at,
			s_paasta_at,
			s_sourc_othbc_at,
			s_api_access_sport_at,
			s_db_migration_sport_at,
			s_extrl_application_sport_at,
			s_sub_tenancy_sport_at,
			s_cstmzng_posbl_at,
			s_devlop_sport_etc,
			c_spclty_realm,
			c_indc_whole,
			c_setup_mgr,
			c_hold_qualf,
			c_hold_tchnlgy,
			c_infrstrctr,
			c_infrstrctr_etc,
			c_pltfom,
			c_pltfom_etc,
			c_prjct_exprnc,
			c_cnsl_relm,
			c_cnsl_relm_etc,
			c_cnsl_scope,
			c_detail_svc,
			c_exc_pd,
			c_exc_pd_etc,
			c_exc_area,
			c_beffat_cnsl_at,
			c_cnsl_pc,
			entr_date,
			user_id,
			save_step,
			goods_entr_date,
			goods_use,
			asis,
			svc_charger_cttpc,
			svc_charger_mbtl_num,
			goods_spec1,
			goods_spec6,
			goods_spec7,
			goods_spec8,
			goods_spec14,
			goods_spec15,
			goods_spec17,
			goods_spec18,
			goods_spec19,
			goods_spec23,
			goods_spec24,
			goods_spec25,
			goods_spec30,
			goods_spec35,
			goods_spec37,
			goods_spec38,
			goods_spec41,
			goods_spec43,
			goods_spec44,
			goods_spec48,
			goods_spec49,
			goods_spec50,
			goods_spec51,
			goods_spec52,
			goods_spec53,
			goods_spec54,
			goods_spec55,
			goods_spec56,
			goods_spec57,
			goods_spec58,
			goods_spec59,
			goods_spec60,
			goods_spec61,
			goods_spec64,
			goods_spec65,
			goods_spec66,
			goods_spec67,
			goods_spec68,
			goods_spec69,
			goods_spec70,
			goods_spec71,
			goods_spec72,
			goods_spec73,
			goods_spec74,
			goods_spec75,
			goods_spec76,
			goods_spec5,
			goods_spec4,
			goods_spec10,
			goods_spec26,
			goods_spec22,
			goods_spec21,
			goods_spec29,
			goods_spec2,
			goods_spec31,
			regist_id,
			regist_dt,
			updt_id,
			updt_dt,
			chg_item_content
		)
		SELECT 
			goods_code,
			goods_num,
			cmpny_nm,
			cmpny_fond_year,
			entrprs_se,
			cmpny_intrcn,
			bsns_realm,
			main_refer,
			svc_nm,
			svc_dfn_sfe,
			svc_expc_effect,
			svc_ty,
			svc_entrprs_suply_ty,
			due_stdr_mumm,
			svc_pc,
			svc_pc_vat,
			svc_pc_unt_cd,
			mumm_cntrctpd,
			pc_table_atch_at,
			vat_incls_at,
			svc_begin_procss,
			svc_end_procss,
			at_svc_evl,
			svc_evl_suply_pd,
			svc_charger_nm,
			svc_charger_telno,
			svc_charger_email,
			gnrlz_sopmal_regist_at,
			private_cloud_at,
			public_cloud_at,
			hybrid_cloud_at,
			kisa_crtfc_at,
			cloud_svc_qlity_crtfc_at,
			cloud_svc_cnfirm_at,
			cc_crtfc_at,
			gs_crtfc_at,
			sla_applc_at,
			svc_useful,
			atmc_estn_sport_at,
			clustering_sport_at,
			sfsrv_provisioning_sport_at,
			svc_provisioning_time,
			svc_provisioning_relis_time,
			data_cnter_hbrd_lc_info,
			data_cnter_lc_info,
			dsstrrecovry_plan,
			data_extrc_procss,
			unuse_data_prtc_policy,
			safe_data_delete_policy,
			svc_manage_sttus_info_suply,
			svc_use_log_suply_at,
			trobl_manage_reprt_policy,
			api_sport_at,
			api_sport_ty,
			user_mnl_suply_at,
			user_mnl_info_at,
			user_mnl_info_input,
			user_edc_sport_at,
			user_edc_sport_input,
			user_edc_info,
			visit_edc_sport_at,
			visit_tchnlgy_sport_at,
			visit_else_tchnlgy_sport_at,
			cstmr_cnter_oper_at,
			cstmr_cnter_oper_time,
			i_othbc_std_sport_doc,
			i_svc_direct_cnnc_ntwrk,
			i_virtl_ntwrk_sport,
			i_synchrn_sport_at,
			i_sport_eqpmn_list,
			i_server_computer_svc,
			i_strge_svc,
			i_ntwrk_svc,
			i_scrty_svc,
			i_manage_svc,
			i_etc_svc,
			p_secure_devlop,
			p_secure_dct_wdtb,
			p_sport_lang,
			p_sport_pltfom,
			p_sport_container_ver,
			p_sport_data_storge,
			p_sub_tenancy_sport_at,
			p_dvlpr_unt_info,
			p_sdk_api_suply_at,
			p_test_debuging_sport_at,
			p_addon_svc_markplace_sport_at,
			p_cisport_sport,
			p_loging_mntrng_sport,
			p_load_balancing_sport,
			s_user_svc_suply_mthd,
			s_manage_svc_suply_mthd,
			s_infrstrctr_suply_mthd,
			s_scrty_policy,
			s_data_encpt_at_mthd,
			s_backup_recovry_policy,
			s_user_crtfc_scrty_prtc_policy,
			s_multi_pltfom_sport_at,
			s_sport_opersysm_list,
			s_sport_wbsr_list,
			s_sport_mobile_pltfom_list,
			s_open_std_sport_at,
			s_gvrn_frmwrk_sport_at,
			s_open_sourc_sw_at,
			s_paasta_at,
			s_sourc_othbc_at,
			s_api_access_sport_at,
			s_db_migration_sport_at,
			s_extrl_application_sport_at,
			s_sub_tenancy_sport_at,
			s_cstmzng_posbl_at,
			s_devlop_sport_etc,
			c_spclty_realm,
			c_indc_whole,
			c_setup_mgr,
			c_hold_qualf,
			c_hold_tchnlgy,
			c_infrstrctr,
			c_infrstrctr_etc,
			c_pltfom,
			c_pltfom_etc,
			c_prjct_exprnc,
			c_cnsl_relm,
			c_cnsl_relm_etc,
			c_cnsl_scope,
			c_detail_svc,
			c_exc_pd,
			c_exc_pd_etc,
			c_exc_area,
			c_beffat_cnsl_at,
			c_cnsl_pc,
			entr_date,
			user_id,
			save_step,
			goods_entr_date,
			goods_use,
			asis,
			svc_charger_cttpc,
			svc_charger_mbtl_num,
			goods_spec1,
			goods_spec6,
			goods_spec7,
			goods_spec8,
			goods_spec14,
			goods_spec15,
			goods_spec17,
			goods_spec18,
			goods_spec19,
			goods_spec23,
			goods_spec24,
			goods_spec25,
			goods_spec30,
			goods_spec35,
			goods_spec37,
			goods_spec38,
			goods_spec41,
			goods_spec43,
			goods_spec44,
			goods_spec48,
			goods_spec49,
			goods_spec50,
			goods_spec51,
			goods_spec52,
			goods_spec53,
			goods_spec54,
			goods_spec55,
			goods_spec56,
			goods_spec57,
			goods_spec58,
			goods_spec59,
			goods_spec60,
			goods_spec61,
			goods_spec64,
			goods_spec65,
			goods_spec66,
			goods_spec67,
			goods_spec68,
			goods_spec69,
			goods_spec70,
			goods_spec71,
			goods_spec72,
			goods_spec73,
			goods_spec74,
			goods_spec75,
			goods_spec76,
			goods_spec5,
			goods_spec4,
			goods_spec10,
			goods_spec26,
			goods_spec22,
			goods_spec21,
			goods_spec29,
			goods_spec2,
			goods_spec31,
			#{updtId},
			SYSDATETIME,
			#{updtId},
			SYSDATETIME,
			''
		from 
			tst_good_spec_describe_i
		where goods_code = #{goodsCode}
		and goods_num = (
							select max(AA.goods_num) from tst_good_spec_describe_i AA where AA.goods_code = #{goodsCode}
						)
    </insert>
    <insert id="tstGoodMarkIInsert" parameterType="goodsVO">    
    	/* _webGoods.tstGoodMarkIInsert */
		insert into TST_GOOD_MARK_I_TMP
		(
			goods_code,	
			mark_cd
		)
		SELECT 
			goods_code,
			mark_cd
		from 
			TST_GOOD_MARK_I
		where goods_code = #{goodsCode}

    </insert>
    <insert id="tstGoodMetaIInsert" parameterType="goodsVO">    
    	/* _webGoods.tstGoodMetaIInsert */
		insert into TST_GOOD_META_I_TMP
		(
			goods_code,	
			lang_cd	,
			group_cd,	
			indvdlz_cd,	
			meta_etc_cn
		)
		SELECT 
			goods_code,	
			lang_cd	,
			group_cd,	
			indvdlz_cd,	
			meta_etc_cn
		from 
			TST_GOOD_META_I
		where goods_code = #{goodsCode}

    </insert>
    <insert id="tstCtfcAtchIInsert" parameterType="goodsVO">    
    	/* _webGoods.tstCtfcAtchIInsert */
		insert into TST_CTFC_ATCH_I_TMP
		(
			goods_code,	
			crtfc_se_cd	,
			crtfc_se_file_seq
		)
		SELECT 
			goods_code,	
			crtfc_se_cd	,
			crtfc_se_file_seq
		from 
			TST_CTFC_ATCH_I
		where goods_code = #{goodsCode}

    </insert>
    <insert id="tstGoodCateIInsert" parameterType="goodsVO">    
    	/* _webGoods.tstGoodCateIInsert */
		insert into TST_GOOD_CATE_I_TMP
		(
			goods_code,	
			ctgry_code
		)
		SELECT 
			goods_code,	
			ctgry_code
		from 
			TST_GOOD_CATE_I
		where goods_code = #{goodsCode}

    </insert>
    <insert id="tstGoodTagIInsert" parameterType="goodsVO">    
    	/* _webGoods.tstGoodTagIInsert */
		insert into TST_GOOD_TAG_I_TMP
		(
			goods_code,
			goods_tag_nm
		)
		SELECT 
			goods_code,
			goods_tag_nm
		from 
			TST_GOOD_TAG_I
		where goods_code = #{goodsCode}

    </insert>


    <update id="tstGoodInfoiTmpInsertUpdate" parameterType="map">
    /* _webGoods.tstGoodInfoiTmpInsertUpdate*/    
        UPDATE TST_GOOD_INFO_I_TMP SET
          GOODS_STAT = '1001'
		WHERE GOODS_CODE =  #{goodscode}       
    </update>
    
     <select id="goodsSelectByPk" parameterType="goodsVO" resultType="Integer">
    
    /*  _webGoods.goodsSelectByPk */
    
	    SELECT COUNT(*)
	      FROM OP_FILE
	     WHERE 1=1 
	       AND file_seq         = (SELECT GOODS_IMAGE_FILE_SEQ FROM TST_GOOD_INFO_I_TMP WHERE GOODS_CODE = #{goodsCode})
	       AND file_ordr_no = 1
	       
    </select>
    <select id="selectGoodsSpecDescribeCount3" parameterType="goodsManageVO" resultType="Integer">
    /*  _webGoods.selectGoodsSpecDescribeCount3 */
	    SELECT COUNT(GOODS_CODE)
	      FROM tst_good_spec_describe_i
	     WHERE 1=1
	       AND GOODS_CODE         = #{goodsCode}
    </select>       
    <select id="selectGoodsSpecDescribeCountTmp3" parameterType="goodsManageVO" resultType="Integer">
    /*  _webGoods.selectGoodsSpecDescribeCount3 */
	    SELECT COUNT(GOODS_CODE)
	      FROM tst_good_spec_describe_i_tmp
	     WHERE 1=1
	       AND GOODS_CODE         = #{goodsCode}
    </select>
    <select id="markCrtfcFileSeq" parameterType="String" resultType="int">
   	/*_webGoods.markCrtfcFileSeq*/
		SELECT crtfc_se_file_seq FROM TST_CTFC_ATCH_I
		WHERE 1=1
		AND goods_code = #{goodsCode}
		AND crtfc_se_cd = #{crtfcSeCd}
    </select>



    <select id="markCrtfcFileSeqGubun" parameterType="String" resultType="int">
   	/*_webGoods.markCrtfcFileSeqGubun*/
		SELECT count(*) as cnt FROM TST_CTFC_ATCH_I
		WHERE 1=1
		AND goods_code = #{goodsCode}
		AND crtfc_se_cd = #{crtfcSeCd}
    </select>
    <select id="markCrtfcFileSeqGubunTmp" parameterType="String" resultType="int">
   	/*_webGoods.markCrtfcFileSeqGubunTmp*/
		SELECT count(*) as cnt FROM TST_CTFC_ATCH_I_TMP
		WHERE 1=1
		AND goods_code = #{goodsCode}
		AND crtfc_se_cd = #{crtfcSeCd}
    </select>



    <select id="markCrtfcFileSeqTmp" parameterType="String" resultType="int">
   	/*_webGoods.markCrtfcFileSeqTmp*/
		SELECT crtfc_se_file_seq FROM TST_CTFC_ATCH_I_TMP
		WHERE 1=1
		AND goods_code = #{goodsCode}
		AND crtfc_se_cd = #{crtfcSeCd}
    </select>
    <select id="markCrtfcFileSeqCount" parameterType="String" resultType="int">
   	/*_webGoods.markCrtfcFileSeqCount*/
		SELECT COUNT(*) AS cnt FROM TST_CTFC_ATCH_I
		WHERE 1=1
		AND goods_code =  #{goodsCode}
    </select>
    <select id="markCrtfcFileSeqCountTmp" parameterType="String" resultType="int">
   	/*_webGoods.markCrtfcFileSeqCountTmp*/
		SELECT COUNT(*) AS cnt FROM TST_CTFC_ATCH_I_TMP
		WHERE 1=1
		AND goods_code =  #{goodsCode}
    </select>

    <delete id="tstGoodMarkIDeleteInfo" parameterType="goodsManageVO">
    
    /*_webGoods.tstGoodMarkIDeleteInfo*/
    
        DELETE FROM TST_GOOD_MARK_I
              WHERE GOODS_CODE = #{goodsCode}
              
    </delete>           
    <delete id="tstCtfcAtchIDeleteInfo" parameterType="goodsManageVO">
    
    /*_webGoods.tstCtfcAtchIDeleteInfo*/
    
        DELETE FROM TST_CTFC_ATCH_I
              WHERE GOODS_CODE = #{goodsCode}
              
    </delete>       
    <delete id="tstGoodMarkIDeleteInfoTmp" parameterType="goodsManageVO">
    
    /*_webGoods.tstGoodMarkIDeleteInfoTmp*/
    
        DELETE FROM TST_GOOD_MARK_I_TMP
              WHERE GOODS_CODE = #{goodsCode}
              
    </delete>           
    <delete id="tstCtfcAtchIDeleteInfoTmp" parameterType="goodsManageVO">
    
    /*_webGoods.tstCtfcAtchIDeleteInfoTmp*/
    
        DELETE FROM TST_CTFC_ATCH_I_TMP
              WHERE GOODS_CODE = #{goodsCode}
              
    </delete>       
    
    <update id="updateTstGoodInfoIModify" parameterType="goodsManageVO">
    /* _webGoods.updateTstGoodInfoIModify */
    
        UPDATE TST_GOOD_INFO_I SET
          IS_MARK = #{isMark}
        WHERE        
          GOODS_CODE = #{goodsCode}
    </update>
    <update id="updateTstGoodInfoIModifyTmp" parameterType="goodsManageVO">
    /* _webGoods.updateTstGoodInfoIModifyTmp */
    
        UPDATE TST_GOOD_INFO_I_TMP SET
          IS_MARK = #{isMark}
        WHERE        
          GOODS_CODE = #{goodsCode}
    </update>

    <select id="intTstCtfcAtchICount" parameterType="String" resultType="int">
   	/*_webGoods.intTstCtfcAtchICount*/
		SELECT count(*) as cnt FROM TST_GOOD_MARK_I
		WHERE 1=1
		AND goods_code = #{goodsCode}
		AND mark_cd = #{crtMarkCd}
    </select>
    <select id="intTstCtfcAtchICountTmp" parameterType="String" resultType="int">
   	/*_webGoods.intTstCtfcAtchICountTmp*/
		SELECT count(*) as cnt FROM TST_GOOD_MARK_I_TMP
		WHERE 1=1
		AND goods_code = #{goodsCode}
		AND mark_cd = #{crtMarkCd}
    </select>
    <update id="markMerge" parameterType="goodsManageVO">
    /*_webGoods.markMerge*/

		MERGE INTO TST_GOOD_MARK_I T
		USING (SELECT #{goodsCode} AS GOODS_CODE, #{markCd} AS MARK_CD ) S        
		    ON (T.GOODS_CODE = S.GOODS_CODE AND T.MARK_CD = S.MARK_CD)                 
		WHEN MATCHED THEN
		      UPDATE SET  T.GOODS_CODE = #{goodsCode}, T.MARK_CD = #{markCd}
		        WHEN NOT MATCHED THEN
		              INSERT
		                  (GOODS_CODE, MARK_CD)
		              VALUES
		                  ( #{goodsCode}, #{markCd} )
	</update>                  
    <update id="markTempMerge" parameterType="goodsManageVO">
    /*_webGoods.markTempMerge*/

		MERGE INTO TST_GOOD_MARK_I_TMP T
		USING (SELECT #{goodsCode} AS GOODS_CODE, #{markCd} AS MARK_CD ) S        
		    ON (T.GOODS_CODE = S.GOODS_CODE AND T.MARK_CD = S.MARK_CD)                 
		WHEN MATCHED THEN
		      UPDATE SET  T.GOODS_CODE = #{goodsCode}, T.MARK_CD = #{markCd}
		        WHEN NOT MATCHED THEN
		              INSERT
		                  (GOODS_CODE, MARK_CD)
		              VALUES
		                  ( #{goodsCode}, #{markCd} )
	</update>                  
    <insert id="markRegistInsert" parameterType="goodsManageVO">
    /*_webGoods.markRegistInsert*/
		INSERT TST_GOOD_MARK_I(GOODS_CODE, MARK_CD) VALUES( #{goodsCode}, #{markCd} )
	</insert>                  
    <insert id="markRegistInserttmp" parameterType="goodsManageVO">
    /*_webGoods.markRegistInserttmp*/
		INSERT TST_GOOD_MARK_I_TMP(GOODS_CODE, MARK_CD) VALUES( #{goodsCode}, #{markCd} )
	</insert>
    <delete id="markRegistDelete" parameterType="goodsManageVO">
    /*_webGoods.markRegistDelete*/
        DELETE FROM TST_GOOD_MARK_I
              WHERE GOODS_CODE = #{goodsCode}
              AND   MARK_CD = #{markCd}
    </delete>
    <delete id="markRegistDeletetmp" parameterType="goodsManageVO">
    /*_webGoods.markRegistDeletetmp*/
        DELETE FROM TST_GOOD_MARK_I_TMP
              WHERE GOODS_CODE = #{goodsCode}
              AND   MARK_CD = #{markCd}
    </delete>
    	                  
</mapper>