<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="_myboard">

<sql id="boardListBody">
        SELECT 
                A.DOMAIN_CD                 AS domainCd
              , A.BBS_CD                    AS bbsCd
              , (SELECT B.BBS_NM
                  FROM OP_BOARD_CONF B
                 WHERE B.DOMAIN_CD = #{domainCd} 
                 AND A.DOMAIN_CD = B.DOMAIN_CD
                 AND A.BBS_CD = B.BBS_CD )  AS bbsNm
              , A.BBSCTT_SEQ                AS bbscttSeq
              , A.REFRN_SEQ                 AS refrnSeq
              , A.BBSCTT_ORDR_NO            AS bbscttOrdrNo
              , A.BBSCTT_DP                 AS bbscttDp
              , A.CTG_CD                    AS ctgCd
              , (SELECT CTG_NM FROM OP_BOARD_CTG 
                WHERE DOMAIN_CD = A.DOMAIN_CD 
                  AND BBS_CD = A.BBS_CD 
                  AND CTG_CD = A.CTG_CD)    AS ctgNm
             , DECODE (A.NOTICE_BBSCTT_AT, 'Y', 'Y', 'N')       AS noticeBbscttAt
            <if test="cutTitleNum != null  and cutTitleNum != ''">
              , SUBSTRB(A.BBSCTT_SJ, 0, (#{cutTitleNum} * 2))   AS bbscttSj
            </if>
            <if test="cutTitleNum == null or cutTitleNum == ''">
              , A.BBSCTT_SJ                 AS bbscttSj
            </if>
              , LENGTH(A.BBSCTT_SJ)        AS bbscttSjLength
              , A.BBSCTT_CN                 AS bbscttCn 
              , A.CN_SUMRY                  AS cnSumry
              , A.FILE_SEQ                  AS fileSeq
              , A.RDCNT                     AS rdCnt
              , TO_CHAR(A.REPLY_DT,'YYYY.MM.DD HH24:MI') AS replyDt
              , A.ACCUSE_CNT                AS accuseCnt
              , A.RECOMEND_CNT              AS recomendCnt
              , A.IP_ADRES                  AS ipAdres
              , A.BRWSR_AGENT               AS brwsrAgent
              , A.OTHBC_AT                  AS othbcAt
              , A.BANNED_WRD_AT            AS bannedWordAt
              , DECODE(A.REGIST_PASSWORD, '', 'N', 'Y') AS registPassword
              , A.REGISTER_NM               AS registerNm
              , A.REGIST_ID                 AS registId
              , A.USER_KEY                  AS userKey
              , TO_CHAR(A.REGIST_DT,'YYYY.MM.DD HH24:MI') AS registDt
              , A.UPDT_ID                   AS updtId
              , TO_CHAR(A.UPDT_DT, 'YYYY/MM/DD') AS updtDt
              , A.MNGR_ID                   AS mngrId
              , A.MNGR_NM                   AS mngrNm
              , A.DEPT_CODE                 AS deptCode
              , A.DEPT_NM                   AS deptNm
              , TO_NUMBER(TO_CHAR(SYS_DATE, 'YYYYMMDD') - TO_CHAR(A.REGIST_DT, 'YYYYMMDD')) AS passDay
              , A.ESTN_COLUMN1              AS estnColumn1
              , A.ESTN_COLUMN2              AS estnColumn2
              , A.ESTN_COLUMN3              AS estnColumn3
              , A.ESTN_COLUMN4              AS estnColumn4
             <choose>
                 <when test="bbsCd == '1010'">
                 , (CASE
                    <!-- 선정한 댓글이 있는경우(무조건) = 완료 -->
                         WHEN SUBSTR (ESTN_COLUMN5,0,1) = 'Y'                              THEN 'Y'
                    <!-- 선정한 댓글이 없고, 종료일이 지났을경우 = 미완료-->
                         WHEN SUBSTR (ESTN_COLUMN5,0,1) = 'N' AND TO_CHAR(SYS_DATETIME,'yyyyMMddhh24miss') &gt; ESTN_COLUMN6 AND ESTN_COLUMN6 IS NOT NULL    THEN 'N'
                    <!-- 선정한 댓글이 없고, 종료일이 안지났을경우 = 대기중-->
                         WHEN SUBSTR (ESTN_COLUMN5,0,1) = 'N' AND TO_CHAR(SYS_DATETIME,'yyyyMMddhh24miss') &lt; ESTN_COLUMN6 AND ESTN_COLUMN6 IS NOT NULL   THEN 'S'
                         ELSE ''
                      END)                  AS estnColumn5
                , TO_CHAR(TO_TIMESTAMP(ESTN_COLUMN6,  'YYYYMMDDHH24MISS'), 'YYYY.MM.DD HH24:MI' ) AS estnColumn6
                 </when>
                 <otherwise>
              , A.ESTN_COLUMN5              AS estnColumn5
              , A.ESTN_COLUMN6              AS estnColumn6
                 </otherwise>
             </choose>
              , A.ESTN_COLUMN7              AS estnColumn7
              , A.ESTN_COLUMN8              AS estnColumn8
              , A.ESTN_COLUMN9              AS estnColumn9
              , A.ESTN_COLUMN10             AS estnColumn10
              , A.MNGR_DELETE_AT            AS mngrDeleteAt
              , A.REPLY_ID                  AS replyId
              <if test="bbsCd == '1010'">
              , (CASE
                <!-- 선정한 댓글이 있는경우(무조건) = 완료 -->
                     WHEN SUBSTR (ESTN_COLUMN5,0,1) = 'Y'                              THEN 'COM'
                <!-- 선정한 댓글이 없고, 종료일이 지났을경우 = 미완료-->
                     WHEN SUBSTR (ESTN_COLUMN5,0,1) = 'N'  AND TO_CHAR(SYS_DATETIME,'yyyyMMddhh24miss') &gt; ESTN_COLUMN6 AND ESTN_COLUMN6 IS NOT NULL   THEN 'INC'
                <!-- 선정한 댓글이 없고, 종료일이 안지났을경우 = 진행중-->
                     WHEN SUBSTR (ESTN_COLUMN5,0,1) = 'N' AND TO_CHAR(SYS_DATETIME,'yyyyMMddhh24miss') &lt; ESTN_COLUMN6 AND ESTN_COLUMN6 IS NOT NULL   THEN 'PRO'
                     ELSE ''
                  END)                      AS bizProgression
              </if>
    </sql>

    <sql id="boardListBody_BizMatching">
                            SELECT A.DOMAIN_CD                               AS domainCd
                                 , A.BBS_CD                                  AS bbsCd
                                 , (SELECT E.BBS_NM
                                      FROM OP_BOARD_CONF E
                                     WHERE E.DOMAIN_CD = #{domainCd} 
                                       AND A.DOMAIN_CD = E.DOMAIN_CD
                                       AND A.BBS_CD = E.BBS_CD )             AS bbsNm
                                 , A.BBSCTT_SEQ                              AS bbscttSeq
                                 , A.REFRN_SEQ                               AS refrnSeq
                                 , A.BBSCTT_ORDR_NO                          AS bbscttOrdrNo
                                 , A.BBSCTT_DP                               AS bbscttDp
                                 , A.CTG_CD                                  AS ctgCd
                                 , (SELECT CTG_NM
                                      FROM OP_BOARD_CTG
                                     WHERE DOMAIN_CD = A.DOMAIN_CD
                                       AND BBS_CD = A.BBS_CD 
                                       AND CTG_CD = A.CTG_CD)                AS ctgNm
                                 , DECODE (A.NOTICE_BBSCTT_AT, 'Y', 'Y', 'N') AS noticeBbscttAt
        <if test="cutTitleNum != null  and cutTitleNum != ''">
                                 , SUBSTRB(A.BBSCTT_SJ, 0, (#{cutTitleNum} * 2)) AS bbscttSj
        </if>
        <if test="cutTitleNum == null or cutTitleNum == ''">
                                 , A.BBSCTT_SJ                               AS bbscttSj
        </if>
                                 , LENGTH(A.BBSCTT_SJ)                       AS bbscttSjLength
                                 , A.BBSCTT_CN                               AS bbscttCn 
                                 , A.CN_SUMRY                                AS cnSumry
                                 , A.FILE_SEQ                                AS fileSeq
                                 , A.RDCNT                                   AS rdCnt
                                 , TO_CHAR(A.REPLY_DT,'YYYY.MM.DD HH24:MI')  AS replyDt
                                 , A.ACCUSE_CNT                              AS accuseCnt
                                 , A.RECOMEND_CNT                            AS recomendCnt
                                 , A.IP_ADRES                                AS ipAdres
                                 , A.BRWSR_AGENT                             AS brwsrAgent
                                 , A.OTHBC_AT                                AS othbcAt
                                 , A.BANNED_WRD_AT                           AS bannedWordAt
                                 , DECODE(A.REGIST_PASSWORD, '', 'N', 'Y')   AS registPassword
                                 , A.REGISTER_NM                             AS registerNm
                                 , A.REGIST_ID                               AS registId
                                 , A.USER_KEY                                AS userKey
                                 , TO_CHAR(A.REGIST_DT,'YYYY.MM.DD HH24:MI') AS registDt
                                 , A.UPDT_ID                                 AS updtId
                                 , TO_CHAR(A.UPDT_DT, 'YYYY/MM/DD')          AS updtDt
                                 , A.MNGR_ID                                 AS mngrId
                                 , A.MNGR_NM                                 AS mngrNm
                                 , A.DEPT_CODE                               AS deptCode
                                 , A.DEPT_NM                                 AS deptNm
                                 , TO_NUMBER(TO_CHAR(SYS_DATE, 'YYYYMMDD') - TO_CHAR(A.REGIST_DT, 'YYYYMMDD')) AS passDay
                                 , A.ESTN_COLUMN1                            AS estnColumn1
                                 , A.ESTN_COLUMN2                            AS estnColumn2
                                 , A.ESTN_COLUMN3                            AS estnColumn3
                                 , A.ESTN_COLUMN4                            AS estnColumn4
                                 , (CASE
                                        <!-- 선정한 댓글이 있는경우(무조건) = 완료 -->
                                         WHEN SUBSTR (ESTN_COLUMN5,0,1) = 'Y' THEN 'Y'
                                        <!-- 선정한 댓글이 없고, 종료일이 지났을경우 = 미완료-->
                                         WHEN SUBSTR (ESTN_COLUMN5,0,1) = 'N' AND TO_CHAR(SYS_DATETIME,'yyyyMMddhh24miss') &gt; ESTN_COLUMN6 AND ESTN_COLUMN6 IS NOT NULL THEN 'N'
                                        <!-- 선정한 댓글이 없고, 종료일이 안지났을경우 = 대기중-->
                                         WHEN SUBSTR (ESTN_COLUMN5,0,1) = 'N' AND TO_CHAR(SYS_DATETIME,'yyyyMMddhh24miss') &lt; ESTN_COLUMN6 AND ESTN_COLUMN6 IS NOT NULL THEN 'S'
                                         ELSE ''
                                    END)                                     AS estnColumn5
                                 , TO_CHAR(TO_TIMESTAMP(ESTN_COLUMN6,  'YYYYMMDDHH24MISS'), 'YYYY.MM.DD HH24:MI' ) AS estnColumn6
                                <!-- estnColumn7 요청글 1, 댓글 2 -->
                                 , B.ESTN_COLUMN7                            AS estnColumn7
                                 , A.ESTN_COLUMN8                            AS estnColumn8
                                 , A.ESTN_COLUMN9                            AS estnColumn9
                                 , A.ESTN_COLUMN10                           AS estnColumn10
                                 , A.MNGR_DELETE_AT                          AS mngrDeleteAt
                                 , A.REPLY_ID                                AS replyId
                                 , (CASE
                                        <!-- 선정한 댓글이 있는경우(무조건) = 완료 -->
                                         WHEN SUBSTR (ESTN_COLUMN5,0,1) = 'Y' THEN 'COM'
                                        <!-- 선정한 댓글이 없고, 종료일이 지났을경우 = 미완료-->
                                         WHEN SUBSTR (ESTN_COLUMN5,0,1) = 'N'  AND TO_CHAR(SYS_DATETIME,'yyyyMMddhh24miss') &gt; ESTN_COLUMN6 AND ESTN_COLUMN6 IS NOT NULL THEN 'INC'
                                        <!-- 선정한 댓글이 없고, 종료일이 안지났을경우 = 진행중-->
                                         WHEN SUBSTR (ESTN_COLUMN5,0,1) = 'N' AND TO_CHAR(SYS_DATETIME,'yyyyMMddhh24miss') &lt; ESTN_COLUMN6 AND ESTN_COLUMN6 IS NOT NULL THEN 'PRO'
                                         ELSE ''
                                    END)                                     AS bizProgression
    </sql>

    <!-- 검색(searchType에 따라서 조건이 변경됨)-->
    <sql id="searchDynamic">
        <trim>
            <if test="q_ctgCd != null  and q_ctgCd != ''">
                AND A.CTG_CD = #{q_ctgCd}
            </if>
            <if test="q_bbsCd != null  and q_bbsCd != ''">
                AND A.BBS_CD = #{q_bbsCd}
            </if>
            <if test="bbsCd != null  and bbsCd != ''">
                AND A.BBS_CD = #{bbsCd}
            </if>
            <!-- q_bizStartDt -->
            <if test="q_bizStartDt != null  and q_bizStartDt != ''">
                AND A.ESTN_COLUMN6 &gt;= #{q_bizStartDt}
            </if>
            <!-- q_bizEndDt -->
            <if test="q_bizEndDt != null  and q_bizEndDt != ''">
                AND A.ESTN_COLUMN6 &lt;= #{q_bizEndDt}
            </if>
            <if test="q_searchVal != null  and q_searchVal != ''">
                <if test="q_searchType == 1001">
                    AND A.${q_searchKey} = #{q_searchVal}
                </if>
                <if test="q_searchType == 1002">
                    AND A.${q_searchKey} LIKE '%' || #{q_searchVal} || '%'
                </if>
                <if test="q_searchType == 1003">
                    AND A.${q_searchKey} &lt;= #{q_searchVal}
                </if>
                <if test="q_searchType == 1004">
                    AND A.${q_searchKey} &gt;= #{q_searchVal}
                </if>
                <if test="q_searchType == 1006"> <!-- 제목+내용 -->
                    AND (A.BBSCTT_SJ LIKE '%' || #{q_searchVal} || '%'  OR A.BBSCTT_CN LIKE '%' || #{q_searchVal} || '%')
                </if>
            </if>
            <if test="q_startDt != null  and q_startDt != ''">
                AND A.REGIST_DT &gt;= #{q_startDt}
            </if>
            <if test="q_endDt != null  and q_endDt != ''">
                AND A.REGIST_DT &lt;= #{q_endDt}
            </if>
        </trim>
    </sql>

    <!-- 정렬 -->
    <sql id="sortDynamic">
        <trim>
            <if test="section == 'myboardB'">
                ORDER BY A.ESTN_COLUMN6 ASC, A.REGIST_DT DESC
            </if>
            <if test="section == 'myboard'">
                ORDER BY A.REGIST_DT DESC, A.REFRN_SEQ DESC
            </if>
        </trim>
    </sql>

    <select id="myboardList" parameterType="map" resultType="myboardVO">
        <choose>
            <when test="bbsCd == '1010'">
            /* _myboard.myboardList*/
            SELECT Y.*
              FROM (SELECT ROWNUM NUM, X.*
                      FROM (
            /*_boardWeb : board-sqlmap.xml : boardListBody_BizMatching */
                <include refid="boardListBody_BizMatching"/>
                              FROM OP_BOARD A
                                 , (SELECT DISTINCT C.BBSCTT_SEQ
                                                  , C.USER_KEY
                                                  , CASE WHEN C.USER_KEY = #{userKey}
                                                         THEN '1'
                                                         ELSE '2'
                                                    END AS ESTN_COLUMN7
                                      FROM OP_BOARD C 
                                      LEFT OUTER JOIN OP_NTT_CMT D
                                        ON C.DOMAIN_CD = D.DOMAIN_CD
                                       AND C.BBS_CD = D.BBS_CD
                                       AND C.BBSCTT_SEQ = D.BBSCTT_SEQ
                                     WHERE C.DOMAIN_CD = #{domainCd}
                                       AND C.BBS_CD = #{bbsCd}
                                       AND (C.USER_KEY = #{userKey} OR D.USER_KEY = #{userKey})) B
                             WHERE A.BBSCTT_SEQ = B.BBSCTT_SEQ
                               AND A.DOMAIN_CD = #{domainCd}
                <include refid="searchDynamic"/>
                <include refid="sortDynamic"/>
                           ) X
                     WHERE ROWNUM &lt;= #{pagingEndNum}
                   ) Y
             WHERE NUM &gt;= #{pagingStartNum}
            </when>
            <otherwise>
            /* _myboard.myboardList*/
            SELECT Y.*
              FROM (SELECT ROWNUM NUM, X.*
                      FROM (
            /*_boardWeb : board-sqlmap.xml : boardListBody */
                <include refid="boardListBody"/>
                              FROM OP_BOARD A
                             WHERE A.USER_KEY = #{userKey}
                               AND A.DOMAIN_CD = #{domainCd}
                <include refid="searchDynamic"/>
                <include refid="sortDynamic"/>
                           ) X
                     WHERE ROWNUM &lt;= #{pagingEndNum}
                   ) Y
             WHERE NUM &gt;= #{pagingStartNum}
            </otherwise>
        </choose>
    </select>

    <select id="myboardListCount" parameterType="map" resultType="int">
        <choose>
            <when test="bbsCd == '1010'">
                /* _myboard.myboardListCount */
                SELECT COUNT(DISTINCT A.BBSCTT_SEQ) AS totalCount
                  FROM OP_BOARD A
                  LEFT OUTER JOIN OP_NTT_CMT B
                    ON A.DOMAIN_CD = B.DOMAIN_CD
                   AND A.BBS_CD = B.BBS_CD
                   AND A.BBSCTT_SEQ = B.BBSCTT_SEQ
                 WHERE A.DOMAIN_CD = #{domainCd}
                   AND (A.USER_KEY = #{userKey} OR B.USER_KEY = #{userKey})
            </when>
            <otherwise>
                /* _myboard.myboardListCount */
                SELECT COUNT(A.BBSCTT_SEQ) AS totalCount
                  FROM OP_BOARD A
                 WHERE A.USER_KEY = #{userKey}
                   AND A.DOMAIN_CD = #{domainCd}
            </otherwise>
        </choose>
        <include refid="searchDynamic"/>
        <include refid="sortDynamic"/>
    </select>

    <select id="totalboardList" parameterType="map" resultType="myboardVO">
        /* _myboard.totalboardList*/
        SELECT BBS_CD AS bbsCd
             , BBS_NM AS bbsNm
          FROM OP_BOARD_CONF
         WHERE DOMAIN_CD = #{domainCd}
    </select>
</mapper>