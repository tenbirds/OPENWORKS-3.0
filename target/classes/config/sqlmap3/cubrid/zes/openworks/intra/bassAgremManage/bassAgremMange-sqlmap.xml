<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="_bassAgremManage">

    <sql id="dynamicWhere">
		<if test="q_searchVal != null  and q_searchVal != ''">
        	AND CMPNY_NM LIKE '%' || #{q_searchVal} || '%'
		</if>
		<if test="q_agremstat != null  and q_agremstat != ''">
        	AND AGREM_STAT IN (${q_agremstat})
		</if>
		<if test="q_searchStatVal != null  and q_searchStatVal != ''">
        	AND AGREM_STAT = #{q_searchStatVal}
		</if>
    </sql>
    
    <select id="bassAgremManageList" parameterType="map" resultType="bassAgremManageVO">
    	/*_bassAgremManage.bassAgremManageList*/
      	SELECT Y.* FROM (
      		SELECT ROWNUM NUM, X.* FROM (
				SELECT BASS_AGREM_MANAGE_SEQ AS bassAgremManageSeq
				   , USER_ID AS userId
					 , CMPNY_NM AS cmpnyNm
					 , CHARGER_NM AS chargerNm
					 , TELNO AS telno
					 , DECRYPT(MBTLNUM, 'P007') AS mbtlnum
			         , DECRYPT(EMAIL, 'P008') AS email
					 , REPLACE(PRESENTN_PREARNGE_DE,'-','.') AS presentnPrearngeDe
					 , TO_CHAR(A.REGIST_DT,'YYYY.MM.DD') AS presentnDe
					 , REPLACE(CNCLS_COMPT_DE,'-','.') AS cnclsComptDe
					 , REPLACE(SNDNG_DE,'-','.') AS sndngDe
					 , AGREM_ORDER AS agremOrder
					 , REPLACE(AGREM_END_DE,'-','.') AS agremEndDe
					 , BASS_AGRMNT_FILE_SEQ AS bassAgrmntFileSeq
					 , RGSBUK_TRNSCR_FILE_SEQ AS rgsbukTrnscrFileSeq
					 , VNENTR_CRTF_FILE_SEQ AS vnentrCrtfFileSeq
					 , DIRECT_PRDCTN_CRTF_FILE_SEQ AS directPrdctnCrtfFileSeq
					 , CDLT_DOC_FILE_SEQ AS cdltDocFileSeq
					 , FNLTT_FILE_SEQ AS fnlttFileSeq
					 , LAST_AGRMNT_FILE_SEQ AS lastAgrmntFileSeq
					 , AGREM_NO AS agremNo
					 , REGIST_ID AS registId
					 , REGIST_DT AS registDt
					 , UPDT_ID AS updtId
					 , UPDT_DT AS updtDt
					 , DELETE_AT AS deleteAt
					 , AGREM_STAT AS agremStatCd
					 , CMPNY_LOCA AS cmpnyLoca
					 , (SELECT COUNT(1)
					      FROM TST_GOOD_INFO_I 
					     WHERE MNGR_DELETE_AT='N' 
					       AND LANG_CODE = '00' 
					       AND GOODS_REGIST_STTUS > 1001 
					       AND GOODS_CODE IN ( SELECT A.GOODS_CODE 
					                             FROM TST_GOOD_CATE_I A, TST_CATE_MGMT_M B
		                                        WHERE A.CTGRY_CODE = B.CTGRY_CODE 
		                                        GROUP BY A.GOODS_CODE )
					       AND USER_ID = A.USER_ID) AS goodsCnt
				  FROM TCM_BASS_AGREM_MANAGE_I A
				 WHERE DELETE_AT != 'Y'
				   <include refid="dynamicWhere"/>
		         ORDER BY REGIST_DT DESC
        	) X  WHERE ROWNUM &lt;= #{pagingEndNum}
		) Y  WHERE NUM &gt;= #{pagingStartNum}
    </select>
    
    <select id="bassAgremManageCount" parameterType="bassAgremManageVO" resultType="int">
     	/*_bassAgremManage.bassAgremManageCount*/      
        SELECT COUNT(1) AS totalCount
          FROM TCM_BASS_AGREM_MANAGE_I
		 WHERE DELETE_AT != 'Y'
		   <include refid="dynamicWhere"/>
    </select>
    
    <select id="bassAgremManageListExcel" parameterType="map" resultType="bassAgremManageVO">
    	/*_bassAgremManage.bassAgremManageListExcel*/
		SELECT BASS_AGREM_MANAGE_SEQ AS bassAgremManageSeq
		     , USER_ID AS userId
			 , CMPNY_NM AS cmpnyNm
			 , CHARGER_NM AS chargerNm
			 , TELNO AS telno
			 , DECRYPT(MBTLNUM, 'P007') AS mbtlnum
			 , DECRYPT(EMAIL, 'P008') AS email
			 , REPLACE(PRESENTN_PREARNGE_DE,'-','.') AS presentnPrearngeDe
			 , TO_CHAR(A.REGIST_DT,'YYYY.MM.DD') AS presentnDe
			 , REPLACE(CNCLS_COMPT_DE,'-','.') AS cnclsComptDe
			 , REPLACE(SNDNG_DE,'-','.') AS sndngDe
			 , AGREM_ORDER AS agremOrder
			 , REPLACE(AGREM_END_DE,'-','.') AS agremEndDe
			 , BASS_AGRMNT_FILE_SEQ AS bassAgrmntFileSeq
			 , RGSBUK_TRNSCR_FILE_SEQ AS rgsbukTrnscrFileSeq
			 , VNENTR_CRTF_FILE_SEQ AS vnentrCrtfFileSeq
			 , DIRECT_PRDCTN_CRTF_FILE_SEQ AS directPrdctnCrtfFileSeq
			 , CDLT_DOC_FILE_SEQ AS cdltDocFileSeq
			 , FNLTT_FILE_SEQ AS fnlttFileSeq
			 , AGREM_NO AS agremNo
			 , REGIST_ID AS registId
			 , REGIST_DT AS registDt
			 , UPDT_ID AS updtId
			 , UPDT_DT AS updtDt
			 , DELETE_AT AS deleteAt
			 , AGREM_STAT AS agremStatCd
			 , (SELECT COUNT(1) 
			      FROM TST_GOOD_INFO_I 
			     WHERE MNGR_DELETE_AT='N' 
			       AND LANG_CODE = '00' 
			       AND GOODS_REGIST_STTUS > 1001 
			       AND GOODS_CODE IN ( SELECT A.GOODS_CODE 
			                             FROM TST_GOOD_CATE_I A, TST_CATE_MGMT_M B
                                        WHERE A.CTGRY_CODE = B.CTGRY_CODE 
                                        GROUP BY A.GOODS_CODE )
			       AND USER_ID = A.USER_ID) AS goodsCnt
		  FROM TCM_BASS_AGREM_MANAGE_I A
		 WHERE DELETE_AT != 'Y'
		   <include refid="dynamicWhere"/>
	        ORDER BY REGIST_DT DESC
    </select>
    
    <select id="bassAgremManageView" parameterType="map" resultType="bassAgremManageVO">
    	/*_bassAgremManage.bassAgremManageView*/
		SELECT 
				  A.BASS_AGREM_MANAGE_SEQ AS bassAgremManageSeq 
				, A.USER_ID AS userId 
				, A.CMPNY_NM AS cmpnyNm 
				, A.CHARGER_NM AS chargerNm 
				, A.TELNO AS telno
				, DECRYPT(A.MBTLNUM, 'P007') AS mbtlnum
				, DECRYPT(A.EMAIL, 'P008') AS email
				, A.PRESENTN_PREARNGE_DE AS presentnPrearngeDe 
				, A.PRESENTN_DE AS presentnDe 
				, A.CNCLS_COMPT_DE AS cnclsComptDe
				, A.SNDNG_DE AS sndngDe
				, A.AGREM_ORDER AS agremOrder
				, A.AGREM_END_DE AS agremEndDe 
				, A.LAST_AGRMNT_FILE_SEQ AS lastAgrmntFileSeq 
				, A.BASS_AGRMNT_FILE_SEQ AS bassAgrmntFileSeq 
				, A.RGSBUK_TRNSCR_FILE_SEQ AS rgsbukTrnscrFileSeq 
				, A.VNENTR_CRTF_FILE_SEQ AS vnentrCrtfFileSeq 
				, A.DIRECT_PRDCTN_CRTF_FILE_SEQ AS directPrdctnCrtfFileSeq 
				, A.CDLT_DOC_FILE_SEQ AS cdltDocFileSeq 
				, A.FNLTT_FILE_SEQ AS fnlttFileSeq 
				, A.AGREM_NO AS agremNo 
				, A.REGIST_ID AS registId
				, A.REGIST_DT AS registDt
				, A.UPDT_ID AS updtId 
				, A.UPDT_DT AS updtDt 
				, A.DELETE_AT AS deleteAt 
				, AGREM_STAT AS agremStatCd 
				, A.MANG_COMT AS mangComt 
				, (SELECT USER_TY_CD FROM OP_USER WHERE  USER_ID = A.USER_ID) AS userTyCd
		  FROM TCM_BASS_AGREM_MANAGE_I A
		 WHERE A.DELETE_AT != 'Y'
		   AND A.BASS_AGREM_MANAGE_SEQ = #{bassAgremManageSeq}
    </select>
    
    <insert id="bassAgremManageInsertAction" parameterType="bassAgremManageVO">
    	/*_bassAgremManage.bassAgremManageInsertAction*/
		INSERT INTO TCM_BASS_AGREM_MANAGE_I 
			 ( BASS_AGREM_MANAGE_SEQ
             , USER_ID
			 , CMPNY_NM
			 , CHARGER_NM
			 , TELNO
			 , MBTLNUM
			 , EMAIL
			 , PRESENTN_PREARNGE_DE
			 , PRESENTN_DE
			 , CNCLS_COMPT_DE
			 , SNDNG_DE
			 , AGREM_ORDER
			 , AGREM_END_DE
			 , BASS_AGRMNT_FILE_SEQ
			 , RGSBUK_TRNSCR_FILE_SEQ
			 , VNENTR_CRTF_FILE_SEQ
			 , DIRECT_PRDCTN_CRTF_FILE_SEQ
			 , CDLT_DOC_FILE_SEQ
			 , FNLTT_FILE_SEQ
			 , AGREM_NO
			 , REGIST_ID
			 , REGIST_DT
			 , UPDT_ID
			 , UPDT_DT
			 , DELETE_AT
			 , AGREM_STAT
		     ) 
		VALUES 
			 ( (SELECT MAX(BASS_AGREM_MANAGE_SEQ) + 1 FROM TCM_BASS_AGREM_MANAGE_I) 
		     , #{userId}
			 , #{cmpnyNm}
			 , #{chargerNm}
			 , #{telno}
			 , ENCRYPT(#{mbtlnum},'P007')
			 , ENCRYPT(#{email},'P008')
			 , TO_CHAR(SYSDATE,'YYYY-MM-DD')
			 , TO_CHAR(SYSDATE,'YYYY-MM-DD')
			 , TO_CHAR(SYSDATE,'YYYY-MM-DD')
			 , TO_CHAR(SYSDATE,'YYYY-MM-DD')
			 , (SELECT BASS_DEGREE FROM TCM_BASS_DEGREE_I WHERE TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN BASS_DEGREE_STDT AND BASS_DEGREE_ENDDT ORDER BY BASS_DEGREE DESC LIMIT 1)
			 , (SELECT TO_CHAR(TO_DATE(BASS_DEGREE_ENDDT,'yyyymmdd'),'YYYY-MM-DD') AS BASS_DEGREE_ENDDT FROM TCM_BASS_DEGREE_I WHERE TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN BASS_DEGREE_STDT AND BASS_DEGREE_ENDDT ORDER BY BASS_DEGREE DESC LIMIT 1)
			 , #{bassAgrmntFileSeq}
			 , #{rgsbukTrnscrFileSeq}
			 , #{vnentrCrtfFileSeq}
			 , #{directPrdctnCrtfFileSeq}
			 , #{cdltDocFileSeq}
			 , #{fnlttFileSeq}
			 , #{agremNo}
			 , #{registId}
			 , SYS_DATETIME
			 , #{updtId}
			 , SYS_DATETIME
			 , 'N'
			 , 1004
			 )
	</insert>
    
    <update id="bassAgremManageUpdateAction" parameterType="bassAgremManageVO">
    	/*_bassAgremManage.bassAgremManageUpdateAction*/
    	UPDATE TCM_BASS_AGREM_MANAGE_I 
		   SET AGREM_STAT = #{agremStat}
			  , MANG_COMT = #{mangComt}
			  <!-- <if test="presentnDe != null  and presentnDe != ''">  2017 - 01 - 11 수정
        		 , PRESENTN_DE = #{presentnDe}
			  </if> -->
			   <!-- <if test="cnclsComptDe != null  and cnclsComptDe != ''">
        		 , CNCLS_COMPT_DE = #{cnclsComptDe}
			  </if> -->
			  <!--  <if test="sndngDe != null  and sndngDe != ''">
        		 , SNDNG_DE = #{sndngDe}
			  </if>	   -->
			  <if test="agremStat == '1004'">
			  	, LAST_AGRMNT_FILE_SEQ = #{lastAgrmntFileSeq}
			  	, CNCLS_COMPT_DE = #{cnclsComptDe}
				  <if test="agremNo != null and agremNo != ''">
				  	, AGREM_NO = #{agremNo}
				  </if>
			  </if>
		 WHERE BASS_AGREM_MANAGE_SEQ = #{bassAgremManageSeq}
    </update>
    
    <update id="opUserUpdateAction" parameterType="bassAgremManageVO">
    	/*_bassAgremManage.opUserUpdateAction*/
    	UPDATE OP_USER
		   SET AGREM_STAT = #{agremStat}
		  	   ,USER_TY_CD = #{userTyCd}
		 WHERE USER_ID = #{userId}
    </update>
    
    <update id="tumSvcStorIUpdateAction" parameterType="bassAgremManageVO">
    	/*_bassAgremManage.tumSvcStorIUpdateAction */
    	UPDATE tum_svc_stor_i 
		   SET store_actvty_at = 'Y'
		 WHERE USER_ID = #{userId}
    </update>
    
    
    <update id="bassAgremManageDeleteAction" parameterType="bassAgremManageVO">
    	/*_bassAgremManage.bassAgremManageDeleteAction*/
    	UPDATE TCM_BASS_AGREM_MANAGE_I 
		   SET DELETE_AT = 'Y'
		 WHERE BASS_AGREM_MANAGE_SEQ = #{bassAgremManageSeq}
    </update>
    
    <select id="sellerList" parameterType="map" resultType="userVO">
        /* _bassAgremManage.sellerList */
        SELECT Y.*
          FROM (SELECT ROWNUM NUM, X.*
                  FROM (SELECT A.USER_ID AS userId
                             , A.USER_NM AS userNm
                             , B.CMPNY_NM AS cmpnyNm
                             , A.TELNO AS telno
                             , DECRYPT(A.MBTLNUM, 'P007') AS mbtlnum
                             , DECRYPT(A.EMAIL, 'P008') AS email
                          FROM OP_USER A, OP_USER_ENTRPRS_OPTION B
                         WHERE A.USER_ID = B.USER_ID
                           AND A.USER_TY_CD IN (2002)
                           AND A.USER_STTUS_CD = 1001
                           AND A.LANG_CODE = '00'
                          <include refid="sellerWhere"/>
                        ORDER BY A.USER_NM ASC
                       )X
                 WHERE ROWNUM &lt;= #{pagingEndNum}
               ) Y
         WHERE NUM &gt;= #{pagingStartNum}
    </select>

    <select id="sellerListCount" parameterType="map" resultType="int">
        /* _bassAgremManage.sellerListCount */
        SELECT COUNT(A.USER_ID) AS totalCount
          FROM OP_USER A, OP_USER_ENTRPRS_OPTION B
         WHERE A.USER_ID = B.USER_ID
           AND A.USER_TY_CD IN (2002)
           AND A.USER_STTUS_CD = 1001
           AND A.LANG_CODE = '00'
           <include refid="sellerWhere"/>
    </select>
    
    <sql id="sellerWhere">
        <if test="q_searchKey != null  and q_searchKey != ''">
            <choose>
                <!-- 회사명 -->
                <when test="q_searchKey == '1003'">
                AND B.CMPNY_NM LIKE '%' || #{q_searchVal} || '%'
                </when>
                <!-- 판매자ID -->
                <when test="q_searchKey == '1001'">
                AND A.USER_ID LIKE '%' || #{q_searchVal} || '%'
                </when>
                <!-- 판매자명 -->
                <when test="q_searchKey == '1002'">
                AND A.USER_NM LIKE '%' || #{q_searchVal} || '%'
                </when>
            </choose>
        </if>
    </sql>

	<!--
     * SQL 명      : _bassAgremManage.bassAgremClosUserList
     * 기능(설명)  : 협약 종료 사용자 목록 조회 - WAS 시간(날짜) 기준으로 조회 하도록 수정(2017.04.27)
     * 작   성   자  : (주)엔키소프트
     * 작   성   일  : 2017-04-25
    -->
    <select id="bassAgremClosUserList" parameterType="map" resultType="bassAgremManageVO">
        /* _bassAgremManage.bassAgremClosUserList */
        SELECT USER_ID           AS userId
             , MAX(AGREM_END_DE) AS agremEndDe
          FROM TCM_BASS_AGREM_MANAGE_I
         WHERE AGREM_STAT = '1004' /*협약상태(1004:승인)*/
           AND DELETE_AT = 'N'
           /*AND TO_CHAR(TO_DATE(AGREM_END_DE), 'YYYYMMDD') = TO_CHAR(ADDDATE(SYSDATE, -1), 'YYYYMMDD')*/
           AND TO_CHAR(TO_DATE(AGREM_END_DE), 'YYYYMMDD') = TO_CHAR(ADDDATE(TO_DATE(#{paramDate},'YYYYMMDD'),-1), 'YYYYMMDD')
         GROUP BY USER_ID
    </select>

	<!--
     * SQL 명      : _bassAgremManage.opUserBassAgremClosAction
     * 기능(설명)  : 협약 종료에 따른 사용자 전환(공급자->수요자)(OP_USER 테이블 Update)
     * 작   성   자  : (주)엔키소프트
     * 작   성   일  : 2017-04-25
    -->
    <update id="opUserBassAgremClosAction" parameterType="bassAgremManageVO">
        /* _bassAgremManage.opUserBassAgremClosAction */
        UPDATE OP_USER SET USER_TY_CD    = TO_NUMBER(CONCAT(SUBSTR(USER_TY_CD,1,2), '01')) /*USER_TY_CD의 뒷 두자리를 01로 변경*/
                         , AGREM_STAT    = '1005'                                          /*GROUP_CD:2035 ==> 협약종료(1005)*/
                         , AGREM_APPR_DT = SYSDATETIME                                     /**/
                         , UPDT_ID       = 'ceartmarket'                                   /*수정자ID*/
                         , UPDT_DT       = SYSDATETIME                                     /*수정일자*/
         WHERE USER_ID = #{userId}
    </update>

	<!--
     * SQL 명      : _bassAgremManage.tumSvcStorBassAgremClosAction
     * 기능(설명)  : 협약 종료에 따른 사용자 전환(공급자->수요자)(TUM_SVC_STOR_I 테이블 Update)
     * 작   성   자  : (주)엔키소프트
     * 작   성   일  : 2017-04-25
    -->
    <update id="tumSvcStorBassAgremClosAction" parameterType="bassAgremManageVO">
        /* _bassAgremManage.tumSvcStorBassAgremClosAction */
        UPDATE TUM_SVC_STOR_I SET STORE_ACTVTY_AT = 'N'  /*상점활성여부(Y:활성, N:비활성)*/
         WHERE USER_ID = #{userId}
    </update>

	<!--
     * SQL 명      : _bassAgremManage.tstGoodInfoBassAgremClosAction
     * 기능(설명)  : 협약 종료에 따른 해당 사용자의 상품을 비전시로 전환
     * 작   성   자  : (주)엔키소프트
     * 작   성   일  : 2017-04-25
    -->
    <update id="tstGoodInfoBassAgremClosAction" parameterType="bassAgremManageVO">
        /* _bassAgremManage.tstGoodInfoBassAgremClosAction */
        UPDATE TST_GOOD_INFO_I SET GOODS_REGIST_STTUS = 1007
                                 , UPDT_ID = 'ceartmarket'     /*수정자ID*/
                                 , UPDT_DT = SYSDATETIME       /*수정일자*/
         WHERE USER_ID = #{userId}
    </update>

	<!--
     * SQL 명      : _bassAgremManage.bassAgremManageClosAction
     * 기능(설명)  : 해당 사용자의 협약정보의 협약상태 변경[승인(1004) -> 협약종료(1005)]
     * 작   성   자  : (주)엔키소프트
     * 작   성   일  : 2017-04-25
    -->
    <update id="bassAgremManageClosAction" parameterType="bassAgremManageVO">
        /* _bassAgremManage.bassAgremManageClosAction */
        UPDATE TCM_BASS_AGREM_MANAGE_I SET AGREM_STAT = '1005'      /*GROUP_CD:2035 ==> 협약종료(1005)*/
                                         , UPDT_ID = 'ceartmarket'  /*수정자ID*/
                                         , UPDT_DT = SYSDATETIME    /*수정일자*/
         WHERE USER_ID      = #{userId}
           AND AGREM_END_DE = #{agremEndDe}
    </update>
    
	<!--
     * SQL 명      : 
     * 기능(설명)  : 
     * 작   성   자  : (주)엔키소프트
     * 작   성   일  : 2011-01-30
    -->
    <select id="bassAgremManageSummaryList" parameterType="map" resultType="bassAgremSummaryVO">
        /* _bassAgremManage.bassAgremManageSummaryList */
 	SELECT (SELECT  COUNT(*)  FROM  TCM_BASS_AGREM_MANAGE_I A WHERE AGREM_STAT = 1004) as normalityAgreement     /* 정상 협약건수 */
	      ,(SELECT  COUNT(*)  FROM  TCM_BASS_AGREM_MANAGE_I A WHERE AGREM_STAT = 1004 AND agrem_order = 2)  as admissionCompletion    /* 승인완료건수 */
	      ,(SELECT  COUNT(*)  FROM  TCM_BASS_AGREM_MANAGE_I A WHERE AGREM_STAT = 1004 AND agrem_order = 1)   as updateAgreement        /* 협약갱신건수 */
	      ,(SELECT  COUNT(*)  FROM  TCM_BASS_AGREM_MANAGE_I A WHERE AGREM_STAT IN (1003,1007) AND agrem_order = 1)  as returnSupplementation  /* 반려/보완신청건수 */
	      ,(SELECT  COUNT(*)  FROM  TCM_BASS_AGREM_MANAGE_I A WHERE AGREM_STAT = 1005 AND agrem_order = 1)   as agreementExpiration    /* 협약종료 건수 */
	               
    </select>

	<!--
     * SQL 명      : _bassAgremManage.bassAgremManageUpdateUserAction
     * 기능(설명)  : 협약기업 담당자정보 변경
     * 작   성   자  : 이홍석
     * 작   성   일  : 2018-02-20
    -->
    <update id="bassAgremManageUpdateUserAction" parameterType="bassAgremSummaryVO" >
        /* _bassAgremManage.bassAgremManageUpdateUserAction */
        UPDATE TCM_BASS_AGREM_MANAGE_I 
           SET CHARGER_NM = #{chargerNm}    
              ,TELNO      = #{telno}
              ,MBTLNUM    = #{mbtlnum}
              ,EMAIL      = #{email}
         WHERE BASS_AGREM_MANAGE_SEQ = #{bassAgremManageSeq}
         
    </update>
</mapper>